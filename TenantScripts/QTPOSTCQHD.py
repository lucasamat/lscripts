# ==========================================================================================
#   __script_name : QTPOSTCQHD.PY(P)
#   __script_description : THIS SCRIPT IS USED TO CREATE QUOTE JSON FOR HADOOP
#   __primary_author__ : SURESH MUNIYANDI, Baji
#   __create_date :
#   ÃâÃÂ© BOSTON HARBOR TECHNOLOGY LLC - ALL RIGHTS RESERVED
# ==========================================================================================
# Modified Date : 23-Aug-2022
# Modified By   : Suresh Muniyandi / Baji
# Modified Desc : Incident INC08608227, to provide the proper json response to CPI after the 
#                 completion of CPQ web service
# Affected Line : 46, 50, 417 & 418 API response code modified
# Affected Table: None
# ==========================================================================================
# Modified Date : 23-Aug-2022
# Modified By   : Suresh Muniyandi / Baji
# Modified Desc : Incident INC08632573, Enable logs in CPQ script for SAP CPQ monitoring. 
#                 
# Affected Line : 1
# Affected Table: None
# ==========================================================================================
# Modified Date : 28-Sep-2022
# Modified By   : Suresh Muniyandi / Baji
# Modified Desc : CR, Only deltas / modified revision data needs to be sent to Hadoop. 
#                 added and modified date should go with timestamp.
# Affected Line : 1
# Affected Table: None
# ==========================================================================================
# Modified Date : 03-Oct-2022
# Modified By   : Suresh Muniyandi / Baji
# Modified Desc : Incident INC08719610 CPQ Compression. 
#                 
# Affected Line : 1
# Affected Table: None
# ==========================================================================================
# Modified Date : 18-Oct-2022
# Modified By   : Suresh Muniyandi / Baji
# Modified Desc : Incident INC08834928 SAQAPP approval table fix to send correct records to 
#                 Hadoop.
# Affected Table: None
# ==========================================================================================
# Modified Date : 25-Oct-2022
# Modified By   : Suresh Muniyandi / Baji
# Modified Desc : CR649 PCR42669  - SAQSCO / SAQGPA / SAQSPT tables are added. 
#                 
# Affected Table: None
# ==========================================================================================
Log.Write('Global script executed')
import sys
import clr
import System.Net
from System.Text.Encoding import UTF8
from System import Convert
from System.Net import HttpWebRequest, NetworkCredential
from System.Net import *
from System.Net import CookieContainer
from System.Net import Cookie
from System.Net import WebRequest
from System.Net import HttpWebResponse
from System import Uri
clr.AddReference("System.Net")
from System.Net import CookieContainer, NetworkCredential, Mail
from System.Net.Mail import SmtpClient, MailAddress, Attachment, MailMessage

try:

    SAQIEN = 'SAQIEN_INBOUND'
    SAQIEN_DRP = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(SAQIEN)+"'' ) BEGIN DROP TABLE "+str(SAQIEN)+" END  ' ") 

    SAQSCE = 'SAQSCE_INBOUND'
    SAQIEN_DRP = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(SAQSCE)+"'' ) BEGIN DROP TABLE "+str(SAQSCE)+" END  ' ") 

    Jsonquery = SqlHelper.GetFirst("select getdate() as date,DATEADD(HOUR,-2    ,getdate()) as filter  ")
    
    response=''
    compressBody = True #INC08719610
    
    #Update Flag as False in Quote Revision
    Quoteinf1 = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTRV SET HADOOP = ''FALSE'' FROM SAQTRV (NOLOCK)A JOIN (SELECT DISTINCT  Quote_id, QTEREV_iD FROM SAQTMT(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' union select  Quote_id, QTEREV_iD from SAQTRV (NOLOCK) where isnull(hadoop,''False'') = ''False'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQTRV(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQTIP(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQRIB(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQDOC(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQRIT(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"''  )B ON A.Quote_id = B.Quote_id AND A.QTEREV_ID = B.QTEREV_ID  '")
    
    #Update Flag as False in Quote Revision
    Quoteinf1 = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTRV SET HADOOP = ''FALSE'' FROM SAQTRV (NOLOCK)A JOIN (SELECT DISTINCT  Quote_id, QTEREV_iD FROM SAQTMT(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' union select  Quote_id, QTEREV_iD from SAQTRV (NOLOCK) where isnull(hadoop,''False'') = ''False'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQTRV(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQTIP(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQRIB(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQDOC(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQRIT(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"''  )B ON A.Quote_id = B.Quote_id AND A.QTEREV_ID = B.QTEREV_ID  '")

    Quoteinf1 = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTRV SET HADOOP = ''FALSE'' FROM SAQTRV (NOLOCK)A JOIN (SELECT  Quote_id, QTEREV_iD FROM SAQICO(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQICA(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' )B ON A.Quote_id = B.Quote_id AND A.QTEREV_ID = B.QTEREV_ID '")

    Quoteinf1 = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTRV SET HADOOP = ''FALSE'' FROM SAQTRV (NOLOCK)A JOIN (SELECT  Quote_id, QTEREV_iD FROM SAQIFP(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQRSH(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' )B ON A.Quote_id = B.Quote_id AND A.QTEREV_ID = B.QTEREV_ID '")

    Quoteinf1 = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTRV SET HADOOP = ''FALSE'' FROM SAQTRV (NOLOCK)A JOIN (SELECT  Quote_id, QTEREV_iD FROM SAQIBP(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' )B ON A.Quote_id = B.Quote_id AND A.QTEREV_ID = B.QTEREV_ID '")

    Quoteinf1 = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTRV SET HADOOP = ''FALSE'' FROM SAQTRV (NOLOCK)A JOIN (SELECT  Quote_id, QTEREV_iD FROM SAQITE(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' )B ON A.Quote_id = B.Quote_id AND A.QTEREV_ID = B.QTEREV_ID '")

    Quoteinf1 = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTRV SET HADOOP = ''FALSE'' FROM SAQTRV (NOLOCK)A JOIN (SELECT  Quote_id, QTEREV_iD FROM SAQCBC(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQSAP(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQSAF(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQIPD(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"''  )B ON A.Quote_id = B.Quote_id AND A.QTEREV_ID = B.QTEREV_ID  '")
    
    Quoteinf1 = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTRV SET HADOOP = ''FALSE'' FROM SAQTRV (NOLOCK)A JOIN (SELECT  Quote_id, QTEREV_iD FROM SAQSCO(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQSPT(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' UNION SELECT  Quote_id, QTEREV_iD FROM SAQGPA(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' OR CpqTableEntryDateModified > ''"+str(Jsonquery.filter)+"'' )B ON A.Quote_id = B.Quote_id AND A.QTEREV_ID = B.QTEREV_ID  '")
    
    #Update Flag as False in Quote Header
    Quoteinf = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE SAQTMT SET HADOOP_FLAG = ''FALSE'' WHERE  QUOTE_ID IN (select  Quote_id from SAQTRV(NOLOCK) where isnull(hadoop,''False'') = ''False'' )  '")
    
    #Fetch the modified revisions
    Quoteinfoquery = SqlHelper.GetList("SELECT SAQTMT.QUOTE_ID,QTEREV_ID = (SELECT STUFF((SELECT ',' +CONVERT(VARCHAR(100),QTEREV_ID) FROM (SELECT  Quote_id,QTEREV_ID FROM SAQTRV(NOLOCK) WHERE ISNULL(HADOOP,'FALSE')='FALSE')A WHERE A.QUOTE_ID = SAQTMT.QUOTE_ID FOR XML PATH ('')), 1, 1, '') ) FROM SAQTMT (NOLOCK) WHERE ISNULL(HADOOP_FLAG,'FALSE')='FALSE' GROUP BY SAQTMT.QUOTE_ID ")

    Parameter = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'SELECT' ")
    Parameter1 = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'UPD' ")

    data_check_flag = 0

    for data in Quoteinfoquery:

        data_check_flag = 1
        
        Dateinfo = SqlHelper.GetFirst("SELECT GETDATE() AS A")
        FILE_CREATED_DATETIME = "'" + str(Dateinfo.A) + "'"     

        sessionid = SqlHelper.GetFirst("SELECT NEWID() AS A")
        timestamp_sessionid = "'" + str(sessionid.A) + "'"
        
        Session_lst = ""
        Qt_ID = str(data.QUOTE_ID)
        Revision = Session_lst + "" + data.QTEREV_ID + ","
        
        Log.Info("45678 Qt_ID------>"+str(Qt_ID)+"---"+str(Revision))

        SAQTMT_QUERY = SqlHelper.GetFirst(" SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQTMT\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ACCOUNT_ID\" : \"'+ACCOUNT_ID+'\",\"C4C_QUOTE_ID\" : \"'+C4C_QUOTE_ID+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"CRM_CONTRACT_ID\" : \"'+CRM_CONTRACT_ID+'\",\"CUSTOMER_NOTES\" : \"'+CUSTOMER_NOTES+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"NET_VALUE\" : \"'+NET_VALUE+'\",\"QUOTE_APPROVE_DATE\" : \"'+QUOTE_APPROVE_DATE+'\",\"QUOTE_CREATED_DATE\" : \"'+QUOTE_CREATED_DATE+'\",\"QUOTE_EXPIRE_DATE\" : \"'+QUOTE_EXPIRE_DATE+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"QUOTE_NAME\" : \"'+QUOTE_NAME+'\",\"QUOTE_STATUS\" : \"'+QUOTE_STATUS+'\",\"REASONFOR_REJECTION\" : \"'+REASONFOR_REJECTION+'\",\"SALE_TYPE\" : \"'+SALE_TYPE+'\",\"SOURCE_CONTRACT_ID\" : \"'+SOURCE_CONTRACT_ID+'\",\"POES\" : \"'+POES+'\",\"OPPORTUNITY_ID\" : \"'+OPPORTUNITY_ID+'\",\"OPPORTUNITY_NAME\" : \"'+OPPORTUNITY_NAME+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"CRM_OPPORTUNITY_ID\" : \"'+CRM_OPPORTUNITY_ID+'\",\"CRM_QUOTE_ID\" : \"'+CRM_QUOTE_ID+'\",\"LOW\" : \"'+LOW+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"OWNER_ID\" : \"'+OWNER_ID+'\",\"ECC_CONTRACT_ID\" : \"'+ECC_CONTRACT_ID+'\",\"OWNER_NAME\" : \"'+OWNER_NAME+'\",\"TIMESTAMP\" : \"'+TIMESTAMP+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(SAQTMT.ACCOUNT_ID,'') AS    ACCOUNT_ID,ISNULL(SAQTMT.C4C_QUOTE_ID,'')   AS  C4C_QUOTE_ID,ISNULL(CONVERT(VARCHAR(11),SAQTMT.CONTRACT_VALID_FROM,101),'') AS  CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),SAQTMT.CONTRACT_VALID_TO,101),'')    AS  CONTRACT_VALID_TO,ISNULL(SAQTRV.CRM_CONTRACT_ID,'') AS  CRM_CONTRACT_ID,ISNULL(SAQTMT.CUSTOMER_NOTES,'')    AS  CUSTOMER_NOTES,ISNULL(SAQTMT.GLOBAL_CURRENCY,'')    AS  GLOBAL_CURRENCY,ISNULL(CONVERT(VARCHAR,SAQTMT.NET_VALUE),'')    AS  NET_VALUE,ISNULL(CONVERT(VARCHAR(11),SAQTMT.QUOTE_APPROVE_DATE,101),'') AS  QUOTE_APPROVE_DATE,ISNULL(CONVERT(VARCHAR(11),SAQTMT.QUOTE_CREATED_DATE,101),'') AS QUOTE_CREATED_DATE,ISNULL(CONVERT(VARCHAR(11),SAQTMT.QUOTE_EXPIRE_DATE,101),'') AS  QUOTE_EXPIRE_DATE,ISNULL(SAQTMT.QUOTE_ID,'')    AS  QUOTE_ID,ISNULL(SAQTMT.QUOTE_NAME,'')   AS  QUOTE_NAME,ISNULL(SAQTMT.QUOTE_STATUS,'')   AS  QUOTE_STATUS,ISNULL(SAQTMT.REASONFOR_REJECTION,'') AS   REASONFOR_REJECTION,ISNULL(SAQTMT.SALE_TYPE,'') AS  SALE_TYPE,ISNULL(SAQTMT.SOURCE_CONTRACT_ID,'')  AS  SOURCE_CONTRACT_ID,ISNULL(CONVERT(VARCHAR,SAQTMT.POES),'')  AS  POES,ISNULL(SAOPQT.OPPORTUNITY_ID,'')   AS  OPPORTUNITY_ID,ISNULL(SAOPQT.OPPORTUNITY_NAME,'')   AS  OPPORTUNITY_NAME,ISNULL(CONVERT(VARCHAR,SAQTMT.QTEREV_ID),'') AS    QTEREV_ID,ISNULL(CONVERT(VARCHAR,SAQTMT.CRM_OPPORTUNITY_ID),'') AS  CRM_OPPORTUNITY_ID,ISNULL(CONVERT(VARCHAR,SAQTMT.CRM_QUOTE_ID),'') AS   CRM_QUOTE_ID,ISNULL(CONVERT(VARCHAR,SAQTMT.LOW),'') AS  LOW,"+str(timestamp_sessionid)+" as SESSION_ID,"+str(FILE_CREATED_DATETIME)+" as TIMESTAMP,ISNULL(OWNER_ID,'') AS OWNER_ID,ISNULL(OWNER_NAME,'') AS OWNER_NAME,ISNULL(CONVERT(VARCHAR,SAQTMT.ECC_CONTRACT_ID),'') AS    ECC_CONTRACT_ID,ISNULL(CONVERT(VARCHAR(100),SAQTMT.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQTMT.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQTMT.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQTMT.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY FROM SAQTMT (NOLOCK) LEFT JOIN SAQTRV(NOLOCK) ON SAQTMT.QUOTE_ID = SAQTRV.QUOTE_ID AND SAQTMT.QTEREV_ID = SAQTRV.QTEREV_ID LEFT JOIN SAOPQT(NOLOCK) ON SAQTMT.QUOTE_ID = SAOPQT.QUOTE_ID WHERE SAQTMT.QUOTE_ID = '"+str(Qt_ID)+"'  ) t  ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")  
        
        #SAQTRV
        SAQTRV_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQTRV\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ACCOUNT_ID\" : \"'+ACCOUNT_ID+'\",\"ACCOUNT_PRICING_PROCEDURE\" : \"'+ACCOUNT_PRICING_PROCEDURE+'\",\"ACCTAXCAT_ID\" : \"'+ACCTAXCAT_ID+'\",\"ACCTAXCLA_ID\" : \"'+ACCTAXCLA_ID+'\",\"COUNTRY\" : \"'+COUNTRY+'\",\"DISTRIBUTIONCHANNEL_ID\" : \"'+DISTRIBUTIONCHANNEL_ID+'\",\"DIVISION_ID\" : \"'+DIVISION_ID+'\",\"DOCUMENT_PRICING_PROCEDURE\" : \"'+DOCUMENT_PRICING_PROCEDURE+'\",\"EXCHANGE_RATE\" : \"'+EXCHANGE_RATE+'\"      ,\"EXCHANGE_RATE_DATE\" : \"'+EXCHANGE_RATE_DATE+'\",\"EXCHANGE_RATE_TYPE\" : \"'+EXCHANGE_RATE_TYPE+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"PRICINGPROCEDURE_ID\" : \"'+PRICINGPROCEDURE_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"REGION\" : \"'+REGION+'\",\"SALESOFFICE_ID\" : \"'+SALESOFFICE_ID+'\",\"SORG_CURRENCY\" : \"'+SORG_CURRENCY+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"BLUEBOOK\" : \"'+BLUEBOOK+'\",\"DOCTYP_ID\" : \"'+DOCTYP_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"REVISION_NAME\" : \"'+REVISION_NAME+'\",\"REVISION_DESCRIPTION\" : \"'+REVISION_DESCRIPTION+'\",\"REVISION_STATUS\" : \"'+REVISION_STATUS+'\",\"REV_CREATE_DATE\" : \"'+REV_CREATE_DATE+'\",\"REV_APPROVE_DATE\" : \"'+REV_APPROVE_DATE+'\",\"REV_EXPIRE_DATE\" : \"'+REV_EXPIRE_DATE+'\",\"ACTIVE\" : \"'+ACTIVE+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"INCOTERM_ID\" : \"'+INCOTERM_ID+'\",\"INCOTERM_NAME\" : \"'+INCOTERM_NAME+'\",\"PAYMENTTERM_ID\" : \"'+PAYMENTTERM_ID+'\",\"PAYMENTTERM_NAME\" : \"'+PAYMENTTERM_NAME+'\",\"ADVANCED_SHIPPING_EMAIL\" : \"'+ADVANCED_SHIPPING_EMAIL+'\",\"BD_PRICE_INGL_CURR\" : \"'+BD_PRICE_INGL_CURR+'\",\"CEILING_PRICE_INGL_CURR\" : \"'+CEILING_PRICE_INGL_CURR+'\",\"COMPANY_ID\" : \"'+COMPANY_ID+'\",\"CONTRACT_TYPE\" : \"'+CONTRACT_TYPE+'\",\"TARGET_PRICE_INGL_CURR\" : \"'+TARGET_PRICE_INGL_CURR+'\",\"TAX_AMOUNT_INGL_CURR\" : \"'+TAX_AMOUNT_INGL_CURR+'\",\"DISCOUNT_PERCENT\" : \"'+DISCOUNT_PERCENT+'\",\"APPDTE_EXCH_RATE\" : \"'+APPDTE_EXCH_RATE+'\",\"APPLIED_EMAIL\" : \"'+APPLIED_EMAIL+'\",\"APPLIED_NAME\" : \"'+APPLIED_NAME+'\",\"APPLIED_TITLE\" : \"'+APPLIED_TITLE+'\",\"BANK_ID\" : \"'+BANK_ID+'\",\"CANCELLATION_PERIOD_EXCEPTION\" : \"'+CANCELLATION_PERIOD_EXCEPTION+'\",\"CANCELLATION_PERIOD\" : \"'+CANCELLATION_PERIOD+'\",\"CLM_AGREEMENT_NUM\" : \"'+CLM_AGREEMENT_NUM+'\",\"CLM_AGREEMENT_OWNER\" : \"'+CLM_AGREEMENT_OWNER+'\",\"CLM_CONTRACT_TYPE\" : \"'+CLM_CONTRACT_TYPE+'\",\"CLM_TEMPLATE_NAME\" : \"'+CLM_TEMPLATE_NAME+'\",\"CUSTOMER_NOTES\" : \"'+CUSTOMER_NOTES+'\",\"EXTERNAL_EMAIL\" : \"'+EXTERNAL_EMAIL+'\",\"EXTERNAL_NAME\" : \"'+EXTERNAL_NAME+'\",\"EXTERNAL_TITLE\" : \"'+EXTERNAL_TITLE+'\",\"HLV_ORG_BUN\" : \"'+HLV_ORG_BUN+'\",\"INTERNAL_NOTES\" : \"'+INTERNAL_NOTES+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"DISCOUNT_AMOUNT_INGL_CURR\" : \"'+DISCOUNT_AMOUNT_INGL_CURR+'\",\"CREDIT_INGL_CURR\" : \"'+CREDIT_INGL_CURR+'\",\"NET_VALUE_INGL_CURR\" : \"'+NET_VALUE_INGL_CURR+'\",\"SALES_PRICE_INGL_CURR\" : \"'+SALES_PRICE_INGL_CURR+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"TRANSACTION_TYPE\" : \"'+TRANSACTION_TYPE+'\",\"NET_PRICE_INGL_CURR\" : \"'+NET_PRICE_INGL_CURR+'\",\"PAYMENTTERM_DAYS\" : \"'+PAYMENTTERM_DAYS+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(SAQTMT.ACCOUNT_ID,'')  AS  ACCOUNT_ID,ISNULL(SAQTRV.ACCOUNT_PRICING_PROCEDURE,'')  AS  ACCOUNT_PRICING_PROCEDURE,ISNULL(SAQTRV.ACCTAXCAT_ID,'') AS ACCTAXCAT_ID,ISNULL(SAQTRV.ACCTAXCLA_ID,'') AS  ACCTAXCLA_ID,ISNULL(SAQTRV.COUNTRY,'')  AS  COUNTRY,ISNULL(SAQTRV.DISTRIBUTIONCHANNEL_ID,'')    AS  DISTRIBUTIONCHANNEL_ID,ISNULL(SAQTRV.DIVISION_ID,'') AS DIVISION_ID,ISNULL(SAQTRV.DOCUMENT_PRICING_PROCEDURE,'')    AS  DOCUMENT_PRICING_PROCEDURE,ISNULL(CONVERT(VARCHAR,SAQTRV.EXCHANGE_RATE),'')  AS EXCHANGE_RATE,ISNULL(CONVERT(VARCHAR(11),SAQTRV.EXCHANGE_RATE_DATE,101),'') AS  EXCHANGE_RATE_DATE,ISNULL(SAQTRV.EXCHANGE_RATE_TYPE,'') AS  EXCHANGE_RATE_TYPE,ISNULL(SAQTRV.GLOBAL_CURRENCY,'') AS GLOBAL_CURRENCY,ISNULL(SAQTRV.PRICINGPROCEDURE_ID,'')   AS  PRICINGPROCEDURE_ID,ISNULL(SAQTRV.QUOTE_ID,'')  AS  QUOTE_ID,ISNULL(SAQTRV.REGION,'')   AS  REGION,ISNULL(SAQTRV.SALESOFFICE_ID,'') AS  SALESOFFICE_ID,ISNULL(SAQTRV.DOC_CURRENCY,'') AS    SORG_CURRENCY,ISNULL(SAQTRV.SALESORG_ID,'') AS  SALESORG_ID,ISNULL(CONVERT(VARCHAR,SAQTRV.BLUEBOOK),'') AS  BLUEBOOK,ISNULL(CONVERT(VARCHAR,SAQTRV.DOCTYP_ID),'')   AS  DOCTYP_ID,ISNULL(CONVERT(VARCHAR,SAQTRV.QTEREV_ID),'')  AS  QTEREV_ID,ISNULL(SAQTRV.REVISION_NAME,'')   AS  REVISION_NAME,ISNULL(REPLACE(REPLACE(SAQTRV.REVISION_DESCRIPTION,'\n',''),'	','' ),'')    AS  REVISION_DESCRIPTION,ISNULL(SAQTRV.REVISION_STATUS,'')  AS  REVISION_STATUS,ISNULL(CONVERT(VARCHAR(11),SAQTRV.REV_CREATE_DATE,101),'')  AS  REV_CREATE_DATE,ISNULL(CONVERT(VARCHAR(11),SAQTRV.REV_APPROVE_DATE,101),'') AS  REV_APPROVE_DATE,ISNULL(CONVERT(VARCHAR(11),SAQTRV.REV_EXPIRE_DATE,101),'') AS  REV_EXPIRE_DATE,ISNULL(CONVERT(VARCHAR,SAQTRV.ACTIVE),'')   AS  ACTIVE,ISNULL(CONVERT(VARCHAR(11),SAQTRV.CONTRACT_VALID_FROM,101),'')   AS  CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),SAQTRV.CONTRACT_VALID_TO,101),'')    AS  CONTRACT_VALID_TO,ISNULL(SAQTRV.INCOTERM_ID,'') AS  INCOTERM_ID,ISNULL(SAQTRV.INCOTERM_NAME,'') AS  INCOTERM_NAME,ISNULL(SAQTRV.PAYMENTTERM_ID,'')  AS  PAYMENTTERM_ID,ISNULL(SAQTRV.PAYMENTTERM_NAME,'') AS PAYMENTTERM_NAME,ISNULL(CONVERT(VARCHAR,SAQTRV.ADVANCED_SHIPPING_EMAIL),'')  AS    ADVANCED_SHIPPING_EMAIL,ISNULL(CONVERT(VARCHAR,SAQTRV.BD_PRICE_INGL_CURR),'')  AS   BD_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,SAQTRV.CEILING_PRICE_INGL_CURR),'') AS CEILING_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,SAQTRV.COMPANY_ID),'') AS COMPANY_ID,ISNULL('','') AS CONTRACT_TYPE,ISNULL(CONVERT(VARCHAR,SAQTRV.TARGET_PRICE_INGL_CURR),'') AS TARGET_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,SAQTRV.TAX_AMOUNT_INGL_CURR),'') AS TAX_AMOUNT_INGL_CURR,ISNULL(CONVERT(VARCHAR,SAQTRV.DISCOUNT_PERCENT),'') AS DISCOUNT_PERCENT,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(SAQTRV.PAYMENTTERM_DAYS,'')   AS  PAYMENTTERM_DAYS,'' AS NET_PRICE_INGL_CURR,ISNULL(APPDTE_EXCH_RATE,'') AS APPDTE_EXCH_RATE,ISNULL(APPLIED_EMAIL,'') AS APPLIED_EMAIL,ISNULL(APPLIED_NAME,'') AS APPLIED_NAME,ISNULL(APPLIED_TITLE,'') AS APPLIED_TITLE,ISNULL(BANK_ID,'') AS BANK_ID,ISNULL(CANCELLATION_PERIOD_EXCEPTION,'') AS CANCELLATION_PERIOD_EXCEPTION,ISNULL(CANCELLATION_PERIOD,'') AS CANCELLATION_PERIOD,ISNULL(CLM_AGREEMENT_NUM,'') AS CLM_AGREEMENT_NUM,ISNULL(CLM_AGREEMENT_OWNER,'') AS CLM_AGREEMENT_OWNER,ISNULL(CLM_CONTRACT_TYPE,'') AS CLM_CONTRACT_TYPE,ISNULL(CLM_TEMPLATE_NAME,'') AS CLM_TEMPLATE_NAME,ISNULL(CONVERT(VARCHAR(MAX),REPLACE(REPLACE(SAQTRV.CUSTOMER_NOTES,'    ',''),'\n','')),'') AS CUSTOMER_NOTES,ISNULL(EXTERNAL_EMAIL,'') AS EXTERNAL_EMAIL,ISNULL(EXTERNAL_NAME,'') AS EXTERNAL_NAME,ISNULL(EXTERNAL_TITLE,'') AS EXTERNAL_TITLE,ISNULL(HLV_ORG_BUN,'') AS HLV_ORG_BUN,ISNULL(REPLACE(REPLACE(INTERNAL_NOTES,'\n',''),'	',''),'') AS INTERNAL_NOTES,ISNULL(CONVERT(VARCHAR,DISCOUNT_AMOUNT_INGL_CURR),'') AS DISCOUNT_AMOUNT_INGL_CURR,ISNULL(CONVERT(VARCHAR,CREDIT_INGL_CURR),'')AS CREDIT_INGL_CURR,ISNULL(CONVERT(VARCHAR,NET_VALUE_INGL_CURR),'') AS NET_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,SALES_PRICE_INGL_CURR),'') AS SALES_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR(100),SAQTRV.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQTRV.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQTRV.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQTRV.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR,TRANSACTION_TYPE),'') AS TRANSACTION_TYPE FROM SAQTRV(NOLOCK) LEFT JOIN SAQTMT(NOLOCK) ON SAQTMT.QUOTE_ID = SAQTRV.QUOTE_ID WHERE SAQTRV.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQTRV.QTEREV_ID IN ("+str(Revision[:-1])+") ) t    ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")
            
        #SAQTIP
        SAQTIP_QUERY = SqlHelper.GetFirst(
                "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQTIP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ADDRESS\" : \"'+ADDRESS+'\",\"EMAIL\" : \"'+EMAIL+'\",\"IS_MAIN\" : \"'+IS_MAIN+'\",\"PARTY_ID\" : \"'+PARTY_ID+'\",\"PARTY_NAME\" : \"'+PARTY_NAME+'\",\"PARTY_ROLE\" : \"'+PARTY_ROLE+'\",\"PHONE\" : \"'+PHONE+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ADDRESS,'')    AS  ADDRESS,ISNULL(EMAIL,'') AS EMAIL,ISNULL(CONVERT(VARCHAR,IS_MAIN),'')   AS  IS_MAIN,ISNULL(PARTY_ID,'') AS  PARTY_ID,ISNULL(PARTY_NAME,'')  AS  PARTY_NAME,ISNULL(CPQ_PARTNER_FUNCTION,'')  AS  PARTY_ROLE,ISNULL(PHONE,'') AS  PHONE,ISNULL(QUOTE_ID,'')   AS  QUOTE_ID,ISNULL(SALESORG_ID,'')  AS SALESORG_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'')  AS    QTEREV_ID,ISNULL(CONVERT(VARCHAR(100),SAQTIP.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQTIP.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQTIP.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQTIP.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY FROM SAQTIP(NOLOCK) WHERE SAQTIP.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQTIP.QTEREV_ID IN ("+str(Revision[:-1])+") ) t ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
            )

        #SAQCBC
        SAQCBC_QUERY = SqlHelper.GetFirst(
                "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQCBC\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"CHECKLIST_DESCRIPTION\" : \"'+CHECKLIST_DESCRIPTION+'\",\"CHECKLIST_ID\" : \"'+CHECKLIST_ID+'\",\"COMMENT\" : \"'+COMMENT+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"SERVICE_CONTRACT\" : \"'+SERVICE_CONTRACT+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"SPECIALIST_REVIEW\" : \"'+SPECIALIST_REVIEW+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(REPLACE(REPLACE(CHECKLIST_DESCRIPTION,'\"',''),'\n',''),'')    AS  CHECKLIST_DESCRIPTION,ISNULL(REPLACE(CHECKLIST_ID,'\"',''),'') AS   CHECKLIST_ID,ISNULL(CONVERT(VARCHAR,REPLACE(COMMENT,'\n','')),'')   AS  COMMENT,ISNULL(QUOTE_ID,'') AS  QUOTE_ID,ISNULL(QTEREV_ID,'')   AS  QTEREV_ID,ISNULL(CONVERT(VARCHAR,SERVICE_CONTRACT),'')  AS  SERVICE_CONTRACT,ISNULL(CONVERT(VARCHAR,SPECIALIST_REVIEW),'')  AS  SPECIALIST_REVIEW,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR(100),SAQCBC.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQCBC.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQCBC.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQCBC.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY FROM SAQCBC(NOLOCK) WHERE SAQCBC.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQCBC.QTEREV_ID IN ("+str(Revision[:-1])+") ) t ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
            )

        #SAQRIB  
        SAQRIB_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQRIB\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"BILLING_DAY\" : \"'+BILLING_DAY+'\",\"BILLING_END_DATE\" : \"'+BILLING_END_DATE+'\",\"BILLING_NOTES\" : \"'+BILLING_NOTES+'\",\"BILLING_START_DATE\" : \"'+BILLING_START_DATE+'\",\"BOOKING_METHOD\" : \"'+BOOKING_METHOD+'\",\"PO_DATE\" : \"'+PO_DATE+'\",\"PO_NUMBER\" : \"'+PO_NUMBER+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SERVICE_AGREEMENT_NUMBER\" : \"'+SERVICE_AGREEMENT_NUMBER+'\",\"LINE\" : \"'+LINE+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"IS_CHANGED\" : \"'+IS_CHANGED+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\" }' AS JSON from (SELECT DISTINCT ISNULL(CONVERT(VARCHAR,BILLING_DAY),'') AS    BILLING_DAY,ISNULL(CONVERT(VARCHAR(11),BILLING_END_DATE,101),'') AS BILLING_END_DATE,ISNULL(BILLING_NOTES,'') AS BILLING_NOTES,ISNULL(CONVERT(VARCHAR(11),BILLING_START_DATE,101),'') AS    BILLING_START_DATE,ISNULL(BOOKING_METHOD,'') AS BOOKING_METHOD,ISNULL(CONVERT(VARCHAR(11),PO_DATE,101),'') AS PO_DATE,ISNULL(PO_NUMBER,'')  AS  PO_NUMBER ,ISNULL(QUOTE_ID,'') AS   QUOTE_ID,ISNULL(SERVICE_AGREEMENT_NUMBER,'')  AS    SERVICE_AGREEMENT_NUMBER,"+str(timestamp_sessionid)+" as SESSION_ID ,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS   QTEREV_ID,ISNULL(CONVERT(VARCHAR,LINE),'') AS LINE,ISNULL(SERVICE_ID,'') AS SERVICE_ID,'' AS IS_CHANGED,ISNULL(CONVERT(VARCHAR(100),SAQRIB.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQRIB.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQRIB.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQRIB.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY FROM SAQRIB(NOLOCK)  WHERE SAQRIB.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQRIB.QTEREV_ID IN ("+str(Revision[:-1])+") ) t  ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")

        #SAQDOC
        SAQDOC_QUERY = SqlHelper.GetFirst(
                "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQDOC\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"DOCUMENT_ID\" : \"'+DOCUMENT_ID+'\",\"DOCUMENT_NAME\" : \"'+DOCUMENT_NAME+'\",\"DOCUMENT_PATH\" : \"'+DOCUMENT_PATH+'\",\"LANGUAGE_ID\" : \"'+LANGUAGE_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"STATUS\" : \"'+STATUS+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(DOCUMENT_ID,'') AS   DOCUMENT_ID,ISNULL(DOCUMENT_NAME,'') AS DOCUMENT_NAME,ISNULL(DOCUMENT_PATH,'') AS DOCUMENT_PATH,ISNULL(LANGUAGE_ID,'')  AS  LANGUAGE_ID,ISNULL(QUOTE_ID,'') AS  QUOTE_ID,ISNULL(STATUS,'')  AS  STATUS,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS  QTEREV_ID,ISNULL(CONVERT(VARCHAR(100),SAQDOC.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQDOC.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQDOC.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQDOC.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY FROM SAQDOC(NOLOCK)  WHERE SAQDOC.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQDOC.QTEREV_ID IN ("+str(Revision[:-1])+") ) t    ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
            )

        #SAQRIT 
        SAQRIT_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQRIT\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"PRICE_BENCHMARK\" : \"'+PRICE_BENCHMARK+'\",\"PRICE_BENCHMARK_MARGIN\" : \"'+PRICE_BENCHMARK_MARGIN+'\",\"BILLING_TYPE\" : \"'+BILLING_TYPE+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"CRDVCH_EXP_DATE\" : \"'+CRDVCH_EXP_DATE+'\",\"DOC_CURRENCY\" : \"'+DOC_CURRENCY+'\",\"DOCURR_RECORD_ID\" : \"'+DOCURR_RECORD_ID+'\",\"EXCHANGE_RATE\" : \"'+EXCHANGE_RATE+'\",\"EXCHANGE_RATE_DATE\" : \"'+EXCHANGE_RATE_DATE+'\",\"EXCHANGE_RATE_RECORD_ID\" : \"'+EXCHANGE_RATE_RECORD_ID+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"FABLOCATION_NAME\" : \"'+FABLOCATION_NAME+'\",\"FABLOCATION_RECORD_ID\" : \"'+FABLOCATION_RECORD_ID+'\",\"GL_ACCOUNT_NO\" : \"'+GL_ACCOUNT_NO+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"GLOBAL_CURRENCY_RECORD_ID\" : \"'+GLOBAL_CURRENCY_RECORD_ID+'\",\"GOT_CODE\" : \"'+GOT_CODE+'\",\"GOTCODE_RECORD_ID\" : \"'+GOTCODE_RECORD_ID+'\",\"GREENBOOK\" : \"'+GREENBOOK+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"GREENBOOK_RECORD_ID\" : \"'+GREENBOOK_RECORD_ID+'\",\"LINE\" : \"'+LINE+'\",\"DEVICE_NODE\" : \"'+DEVICE_NODE+'\",\"PROCESS_TYPE\" : \"'+PROCESS_TYPE+'\",\"MODULE_ID\" : \"'+MODULE_ID+'\",\"MODULE_NAME\" : \"'+MODULE_NAME+'\",\"OBJECT_ID\" : \"'+OBJECT_ID+'\",\"OBJECT_TYPE\" : \"'+OBJECT_TYPE+'\",\"PARQTEITM_LINE\" : \"'+PARQTEITM_LINE+'\",\"PARQTEITM_LINE_RECORD_ID\" : \"'+PARQTEITM_LINE_RECORD_ID+'\",\"PLANT_ID\" : \"'+PLANT_ID+'\",\"PLANT_NAME\" : \"'+PLANT_NAME+'\",\"PLANT_RECORD_ID\" : \"'+PLANT_RECORD_ID+'\",\"PM_ID\" : \"'+PM_ID+'\",\"PM_LEVEL\" : \"'+PM_LEVEL+'\",\"PM_RECORD_ID\" : \"'+PM_RECORD_ID+'\",\"PRICING_PROCEDURE_ID\" : \"'+PRICING_PROCEDURE_ID+'\",\"PRICING_PROCEDURE_RECORD_ID\" : \"'+PRICING_PROCEDURE_RECORD_ID+'\",\"PRICING_PROCEDURE_STEPSTRUCT\" : \"'+PRICING_PROCEDURE_STEPSTRUCT+'\",\"PRINT_FLAG\" : \"'+PRINT_FLAG+'\",\"SERVICE_DESCRIPTION\" : \"'+SERVICE_DESCRIPTION+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SERVICE_RECORD_ID\" : \"'+SERVICE_RECORD_ID+'\",\"PROFIT_CENTER\" : \"'+PROFIT_CENTER+'\",\"QUANTITY\" : \"'+QUANTITY+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"QUOTE_RECORD_ID\" : \"'+QUOTE_RECORD_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"QTEREV_RECORD_ID\" : \"'+QTEREV_RECORD_ID+'\",\"QTEITMSUM_RECORD_ID\" : \"'+QTEITMSUM_RECORD_ID+'\",\"REF_SALESORDER\" : \"'+REF_SALESORDER+'\",\"SPLIT_PERCENT\" : \"'+SPLIT_PERCENT+'\",\"SPLIT\" : \"'+SPLIT+'\",\"STATUS\" : \"'+STATUS+'\",\"TAX_PERCENTAGE\" : \"'+TAX_PERCENTAGE+'\",\"TAX_AMOUNT\" : \"'+TAX_AMOUNT+'\",\"TAX_AMOUNT_INGL_CURR\" : \"'+TAX_AMOUNT_INGL_CURR+'\",\"TAXCLASSIFICATION_DESCRIPTION\" : \"'+TAXCLASSIFICATION_DESCRIPTION+'\",\"TAXCLASSIFICATION_ID\" : \"'+TAXCLASSIFICATION_ID+'\",\"TAXCLASSIFICATION_RECORD_ID\" : \"'+TAXCLASSIFICATION_RECORD_ID+'\",\"TOTAL_AMOUNT_INGL_CURR\" : \"'+TOTAL_AMOUNT_INGL_CURR+'\",\"TOTAL_AMOUNT\" : \"'+TOTAL_AMOUNT+'\",\"COMMITTED_VALUE\" : \"'+COMMITTED_VALUE+'\",\"COMVAL_INGL_CURR\" : \"'+COMVAL_INGL_CURR+'\",\"ESTIMATED_VALUE\" : \"'+ESTIMATED_VALUE+'\",\"ESTVAL_INGL_CURR\" : \"'+ESTVAL_INGL_CURR+'\",\"NET_VALUE\" : \"'+NET_VALUE+'\",\"NET_VALUE_INGL_CURR\" : \"'+NET_VALUE_INGL_CURR+'\",\"UNIT_PRICE\" : \"'+UNIT_PRICE+'\",\"UNIT_PRICE_INGL_CURR\" : \"'+UNIT_PRICE_INGL_CURR+'\",\"YEAR_1\" : \"'+YEAR_1+'\",\"YEAR_1_INGL_CURR\" : \"'+YEAR_1_INGL_CURR+'\",\"YEAR_2\" : \"'+YEAR_2+'\",\"YEAR_2_INGL_CURR\" : \"'+YEAR_2_INGL_CURR+'\",\"YEAR_3\" : \"'+YEAR_3+'\",\"YEAR_3_INGL_CURR\" : \"'+YEAR_3_INGL_CURR+'\",\"YEAR_4\" : \"'+YEAR_4+'\",\"YEAR_4_INGL_CURR\" : \"'+YEAR_4_INGL_CURR+'\",\"YEAR_5\" : \"'+YEAR_5+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"PEREVTCST_INDT_CURR\" : \"'+PEREVTCST_INDT_CURR+'\",\"PEREVTPRC_INGL_CURR\" : \"'+PEREVTPRC_INGL_CURR+'\",\"PEREVTPRC_INDT_CURR\" : \"'+PEREVTPRC_INDT_CURR+'\",\"PEREVTCST_INGL_CURR\" : \"'+PEREVTCST_INGL_CURR+'\",\"CHAMBER_QUANTITY\" : \"'+CHAMBER_QUANTITY+'\",\"YEAR_5_INGL_CURR\" : \"'+YEAR_5_INGL_CURR+'\"}' AS JSON from (SELECT DISTINCT ISNULL(CONVERT(VARCHAR,PRICE_BENCHMARK),'') AS PRICE_BENCHMARK,ISNULL(CONVERT(VARCHAR,PRICE_BENCHMARK_MARGIN),'') AS PRICE_BENCHMARK_MARGIN,ISNULL(CONVERT(VARCHAR,BILLING_TYPE),'') AS BILLING_TYPE,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_FROM,101),'')   AS  CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_TO,101),'') AS    CONTRACT_VALID_TO,ISNULL(CONVERT(VARCHAR(11),CRDVCH_EXP_DATE,101),'')   AS  CRDVCH_EXP_DATE,ISNULL(CONVERT(VARCHAR,DOC_CURRENCY),'') AS DOC_CURRENCY,ISNULL(CONVERT(VARCHAR,DOCURR_RECORD_ID),'') AS DOCURR_RECORD_ID,ISNULL(CONVERT(VARCHAR,EXCHANGE_RATE),'') AS EXCHANGE_RATE,ISNULL(CONVERT(VARCHAR,EXCHANGE_RATE_DATE),'') AS EXCHANGE_RATE_DATE,ISNULL(CONVERT(VARCHAR,EXCHANGE_RATE_RECORD_ID),'') AS EXCHANGE_RATE_RECORD_ID,ISNULL(CONVERT(VARCHAR,FABLOCATION_ID),'') AS FABLOCATION_ID,ISNULL(CONVERT(VARCHAR,FABLOCATION_NAME),'') AS FABLOCATION_NAME,ISNULL(CONVERT(VARCHAR,FABLOCATION_RECORD_ID),'') AS FABLOCATION_RECORD_ID,ISNULL(CONVERT(VARCHAR,GL_ACCOUNT_NO),'') AS GL_ACCOUNT_NO,ISNULL(CONVERT(VARCHAR,GLOBAL_CURRENCY),'') AS GLOBAL_CURRENCY,ISNULL(CONVERT(VARCHAR,GLOBAL_CURRENCY_RECORD_ID),'') AS GLOBAL_CURRENCY_RECORD_ID,ISNULL(CONVERT(VARCHAR,GOT_CODE),'') AS GOT_CODE,ISNULL(CONVERT(VARCHAR,GOTCODE_RECORD_ID),'') AS GOTCODE_RECORD_ID,ISNULL(CONVERT(VARCHAR,GREENBOOK),'') AS GREENBOOK,ISNULL(CONVERT(VARCHAR,GREENBOOK_RECORD_ID),'') AS GREENBOOK_RECORD_ID,ISNULL(CONVERT(VARCHAR,LINE),'') AS LINE,ISNULL(CONVERT(VARCHAR,DEVICE_NODE),'') AS DEVICE_NODE,ISNULL(CONVERT(VARCHAR,PROCESS_TYPE),'') AS PROCESS_TYPE,ISNULL(CONVERT(VARCHAR,MODULE_ID),'') AS MODULE_ID,ISNULL(CONVERT(VARCHAR,MODULE_NAME),'') AS MODULE_NAME,ISNULL(CONVERT(VARCHAR,OBJECT_ID),'') AS OBJECT_ID,ISNULL(CONVERT(VARCHAR,OBJECT_TYPE),'') AS OBJECT_TYPE,ISNULL(CONVERT(VARCHAR,PARQTEITM_LINE),'') AS PARQTEITM_LINE,ISNULL(CONVERT(VARCHAR,PARQTEITM_LINE_RECORD_ID),'') AS PARQTEITM_LINE_RECORD_ID,ISNULL(CONVERT(VARCHAR,PLANT_ID),'') AS PLANT_ID,ISNULL(CONVERT(VARCHAR,PLANT_NAME),'') AS PLANT_NAME,ISNULL(CONVERT(VARCHAR,PLANT_RECORD_ID),'') AS PLANT_RECORD_ID,ISNULL(CONVERT(VARCHAR,PM_ID),'') AS PM_ID,ISNULL(CONVERT(VARCHAR,MNTEVT_LEVEL),'') AS PM_LEVEL,ISNULL(CONVERT(VARCHAR,PM_RECORD_ID),'') AS PM_RECORD_ID,ISNULL(CONVERT(VARCHAR,PRICING_PROCEDURE_ID),'') AS PRICING_PROCEDURE_ID,ISNULL(CONVERT(VARCHAR,PRICING_PROCEDURE_RECORD_ID),'') AS PRICING_PROCEDURE_RECORD_ID,ISNULL(CONVERT(VARCHAR,PRICING_PROCEDURE_STEPSTRUCT),'') AS PRICING_PROCEDURE_STEPSTRUCT,ISNULL(CONVERT(VARCHAR,PRINT_FLAG),'') AS PRINT_FLAG,ISNULL(CONVERT(VARCHAR,SERVICE_DESCRIPTION),'') AS SERVICE_DESCRIPTION,ISNULL(CONVERT(VARCHAR,SERVICE_ID),'') AS SERVICE_ID,ISNULL(CONVERT(VARCHAR,SERVICE_RECORD_ID),'') AS SERVICE_RECORD_ID,ISNULL(CONVERT(VARCHAR,PROFIT_CENTER),'') AS PROFIT_CENTER,ISNULL(CONVERT(VARCHAR,QUANTITY),'') AS QUANTITY,ISNULL(CONVERT(VARCHAR,QUOTE_ID),'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,QUOTE_RECORD_ID),'') AS QUOTE_RECORD_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS QTEREV_ID,ISNULL(CONVERT(VARCHAR,QTEREV_RECORD_ID),'') AS QTEREV_RECORD_ID,ISNULL(CONVERT(VARCHAR,QTEITMSUM_RECORD_ID),'') AS QTEITMSUM_RECORD_ID,ISNULL(CONVERT(VARCHAR,REF_SALESORDER),'') AS REF_SALESORDER,ISNULL(CONVERT(VARCHAR,SPLIT_PERCENT),'') AS SPLIT_PERCENT,ISNULL(CONVERT(VARCHAR,SPLIT),'') AS SPLIT,ISNULL(CONVERT(VARCHAR,STATUS),'') AS STATUS,ISNULL(CONVERT(VARCHAR,TAX_PERCENTAGE),'') AS TAX_PERCENTAGE,ISNULL(CONVERT(VARCHAR,TAX_AMOUNT),'') AS TAX_AMOUNT,ISNULL(CONVERT(VARCHAR,TAX_AMOUNT_INGL_CURR),'') AS TAX_AMOUNT_INGL_CURR,ISNULL(CONVERT(VARCHAR,TAXCLASSIFICATION_DESCRIPTION),'') AS TAXCLASSIFICATION_DESCRIPTION,ISNULL(CONVERT(VARCHAR,TAXCLASSIFICATION_ID),'') AS TAXCLASSIFICATION_ID,ISNULL(CONVERT(VARCHAR,TAXCLASSIFICATION_RECORD_ID),'') AS TAXCLASSIFICATION_RECORD_ID,ISNULL(CONVERT(VARCHAR,TOTAL_AMOUNT_INGL_CURR),'') AS TOTAL_AMOUNT_INGL_CURR,ISNULL(CONVERT(VARCHAR,TOTAL_AMOUNT),'') AS TOTAL_AMOUNT,ISNULL(CONVERT(VARCHAR,COMMITTED_VALUE),'') AS COMMITTED_VALUE,ISNULL(CONVERT(VARCHAR,COMVAL_INGL_CURR),'') AS COMVAL_INGL_CURR,ISNULL(CONVERT(VARCHAR,ESTIMATED_VALUE),'') AS ESTIMATED_VALUE,ISNULL(CONVERT(VARCHAR,ESTVAL_INGL_CURR),'') AS ESTVAL_INGL_CURR,ISNULL(CONVERT(VARCHAR,NET_VALUE),'') AS NET_VALUE,ISNULL(CONVERT(VARCHAR,NET_VALUE_INGL_CURR),'') AS NET_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,UNIT_PRICE),'') AS UNIT_PRICE,ISNULL(CONVERT(VARCHAR,UNIT_PRICE_INGL_CURR),'') AS UNIT_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_1),'') AS YEAR_1,ISNULL(CONVERT(VARCHAR,YEAR_1_INGL_CURR),'') AS YEAR_1_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_2),'') AS YEAR_2,ISNULL(CONVERT(VARCHAR,YEAR_2_INGL_CURR),'') AS YEAR_2_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_3),'') AS YEAR_3,ISNULL(CONVERT(VARCHAR,YEAR_3_INGL_CURR),'') AS YEAR_3_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_4),'') AS YEAR_4,ISNULL(CONVERT(VARCHAR,YEAR_4_INGL_CURR),'') AS YEAR_4_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_5),'') AS YEAR_5,ISNULL(CONVERT(VARCHAR,YEAR_5_INGL_CURR),'') AS YEAR_5_INGL_CURR,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR(100),SAQRIT.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQRIT.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQRIT.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQRIT.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR,PEREVTCST_INDT_CURR),'') AS PEREVTCST_INDT_CURR,ISNULL(CONVERT(VARCHAR,PEREVTPRC_INGL_CURR),'') AS PEREVTPRC_INGL_CURR,ISNULL(CONVERT(VARCHAR,PEREVTPRC_INDT_CURR),'') AS PEREVTPRC_INDT_CURR,ISNULL(CONVERT(VARCHAR,PEREVTCST_INGL_CURR),'') AS PEREVTCST_INGL_CURR,ISNULL(CONVERT(VARCHAR(100),CHAMBER_QUANTITY),'') AS CHAMBER_QUANTITY FROM SAQRIT(NOLOCK)  WHERE SAQRIT.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQRIT.QTEREV_ID IN ("+str(Revision[:-1])+") ) t     ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")         

        #SAQRIO
        SAQRIO_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQRIO\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"CUSTOMER_TOOL_ID\" : \"'+CUSTOMER_TOOL_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"GREENBOOK\" : \"'+GREENBOOK+'\",\"KPU\" : \"'+KPU+'\",\"LINE\" : \"'+LINE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SERIAL_NUMBER\" : \"'+SERIAL_NUMBER+'\",\"TECHNOLOGY\" : \"'+TECHNOLOGY+'\",\"TOOL_CONFIGURATION\" : \"'+TOOL_CONFIGURATION+'\",\"WAFER_SIZE\" : \"'+WAFER_SIZE+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT ISNULL(REPLACE(CUSTOMER_TOOL_ID,'\"',''),'') AS  CUSTOMER_TOOL_ID,ISNULL(EQUIPMENT_ID,'') AS EQUIPMENT_ID,ISNULL(NULL,'') AS FABLOCATION_ID,ISNULL(GREENBOOK,'') AS  GREENBOOK,ISNULL(KPU,'')    AS  KPU,ISNULL(CONVERT(VARCHAR,LINE),'') AS LINE,ISNULL(SERVICE_ID,'')  AS  SERVICE_ID,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(SERIAL_NUMBER,'') AS SERIAL_NUMBER,ISNULL(TECHNOLOGY,'') AS TECHNOLOGY,ISNULL(TOOL_CONFIGURATION,'') AS TOOL_CONFIGURATION,ISNULL(WAFER_SIZE,'') AS   WAFER_SIZE,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS QTEREV_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR(100),SAQRIO.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQRIO.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQRIO.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQRIO.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY FROM SAQRIO(NOLOCK)  WHERE SAQRIO.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQRIO.QTEREV_ID IN ("+str(Revision[:-1])+") ) t     ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ") 
        
        #SAQRIP  
        SAQRIP_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQRIP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"PROD_INSP_MEMO\" : \"'+PROD_INSP_MEMO+'\",\"PART_NUMBER\" : \"'+PART_NUMBER+'\",\"PART_DESCRIPTION\" : \"'+PART_DESCRIPTION+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"NEW_PART\" : \"'+NEW_PART+'\",\"QUANTITY\" : \"'+QUANTITY+'\",\"LINE\" : \"'+LINE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"CATEGORY_ID\" : \"'+CATEGORY_ID+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"PAR_PRDOFR_ID\" : \"'+PAR_PRDOFR_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\"}' AS JSON from (SELECT DISTINCT ISNULL(NULL,'') AS   PROD_INSP_MEMO,ISNULL(PART_NUMBER,'') AS PART_NUMBER,REPLACE(REPLACE(REPLACE(ISNULL(PART_DESCRIPTION,''),'\"',''),'''',''),'\\','')  AS PART_DESCRIPTION,ISNULL(NULL,'') AS NEW_PART,ISNULL(CONVERT(VARCHAR,LINE),'') AS LINE,ISNULL(SERVICE_ID,'')   AS  SERVICE_ID,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS QTEREV_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QUANTITY),'') AS QUANTITY,CATEGORY_ID,ISNULL(CONVERT(VARCHAR(100),SAQRIP.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQRIP.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQRIP.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQRIP.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR(100),PAR_PRDOFR_ID),'') AS PAR_PRDOFR_ID FROM SAQRIP(NOLOCK) LEFT JOIN MAMACT (NOLOCK) ON SAQRIP.PART_NUMBER = MAMACT.SAP_PART_NUMBER WHERE SAQRIP.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQRIP.QTEREV_ID IN ("+str(Revision[:-1])+") ) t    ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ") 
        
        #SAQSAF  
        SAQSAF_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQSAF\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"SESSION_ID\" : \"'+SESSION_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"SNDACC_ID\" : \"'+SNDACC_ID+'\",\"SNDFBL_ID\" : \"'+SNDFBL_ID+'\",\"SNDFBL_NAME\" : \"'+SNDFBL_NAME+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\"}' AS JSON from (SELECT DISTINCT ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS QTEREV_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR(MAX),SNDACC_ID),'') AS SNDACC_ID,ISNULL(CONVERT(VARCHAR(MAX),SNDFBL_ID),'') AS SNDFBL_ID,ISNULL(CONVERT(VARCHAR(MAX),SNDFBL_NAME),'') AS SNDFBL_NAME,ISNULL(CONVERT(VARCHAR(100),SAQSAF.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQSAF.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQSAF.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQSAF.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY FROM SAQSAF(NOLOCK) WHERE SAQSAF.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQSAF.QTEREV_ID IN ("+str(Revision[:-1])+") ) t  ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ") 

        SAQICO_DRP = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''SAQICO_BKP_HADOOP'' ) BEGIN DROP TABLE SAQICO_BKP_HADOOP END  ' ")  
        
        SAQICO_QUERY = SqlHelper.GetFirst("sp_executesql @T=N'select * into SAQICO_BKP_HADOOP from SAQICO(NOLOCK) where QUOTE_ID = ''"+str(Qt_ID)+"'' AND QTEREV_ID IN ("+str(Revision[:-1])+") '")
        
        #SAQICO        
        
        SAQICO_DATA = ''
        Tool_flag = 0
        
        Tstart = 1
        Tend = 100
        
        while Tool_flag == 0:

            tool_query = SqlHelper.GetFirst("SELECT DISTINCT LINE FROM  SAQICO_BKP_HADOOP(nolock) WHERE LINE>= "+str(Tstart)+" AND LINE<="+str(Tend)+" ")
            
            if str(tool_query) != "None":

                SAQICO_QRY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace(replace(replace (STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"OFRING\" : \"'+OFRING+'\",\"QTETYP\" : \"'+QTETYP+'\",\"BILTYP\" : \"'+BILTYP+'\",\"CNTYER\" : \"'+CNTYER+'\",\"STADTE\" : \"'+STADTE+'\",\"ENDDTE\" : \"'+ENDDTE+'\",\"CNTDAY\" : \"'+CNTDAY+'\",\"INWRTY\" : \"'+INWRTY+'\",\"WTYSTE\" : \"'+WTYSTE+'\",\"WTYEND\" : \"'+WTYEND+'\",\"WTYDAY\" : \"'+WTYDAY+'\",\"FABLOC\" : \"'+FABLOC+'\",\"GRNBOK\" : \"'+GRNBOK+'\",\"BLUBOK\" : \"'+BLUBOK+'\",\"EQUCAT\" : \"'+EQUCAT+'\",\"EQUPID\" : \"'+EQUPID+'\",\"SERNUM\" : \"'+SERNUM+'\",\"PLTFRM\" : \"'+PLTFRM+'\",\"TOLCFG\" : \"'+TOLCFG+'\",\"SUBSIZ\" : \"'+SUBSIZ+'\",\"REGION\" : \"'+REGION+'\",\"ISPOES\" : \"'+ISPOES+'\",\"PRODID\" : \"'+PRODID+'\",\"CSTSRC\" : \"'+CSTSRC+'\",\"PRCSRC\" : \"'+PRCSRC+'\",\"CMLBRC\" : \"'+CMLBRC+'\",\"CMPREC\" : \"'+CMPREC+'\",\"CMPRFC\" : \"'+CMPRFC+'\",\"GQPLBC\" : \"'+GQPLBC+'\",\"LQPLBC\" : \"'+LQPLBC+'\",\"PMPREC\" : \"'+PMPREC+'\",\"PMPRFC\" : \"'+PMPRFC+'\",\"PMPCLC\" : \"'+PMPCLC+'\",\"PMPMEC\" : \"'+PMPMEC+'\",\"PMPRCC\" : \"'+PMPRCC+'\",\"SDSTKC\" : \"'+SDSTKC+'\",\"KPINDC\" : \"'+KPINDC+'\",\"FAILRC\" : \"'+FAILRC+'\",\"OUTSRC\" : \"'+OUTSRC+'\",\"LGSTCC\" : \"'+LGSTCC+'\",\"TNHRPT\" : \"'+TNHRPT+'\",\"TCWOSS\" : \"'+TCWOSS+'\",\"TCWISS\" : \"'+TCWISS+'\",\"INTCPV\" : \"'+INTCPV+'\",\"INTCPC\" : \"'+INTCPC+'\",\"OSSVDV\" : \"'+OSSVDV+'\",\"LTCOSS\" : \"'+LTCOSS+'\",\"POFVDV\" : \"'+POFVDV+'\",\"POFVDC\" : \"'+POFVDC+'\",\"GBKVDV\" : \"'+GBKVDV+'\",\"GBKVDC\" : \"'+GBKVDC+'\",\"UIMVDV\" : \"'+UIMVDV+'\",\"UIMVDC\" : \"'+UIMVDC+'\",\"CAVVDV\" : \"'+CAVVDV+'\",\"CAVVDC\" : \"'+CAVVDC+'\",\"WNDVDV\" : \"'+WNDVDV+'\",\"WNDVDC\" : \"'+WNDVDC+'\",\"CCRTMV\" : \"'+CCRTMV+'\",\"CCRTMC\" : \"'+CCRTMC+'\",\"SCMVDV\" : \"'+SCMVDV+'\",\"SCMVDC\" : \"'+SCMVDC+'\",\"CCDFFV\" : \"'+CCDFFV+'\",\"CCDFFC\" : \"'+CCDFFC+'\",\"NPIVDV\" : \"'+NPIVDV+'\",\"NPIVDC\" : \"'+NPIVDC+'\",\"DTPVDV\" : \"'+DTPVDV+'\",\"DTPVDC\" : \"'+DTPVDC+'\",\"CSTVDV\" : \"'+CSTVDV+'\",\"CSTVDC\" : \"'+CSTVDC+'\",\"CSGVDV\" : \"'+CSGVDV+'\",\"CSGVDC\" : \"'+CSGVDC+'\",\"QRQVDV\" : \"'+QRQVDV+'\",\"QRQVDC\" : \"'+QRQVDC+'\",\"SVCVDV\" : \"'+SVCVDV+'\",\"SVCVDC\" : \"'+SVCVDC+'\",\"RKFVDV\" : \"'+RKFVDV+'\",\"PDCBPR\" : \"'+PDCBPR+'\",\"RKFVDC\" : \"'+RKFVDC+'\",\"PBPVDV\" : \"'+PBPVDV+'\",\"PBPVDC\" : \"'+PBPVDC+'\",\"ADDCOF\" : \"'+ADDCOF+'\",\"SUMCOF\" : \"'+SUMCOF+'\",\"INMP01\" : \"'+INMP01+'\",\"INMP02\" : \"'+INMP02+'\",\"FNMDPR\" : \"'+FNMDPR+'\",\"SADSPC\" : \"'+SADSPC+'\",\"TAPMMP\" : \"'+TAPMMP+'\",\"MTGPRC\" : \"'+MTGPRC+'\",\"SAPMMP\" : \"'+SAPMMP+'\",\"MSLPRC\" : \"'+MSLPRC+'\",\"BDDSPC\" : \"'+BDDSPC+'\",\"BDPMMP\" : \"'+BDPMMP+'\",\"MBDPRC\" : \"'+MBDPRC+'\",\"CEPRUP\" : \"'+CEPRUP+'\",\"MCLPRC\" : \"'+MCLPRC+'\",\"BPTKPI\" : \"'+BPTKPI+'\",\"ATGKEY\" : \"'+ATGKEY+'\",\"ATGKEC\" : \"'+ATGKEC+'\",\"ATGKEP\" : \"'+ATGKEP+'\",\"ATNKEY\" : \"'+ATNKEY+'\",\"AMNCPI\" : \"'+AMNCPI+'\",\"AMNCCI\" : \"'+AMNCCI+'\",\"AMNPPI\" : \"'+AMNPPI+'\",\"ASSEMBLY_ID\" : \"'+ASSEMBLY_ID+'\",\"ASSEMBLY_RECORD_ID\" : \"'+ASSEMBLY_RECORD_ID+'\",\"BDVPRC\" : \"'+BDVPRC+'\",\"BCHCFX\" : \"'+BCHCFX+'\",\"BCHCUR\" : \"'+BCHCUR+'\",\"BCHCXD\" : \"'+BCHCXD+'\",\"BCHPGC\" : \"'+BCHPGC+'\",\"BHCPVT\" : \"'+BHCPVT+'\",\"CAVVCI\" : \"'+CAVVCI+'\",\"CAVVPI\" : \"'+CAVVPI+'\",\"CELPRC\" : \"'+CELPRC+'\",\"CMLAB_ENT\" : \"'+CMLAB_ENT+'\",\"CNSMBL_ENT\" : \"'+CNSMBL_ENT+'\",\"CNTCVG_ENT\" : \"'+CNTCVG_ENT+'\",\"CONTRACT_ID\" : \"'+CONTRACT_ID+'\",\"CONTRACT_NAME\" : \"'+CONTRACT_NAME+'\",\"CTPDFP\" : \"'+CTPDFP+'\",\"CONTRACT_RECORD_ID\" : \"'+CONTRACT_RECORD_ID+'\",\"CNTCST\" : \"'+CNTCST+'\",\"CNTMGN\" : \"'+CNTMGN+'\",\"CNTPRC\" : \"'+CNTPRC+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"CUSTOMER_TOOL_ID\" : \"'+CUSTOMER_TOOL_ID+'\",\"DOCCUR\" : \"'+DOCCUR+'\",\"DCCRFX\" : \"'+DCCRFX+'\",\"DCCRXD\" : \"'+DCCRXD+'\",\"EQUIPMENTCATEGORY_DESCRIPTION\" : \"'+EQUIPMENTCATEGORY_DESCRIPTION+'\",\"EQUIPMENTCATEGORY_ID\" : \"'+EQUIPMENTCATEGORY_ID+'\",\"EQUIPMENTCATEGORY_RECORD_ID\" : \"'+EQUIPMENTCATEGORY_RECORD_ID+'\",\"EQUIPMENT_DESCRIPTION\" : \"'+EQUIPMENT_DESCRIPTION+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_RECORD_ID\" : \"'+EQUIPMENT_RECORD_ID+'\",\"EQUIPMENT_STATUS\" : \"'+EQUIPMENT_STATUS+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"FABLOCATION_NAME\" : \"'+FABLOCATION_NAME+'\",\"FABLOCATION_RECORD_ID\" : \"'+FABLOCATION_RECORD_ID+'\",\"FCWOSS\" : \"'+FCWOSS+'\",\"FCWISS\" : \"'+FCWISS+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"GLOBAL_CURRENCY_RECORD_ID\" : \"'+GLOBAL_CURRENCY_RECORD_ID+'\",\"GOT_CODE\" : \"'+GOT_CODE+'\",\"HEDBIN\" : \"'+HEDBIN+'\",\"HEDBIC\" : \"'+HEDBIC+'\",\"HEDBIP\" : \"'+HEDBIP+'\",\"KIT_NAME\" : \"'+KIT_NAME+'\",\"KIT_NUMBER\" : \"'+KIT_NUMBER+'\",\"KPU\" : \"'+KPU+'\",\"LINE\" : \"'+LINE+'\",\"MNT_PLANT_ID\" : \"'+MNT_PLANT_ID+'\",\"MNT_PLANT_NAME\" : \"'+MNT_PLANT_NAME+'\",\"MNT_PLANT_RECORD_ID\" : \"'+MNT_PLANT_RECORD_ID+'\",\"MODULE_ID\" : \"'+MODULE_ID+'\",\"MODULE_NAME\" : \"'+MODULE_NAME+'\",\"MODULE_RECORD_ID\" : \"'+MODULE_RECORD_ID+'\",\"NWPTOC\" : \"'+NWPTOC+'\",\"NWPTOP\" : \"'+NWPTOP+'\",\"NWPTON\" : \"'+NWPTON+'\",\"EQNODE\" : \"'+EQNODE+'\",\"NCNSMB_ENT\" : \"'+NCNSMB_ENT+'\",\"NUMLAY\" : \"'+NUMLAY+'\",\"NUMLCI\" : \"'+NUMLCI+'\",\"NUMLPI\" : \"'+NUMLPI+'\",\"OBJECT_ID\" : \"'+OBJECT_ID+'\",\"OBJECT_TYPE\" : \"'+OBJECT_TYPE+'\",\"PMEVNT_ENT\" : \"'+PMEVNT_ENT+'\",\"PM_ID\" : \"'+PM_ID+'\",\"PM_LEVEL\" : \"'+PM_LEVEL+'\",\"PM_RECORD_ID\" : \"'+PM_RECORD_ID+'\",\"PMLAB_ENT\" : \"'+PMLAB_ENT+'\",\"PRICEBENCHMARK_RECORD_ID\" : \"'+PRICEBENCHMARK_RECORD_ID+'\",\"PRMKPI_ENT\" : \"'+PRMKPI_ENT+'\",\"PRINT_FLAG\" : \"'+PRINT_FLAG+'\",\"PROCES\" : \"'+PROCES+'\",\"SERVICE_DESCRIPTION\" : \"'+SERVICE_DESCRIPTION+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SERVICE_RECORD_ID\" : \"'+SERVICE_RECORD_ID+'\",\"QUANTITY\" : \"'+QUANTITY+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"QTEITMGBK_RECORD_ID\" : \"'+QTEITMGBK_RECORD_ID+'\",\"QTEITM_RECORD_ID\" : \"'+QTEITM_RECORD_ID+'\",\"QUOTE_RECORD_ID\" : \"'+QUOTE_RECORD_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"QTEREV_RECORD_ID\" : \"'+QTEREV_RECORD_ID+'\",\"ADJ_PM_FREQUENCY\" : \"'+ADJ_PM_FREQUENCY+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SALESORG_NAME\" : \"'+SALESORG_NAME+'\",\"SALESORG_RECORD_ID\" : \"'+SALESORG_RECORD_ID+'\",\"SLSPRC\" : \"'+SLSPRC+'\",\"SERIAL_NO\" : \"'+SERIAL_NO+'\",\"SVCTCS\" : \"'+SVCTCS+'\",\"SVCTMG\" : \"'+SVCTMG+'\",\"SVCTPR\" : \"'+SVCTPR+'\",\"SVSPCT\" : \"'+SVSPCT+'\",\"SPCTCS\" : \"'+SPCTCS+'\",\"SPCTMG\" : \"'+SPCTMG+'\",\"SPCTPR\" : \"'+SPCTPR+'\",\"SPSPCT\" : \"'+SPSPCT+'\",\"SPCCLN\" : \"'+SPCCLN+'\",\"SPCCLC\" : \"'+SPCCLC+'\",\"SPCCLP\" : \"'+SPCCLP+'\",\"SPCCOT\" : \"'+SPCCOT+'\",\"SPCCCI\" : \"'+SPCCCI+'\",\"SPCCPI\" : \"'+SPCCPI+'\",\"SPQTEV\" : \"'+SPQTEV+'\",\"SSCM_PM_FREQUENCY\" : \"'+SSCM_PM_FREQUENCY+'\",\"STATUS\" : \"'+STATUS+'\",\"TRGPRC\" : \"'+TRGPRC+'\",\"TAXVDC\" : \"'+TAXVDC+'\",\"TAXVGC\" : \"'+TAXVGC+'\",\"TAXVTP\" : \"'+TAXVTP+'\",\"TAXGRP\" : \"'+TAXGRP+'\",\"TECHNOLOGY\" : \"'+TECHNOLOGY+'\",\"TKM_RECORD_ID\" : \"'+TKM_RECORD_ID+'\",\"TAMTDC\" : \"'+TAMTDC+'\",\"TAMTGC\" : \"'+TAMTGC+'\",\"TOTLCI\" : \"'+TOTLCI+'\",\"TENVDC\" : \"'+TENVDC+'\",\"TENVGC\" : \"'+TENVGC+'\",\"TNTVDC\" : \"'+TNTVDC+'\",\"TNTVGC\" : \"'+TNTVGC+'\",\"TNTMGC\" : \"'+TNTMGC+'\",\"TNTMPC\" : \"'+TNTMPC+'\",\"TOTLPI\" : \"'+TOTLPI+'\",\"UIMVCI\" : \"'+UIMVCI+'\",\"UIMVPI\" : \"'+UIMVPI+'\",\"USRPRC\" : \"'+USRPRC+'\",\"UBSNSA\" : \"'+UBSNSA+'\",\"UBSBDA\" : \"'+UBSBDA+'\",\"UACBDA\" : \"'+UACBDA+'\",\"TGADJP\" : \"'+TGADJP+'\",\"WETCLN_ENT\" : \"'+WETCLN_ENT+'\",\"ITPROF\" : \"'+ITPROF+'\",\"ITGRBK\" : \"'+ITGRBK+'\",\"ITPRMD\" : \"'+ITPRMD+'\",\"SWPKTA\" : \"'+SWPKTA+'\",\"PROPRT_CLEAN_ENT\" : \"'+PROPRT_CLEAN_ENT+'\",\"PRIPER_CRCPRM_ENT\" : \"'+PRIPER_CRCPRM_ENT+'\",\"LIMITED_PART_ENT\" : \"'+LIMITED_PART_ENT+'\",\"PART_BRNDWN_ENT\" : \"'+PART_BRNDWN_ENT+'\",\"PART_BUYBCK_ENT\" : \"'+PART_BUYBCK_ENT+'\",\"AICTYR\" : \"'+AICTYR+'\",\"AICCSD\" : \"'+AICCSD+'\",\"ITEQID\" : \"'+ITEQID+'\",\"ITASID\" : \"'+ITASID+'\",\"ITGTCD\" : \"'+ITGTCD+'\",\"ITDVDN\" : \"'+ITDVDN+'\",\"ITPRTY\" : \"'+ITPRTY+'\",\"ITTOCF\" : \"'+ITTOCF+'\",\"ITEVNT\" : \"'+ITEVNT+'\",\"ITEVML\" : \"'+ITEVML+'\",\"ITKTID\" : \"'+ITKTID+'\",\"ITKTNO\" : \"'+ITKTNO+'\",\"AISSPC\" : \"'+AISSPC+'\",\"ITTNBV\" : \"'+ITTNBV+'\",\"ITTNBC\" : \"'+ITTNBC+'\",\"AICPUP\" : \"'+AICPUP+'\",\"TGKPNS\" : \"'+TGKPNS+'\",\"ATKNCI\" : \"'+ATKNCI+'\",\"ATKNPI\" : \"'+ATKNPI+'\",\"CONSCP\" : \"'+CONSCP+'\",\"CONSPI\" : \"'+CONSPI+'\",\"NONCCI\" : \"'+NONCCI+'\",\"NONCPI\" : \"'+NONCPI+'\",\"SBTCST\" : \"'+SBTCST+'\",\"SPTLIN\" : \"'+SPTLIN+'\",\"SPTKPI\" : \"'+SPTKPI+'\",\"SPTPMD\" : \"'+SPTPMD+'\",\"SPTCNS\" : \"'+SPTCNS+'\",\"SPTEQC\" : \"'+SPTEQC+'\",\"SPTPMH\" : \"'+SPTPMH+'\",\"SPTCMH\" : \"'+SPTCMH+'\",\"SPTBTP\" : \"'+SPTBTP+'\",\"SPSPQT\" : \"'+SPSPQT+'\",\"SPSPSP\" : \"'+SPSPSP+'\",\"ITRSTM\" : \"'+ITRSTM+'\",\"ITSDUB\" : \"'+ITSDUB+'\",\"ITSDUT\" : \"'+ITSDUT+'\",\"ITSDUI\" : \"'+ITSDUI+'\",\"ITSVSD\" : \"'+ITSVSD+'\",\"ITSVED\" : \"'+ITSVED+'\",\"ITCCVD\" : \"'+ITCCVD+'\",\"ITCCVY\" : \"'+ITCCVY+'\",\"ITWASS\" : \"'+ITWASS+'\",\"ITWASE\" : \"'+ITWASE+'\",\"ITACVD\" : \"'+ITACVD+'\",\"ITACVY\" : \"'+ITACVY+'\",\"AICYWS\" : \"'+AICYWS+'\",\"AICYWE\" : \"'+AICYWE+'\",\"AICYSS\" : \"'+AICYSS+'\",\"AICYBS\" : \"'+AICYBS+'\",\"AICYBE\" : \"'+AICYBE+'\",\"AICYSE\" : \"'+AICYSE+'\",\"ITWSGP\" : \"'+ITWSGP+'\",\"ITPBPI\" : \"'+ITPBPI+'\",\"ITPELK\" : \"'+ITPELK+'\",\"ITHPLI\" : \"'+ITHPLI+'\",\"ITPRMO\" : \"'+ITPRMO+'\",\"ITPDTP\" : \"'+ITPDTP+'\",\"ITNWTL\" : \"'+ITNWTL+'\",\"ITSSCA\" : \"'+ITSSCA+'\",\"ITMPRA\" : \"'+ITMPRA+'\",\"ITGBBV\" : \"'+ITGBBV+'\",\"ITPBCA\" : \"'+ITPBCA+'\",\"ITPBPA\" : \"'+ITPBPA+'\",\"AIPBNC\" : \"'+AIPBNC+'\",\"AICPNP\" : \"'+AICPNP+'\",\"AITPNP\" : \"'+AITPNP+'\",\"AISPNP\" : \"'+AISPNP+'\",\"AIBPNP\" : \"'+AIBPNP+'\",\"ITAPEG\" : \"'+ITAPEG+'\",\"AIATCM\" : \"'+AIATCM+'\",\"AIANCM\" : \"'+AIANCM+'\",\"AINPCM\" : \"'+AINPCM+'\",\"AICNCM\" : \"'+AICNCM+'\",\"AINCCM\" : \"'+AINCCM+'\",\"AIPKCM\" : \"'+AIPKCM+'\",\"AIPKCI\" : \"'+AIPKCI+'\",\"AIPKPI\" : \"'+AIPKPI+'\",\"AISBCC\" : \"'+AISBCC+'\",\"AIFTTC\" : \"'+AIFTTC+'\",\"AISBPC\" : \"'+AISBPC+'\",\"QTCNST\" : \"'+QTCNST+'\",\"QTCNED\" : \"'+QTCNED+'\",\"ITTPMF\" : \"'+ITTPMF+'\",\"AISSCS\" : \"'+AISSCS+'\",\"AITCWS\" : \"'+AITCWS+'\",\"AITPDP\" : \"'+AITPDP+'\",\"AIBPDP\" : \"'+AIBPDP+'\",\"AISBCS\" : \"'+AISBCS+'\",\"AITTCI\" : \"'+AITTCI+'\",\"AIFCOS\" : \"'+AIFCOS+'\",\"SBTPRC\" : \"'+SBTPRC+'\",\"FINPRC\" : \"'+FINPRC+'\",\"AIUSPR\" : \"'+AIUSPR+'\",\"BCHDPT\" : \"'+BCHDPT+'\",\"BCHDAP\" : \"'+BCHDAP+'\",\"BMPPDA\" : \"'+BMPPDA+'\",\"AIYUPD\" : \"'+AIYUPD+'\",\"AICPFP\" : \"'+AICPFP+'\",\"AITMGC\" : \"'+AITMGC+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"PER_EVENT_COST_WOSEEDSTOCK\" : \"'+PER_EVENT_COST_WOSEEDSTOCK+'\",\"PER_EVENT_COST_WISEEDSTOCK\" : \"'+PER_EVENT_COST_WISEEDSTOCK+'\",\"DEVICE_NODE\" : \"'+DEVICE_NODE+'\",\"SND_FBL_ID\" : \"'+SND_FBL_ID+'\",\"ITCTAS\" : \"'+ITCTAS+'\",\"AIFCPE\" : \"'+AIFCPE+'\",\"AIUPPE\" : \"'+AIUPPE+'\",\"AICPPE\" : \"'+AICPPE+'\",\"AICCPE\" : \"'+AICCPE+'\",\"YOYPCT\" : \"'+YOYPCT+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,   OFRING),'') AS  OFRING,ISNULL(CONVERT(VARCHAR,  QTETYP),'') AS  QTETYP,ISNULL(CONVERT(VARCHAR,  BILTYP),'') AS  BILTYP,ISNULL(CONVERT(VARCHAR,  CNTYER),'') AS  CNTYER,ISNULL(CONVERT(VARCHAR(11),STADTE,101),'') AS STADTE,ISNULL(CONVERT(VARCHAR(11),ENDDTE,101),'') AS ENDDTE,ISNULL(CONVERT(VARCHAR,    CNTDAY),'') AS  CNTDAY,ISNULL(CONVERT(VARCHAR,  INWRTY),'') AS  INWRTY,ISNULL(CONVERT(VARCHAR(11),WTYSTE,101),'') AS WTYSTE,ISNULL(CONVERT(VARCHAR(11),WTYEND,101),'') AS WTYEND,ISNULL(CONVERT(VARCHAR,    WTYDAY),'') AS  WTYDAY,ISNULL(CONVERT(VARCHAR,  FABLOC),'') AS  FABLOC,ISNULL(CONVERT(VARCHAR,  GRNBOK),'') AS  GRNBOK,ISNULL(CONVERT(VARCHAR,  BLUBOK),'') AS  BLUBOK,ISNULL(CONVERT(VARCHAR,  EQUCAT),'') AS  EQUCAT,ISNULL(CONVERT(VARCHAR,  EQUPID),'') AS  EQUPID,ISNULL(CONVERT(VARCHAR,  SERNUM),'') AS  SERNUM,ISNULL(CONVERT(VARCHAR,  PLTFRM),'') AS  PLTFRM,ISNULL(CONVERT(VARCHAR(MAX), TOLCFG),'') AS  TOLCFG,ISNULL(CONVERT(VARCHAR,  SUBSIZ),'') AS  SUBSIZ,ISNULL(CONVERT(VARCHAR,  REGION),'') AS  REGION,ISNULL(CONVERT(VARCHAR,  ISPOES),'') AS  ISPOES,ISNULL(CONVERT(VARCHAR,  PRODID),'') AS  PRODID,ISNULL(CONVERT(VARCHAR,  CSTSRC),'') AS  CSTSRC,ISNULL(CONVERT(VARCHAR,  PRCSRC),'') AS  PRCSRC,ISNULL(CONVERT(VARCHAR,  CMLBRC),'') AS  CMLBRC,ISNULL(CONVERT(VARCHAR,  CMPREC),'') AS  CMPREC,ISNULL(CONVERT(VARCHAR,  CMPRFC),'') AS  CMPRFC,ISNULL(CONVERT(VARCHAR,  GQPLBC),'') AS  GQPLBC,ISNULL(CONVERT(VARCHAR,  LQPLBC),'') AS  LQPLBC,ISNULL(CONVERT(VARCHAR,  PMPREC),'') AS  PMPREC,ISNULL(CONVERT(VARCHAR,  PMPRFC),'') AS  PMPRFC,ISNULL(CONVERT(VARCHAR,  PMPCLC),'') AS  PMPCLC,ISNULL(CONVERT(VARCHAR,  PMPMEC),'') AS  PMPMEC,ISNULL(CONVERT(VARCHAR,  PMPRCC),'') AS  PMPRCC,ISNULL(CONVERT(VARCHAR,  SDSTKC),'') AS  SDSTKC,ISNULL(CONVERT(VARCHAR,  KPINDC),'') AS  KPINDC,ISNULL(CONVERT(VARCHAR,  FAILRC),'') AS  FAILRC,ISNULL(CONVERT(VARCHAR,  OUTSRC),'') AS  OUTSRC,ISNULL(CONVERT(VARCHAR,  LGSTCC),'') AS  LGSTCC,ISNULL(CONVERT(VARCHAR,  TNHRPT),'') AS  TNHRPT,ISNULL(CONVERT(VARCHAR,  TCWOSS),'') AS  TCWOSS,ISNULL(CONVERT(VARCHAR,  TCWISS),'') AS  TCWISS,ISNULL(CONVERT(VARCHAR,  INTCPV),'') AS  INTCPV,ISNULL(CONVERT(VARCHAR,  INTCPC),'') AS  INTCPC,ISNULL(CONVERT(VARCHAR,  OSSVDV),'') AS  OSSVDV,ISNULL(CONVERT(VARCHAR,  LTCOSS),'') AS  LTCOSS,ISNULL(CONVERT(VARCHAR,  POFVDV),'') AS  POFVDV,ISNULL(CONVERT(VARCHAR,  POFVDC),'') AS  POFVDC,ISNULL(CONVERT(VARCHAR,  GBKVDV),'') AS  GBKVDV,ISNULL(CONVERT(VARCHAR,  GBKVDC),'') AS  GBKVDC,ISNULL(CONVERT(VARCHAR,  UIMVDV),'') AS  UIMVDV,ISNULL(CONVERT(VARCHAR,  UIMVDC),'') AS  UIMVDC,ISNULL(CONVERT(VARCHAR,  CAVVDV),'') AS  CAVVDV,ISNULL(CONVERT(VARCHAR,  CAVVDC),'') AS  CAVVDC,ISNULL(CONVERT(VARCHAR,  WNDVDV),'') AS  WNDVDV,ISNULL(CONVERT(VARCHAR,  WNDVDC),'') AS  WNDVDC,ISNULL(CONVERT(VARCHAR,  CCRTMV),'') AS  CCRTMV,ISNULL(CONVERT(VARCHAR,  CCRTMC),'') AS  CCRTMC,ISNULL(CONVERT(VARCHAR,  SCMVDV),'') AS  SCMVDV,ISNULL(CONVERT(VARCHAR,  SCMVDC),'') AS  SCMVDC,ISNULL(CONVERT(VARCHAR,  CCDFFV),'') AS  CCDFFV,ISNULL(CONVERT(VARCHAR,  CCDFFC),'') AS  CCDFFC,ISNULL(CONVERT(VARCHAR,  NPIVDV),'') AS  NPIVDV,ISNULL(CONVERT(VARCHAR,  NPIVDC),'') AS  NPIVDC,ISNULL(CONVERT(VARCHAR,  DTPVDV),'') AS  DTPVDV,ISNULL(CONVERT(VARCHAR,  DTPVDC),'') AS  DTPVDC,ISNULL(CONVERT(VARCHAR,  CSTVDV),'') AS  CSTVDV,ISNULL(CONVERT(VARCHAR,  CSTVDC),'') AS  CSTVDC,ISNULL(CONVERT(VARCHAR,  CSGVDV),'') AS  CSGVDV,ISNULL(CONVERT(VARCHAR,  CSGVDC),'') AS  CSGVDC,ISNULL(CONVERT(VARCHAR,  QRQVDV),'') AS  QRQVDV,ISNULL(CONVERT(VARCHAR,  QRQVDC),'') AS  QRQVDC,ISNULL(CONVERT(VARCHAR,  SVCVDV),'') AS  SVCVDV,ISNULL(CONVERT(VARCHAR,  SVCVDC),'') AS  SVCVDC,ISNULL(CONVERT(VARCHAR,  RKFVDV),'') AS  RKFVDV,ISNULL(CONVERT(VARCHAR,  PDCBPR),'') AS  PDCBPR,ISNULL(CONVERT(VARCHAR,  RKFVDC),'') AS  RKFVDC,ISNULL(CONVERT(VARCHAR,  PBPVDV),'') AS  PBPVDV,ISNULL(CONVERT(VARCHAR,  PBPVDC),'') AS  PBPVDC,ISNULL(CONVERT(VARCHAR,  ADDCOF),'') AS  ADDCOF,ISNULL(CONVERT(VARCHAR,  SUMCOF),'') AS  SUMCOF,ISNULL(CONVERT(VARCHAR,  INMP01),'') AS  INMP01,ISNULL(CONVERT(VARCHAR,  INMP02),'') AS  INMP02,ISNULL(CONVERT(VARCHAR,  FNMDPR),'') AS  FNMDPR,ISNULL(CONVERT(VARCHAR,  SADSPC),'') AS  SADSPC,ISNULL(CONVERT(VARCHAR,  TAPMMP),'') AS  TAPMMP,ISNULL(CONVERT(VARCHAR,  MTGPRC),'') AS  MTGPRC,ISNULL(CONVERT(VARCHAR,  SAPMMP),'') AS  SAPMMP,ISNULL(CONVERT(VARCHAR,  MSLPRC),'') AS  MSLPRC,ISNULL(CONVERT(VARCHAR,  BDDSPC),'') AS  BDDSPC,ISNULL(CONVERT(VARCHAR,  BDPMMP),'') AS  BDPMMP,ISNULL(CONVERT(VARCHAR,  MBDPRC),'') AS  MBDPRC,ISNULL(CONVERT(VARCHAR,  CEPRUP),'') AS  CEPRUP,ISNULL(CONVERT(VARCHAR,  MCLPRC),'') AS  MCLPRC,ISNULL(CONVERT(VARCHAR,  BPTKPI),'') AS  BPTKPI,ISNULL(CONVERT(VARCHAR,  ATGKEY),'') AS  ATGKEY,ISNULL(CONVERT(VARCHAR,  ATGKEC),'') AS  ATGKEC,ISNULL(CONVERT(VARCHAR,  ATGKEP),'') AS  ATGKEP,ISNULL(CONVERT(VARCHAR,  ATNKEY),'') AS  ATNKEY,ISNULL(CONVERT(VARCHAR,  AMNCPI),'') AS  AMNCPI,ISNULL(CONVERT(VARCHAR,  AMNCCI),'') AS  AMNCCI,ISNULL(CONVERT(VARCHAR,  AMNPPI),'') AS  AMNPPI,ISNULL(CONVERT(VARCHAR,  ASSEMBLY_ID),'') AS ASSEMBLY_ID,ISNULL(CONVERT(VARCHAR, ASSEMBLY_RECORD_ID),'') AS  ASSEMBLY_RECORD_ID,ISNULL(CONVERT(VARCHAR,  BDVPRC),'') AS  BDVPRC,'' AS    BCHCFX,'' AS    BCHCUR,''  AS BCHCXD,ISNULL(CONVERT(VARCHAR,    BCHPGC),'') AS  BCHPGC,'' AS    BHCPVT,ISNULL(CONVERT(VARCHAR,  CAVVCI),'') AS  CAVVCI,ISNULL(CONVERT(VARCHAR,  CAVVPI),'') AS  CAVVPI,ISNULL(CONVERT(VARCHAR,  CELPRC),'') AS  CELPRC,ISNULL(CONVERT(VARCHAR,  CMLAB_ENT),'') AS   CMLAB_ENT,ISNULL(CONVERT(VARCHAR,   CNSMBL_ENT),'') AS  CNSMBL_ENT,ISNULL(CONVERT(VARCHAR,  CNTCVG_ENT),'') AS  CNTCVG_ENT,ISNULL(CONVERT(VARCHAR,  CONTRACT_ID),'') AS CONTRACT_ID,ISNULL(CONVERT(VARCHAR, CONTRACT_NAME),'') AS   CONTRACT_NAME,ISNULL(CONVERT(VARCHAR,   CTPDFP),'') AS  CTPDFP,ISNULL(CONVERT(VARCHAR,  CONTRACT_RECORD_ID),'') AS  CONTRACT_RECORD_ID,ISNULL(CONVERT(VARCHAR,  CNTCST),'') AS  CNTCST,ISNULL(CONVERT(VARCHAR,  CNTMGN),'') AS  CNTMGN,ISNULL(CONVERT(VARCHAR,  CNTPRC),'') AS  CNTPRC,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_FROM,101),'') AS CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_TO,101),'') AS CONTRACT_VALID_TO,ISNULL(REPLACE(CUSTOMER_TOOL_ID,'\"',''),'') AS CUSTOMER_TOOL_ID,ISNULL(CONVERT(VARCHAR,   DOCCUR),'') AS  DOCCUR,ISNULL(CONVERT(VARCHAR,  DCCRFX),'') AS  DCCRFX,ISNULL(CONVERT(VARCHAR(11),DCCRXD,101),'') AS DCCRXD,ISNULL(CONVERT(VARCHAR, EQUIPMENTCATEGORY_DESCRIPTION),'') AS   EQUIPMENTCATEGORY_DESCRIPTION,ISNULL(CONVERT(VARCHAR,   EQUIPMENTCATEGORY_ID),'') AS    EQUIPMENTCATEGORY_ID,ISNULL(CONVERT(VARCHAR,    EQUIPMENTCATEGORY_RECORD_ID),'') AS EQUIPMENTCATEGORY_RECORD_ID,ISNULL(CONVERT(VARCHAR, REPLACE(EQUIPMENT_DESCRIPTION,'\"','')),'') AS  EQUIPMENT_DESCRIPTION,ISNULL(CONVERT(VARCHAR,   EQUIPMENT_ID),'') AS    EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,    EQUIPMENT_RECORD_ID),'') AS EQUIPMENT_RECORD_ID,ISNULL(CONVERT(VARCHAR, EQUIPMENT_STATUS),'') AS    EQUIPMENT_STATUS,ISNULL(CONVERT(VARCHAR,    FABLOCATION_ID),'') AS  FABLOCATION_ID,ISNULL(CONVERT(VARCHAR,  FABLOCATION_NAME),'') AS    FABLOCATION_NAME,ISNULL(CONVERT(VARCHAR,    FABLOCATION_RECORD_ID),'') AS   FABLOCATION_RECORD_ID,ISNULL(CONVERT(VARCHAR,   FCWOSS),'') AS  FCWOSS,ISNULL(CONVERT(VARCHAR,  FCWISS),'') AS  FCWISS,ISNULL(CONVERT(VARCHAR,  GLOBAL_CURRENCY),'') AS GLOBAL_CURRENCY,ISNULL(CONVERT(VARCHAR, GLOBAL_CURRENCY_RECORD_ID),'') AS   GLOBAL_CURRENCY_RECORD_ID,ISNULL(CONVERT(VARCHAR,   GOT_CODE),'') AS    GOT_CODE,ISNULL(CONVERT(VARCHAR,    HEDBIN),'') AS  HEDBIN,ISNULL(CONVERT(VARCHAR,  HEDBIC),'') AS  HEDBIC,ISNULL(CONVERT(VARCHAR,  HEDBIP),'') AS  HEDBIP,ISNULL(CONVERT(VARCHAR,  KIT_ID),'') AS  KIT_NAME,ISNULL(CONVERT(VARCHAR,    KIT_NUMBER),'') AS  KIT_NUMBER,ISNULL(CONVERT(VARCHAR,  KPU),'') AS KPU,ISNULL(CONVERT(VARCHAR, LINE),'') AS    LINE,ISNULL(CONVERT(VARCHAR,    MNT_PLANT_ID),'') AS    MNT_PLANT_ID,ISNULL(CONVERT(VARCHAR,    MNT_PLANT_NAME),'') AS  MNT_PLANT_NAME,ISNULL(CONVERT(VARCHAR,  MNT_PLANT_RECORD_ID),'') AS MNT_PLANT_RECORD_ID,ISNULL(CONVERT(VARCHAR, MODULE_ID),'') AS   MODULE_ID,ISNULL(CONVERT(VARCHAR,   MODULE_NAME),'') AS MODULE_NAME,ISNULL(CONVERT(VARCHAR, MODULE_RECORD_ID),'') AS    MODULE_RECORD_ID,ISNULL(CONVERT(VARCHAR,    NWPTOC),'') AS  NWPTOC,ISNULL(CONVERT(VARCHAR,  NWPTOP),'') AS  NWPTOP,ISNULL(CONVERT(VARCHAR,  NWPTON),'') AS  NWPTON,ISNULL(CONVERT(VARCHAR,REPLACE(REPLACE(EQNODE,'\\',''),'''','')),'') AS  EQNODE,ISNULL(CONVERT(VARCHAR,  NCNSMB_ENT),'') AS  NCNSMB_ENT,ISNULL(CONVERT(VARCHAR,  NUMLAY),'') AS  NUMLAY,ISNULL(CONVERT(VARCHAR,  NUMLCI),'') AS  NUMLCI,ISNULL(CONVERT(VARCHAR,  NUMLPI),'') AS  NUMLPI,ISNULL(CONVERT(VARCHAR,  OBJECT_ID),'') AS   OBJECT_ID,ISNULL(CONVERT(VARCHAR,   OBJECT_TYPE),'') AS OBJECT_TYPE,ISNULL(CONVERT(VARCHAR, PMEVNT_ENT),'') AS  PMEVNT_ENT,ISNULL(CONVERT(VARCHAR,  PM_ID),'') AS   PM_ID,ISNULL(CONVERT(VARCHAR,   NULL),'') AS    PM_LEVEL,ISNULL(CONVERT(VARCHAR,    PM_RECORD_ID),'') AS    PM_RECORD_ID,ISNULL(CONVERT(VARCHAR,    PMLAB_ENT),'') AS   PMLAB_ENT,ISNULL(CONVERT(VARCHAR,   PRICEBENCHMARK_RECORD_ID),'') AS    PRICEBENCHMARK_RECORD_ID,ISNULL(CONVERT(VARCHAR,    PRMKPI_ENT),'') AS  PRMKPI_ENT,ISNULL(CONVERT(VARCHAR,  PRINT_FLAG),'') AS  PRINT_FLAG,ISNULL(CONVERT(VARCHAR,  PROCES),'') AS  PROCES,ISNULL(CONVERT(VARCHAR,  SERVICE_DESCRIPTION),'') AS SERVICE_DESCRIPTION,ISNULL(CONVERT(VARCHAR, SERVICE_ID),'') AS  SERVICE_ID,ISNULL(CONVERT(VARCHAR,  SERVICE_RECORD_ID),'') AS   SERVICE_RECORD_ID,ISNULL(CONVERT(VARCHAR,   QUANTITY),'') AS    QUANTITY,ISNULL(CONVERT(VARCHAR,    SAQICO.QUOTE_ID),'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,    QTEITMGBK_RECORD_ID),'') AS QTEITMGBK_RECORD_ID,ISNULL(CONVERT(VARCHAR, QTEITM_RECORD_ID),'') AS    QTEITM_RECORD_ID,ISNULL(CONVERT(VARCHAR,    QUOTE_RECORD_ID),'') AS QUOTE_RECORD_ID,ISNULL(CONVERT(VARCHAR, SAQICO.QTEREV_ID),'') AS    QTEREV_ID,ISNULL(CONVERT(VARCHAR,   QTEREV_RECORD_ID),'') AS    QTEREV_RECORD_ID,ISNULL(CONVERT(VARCHAR,    ADJ_PM_FREQUENCY),'') AS    ADJ_PM_FREQUENCY,ISNULL(CONVERT(VARCHAR,    SALESORG_ID),'') AS SALESORG_ID,ISNULL(CONVERT(VARCHAR, SALESORG_NAME),'') AS   SALESORG_NAME,ISNULL(CONVERT(VARCHAR,   SALESORG_RECORD_ID),'') AS  SALESORG_RECORD_ID,ISNULL(CONVERT(VARCHAR,  SLSPRC),'') AS  SLSPRC,ISNULL(CONVERT(VARCHAR,  SERIAL_NO),'') AS   SERIAL_NO,ISNULL(CONVERT(VARCHAR,   SVCTCS),'') AS  SVCTCS,ISNULL(CONVERT(VARCHAR,  SVCTMG),'') AS  SVCTMG,ISNULL(CONVERT(VARCHAR,  SVCTPR),'') AS  SVCTPR,ISNULL(CONVERT(VARCHAR,  SVSPCT),'') AS  SVSPCT,ISNULL(CONVERT(VARCHAR,  SPCTCS),'') AS  SPCTCS,ISNULL(CONVERT(VARCHAR,  SPCTMG),'') AS  SPCTMG,ISNULL(CONVERT(VARCHAR,  SPCTPR),'') AS  SPCTPR,ISNULL(CONVERT(VARCHAR,  SPSPCT),'') AS  SPSPCT,ISNULL(CONVERT(VARCHAR,  SPCCLN),'') AS  SPCCLN,ISNULL(CONVERT(VARCHAR,  SPCCLC),'') AS  SPCCLC,ISNULL(CONVERT(VARCHAR,  SPCCLP),'') AS  SPCCLP,ISNULL(CONVERT(VARCHAR,  SPCCOT),'') AS  SPCCOT,ISNULL(CONVERT(VARCHAR,  SPCCCI),'') AS  SPCCCI,ISNULL(CONVERT(VARCHAR,  SPCCPI),'') AS  SPCCPI,ISNULL(CONVERT(VARCHAR,  SPQTEV),'') AS  SPQTEV,ISNULL(CONVERT(VARCHAR,  SSCM_PM_FREQUENCY),'') AS   SSCM_PM_FREQUENCY,ISNULL(CONVERT(VARCHAR,   STATUS),'') AS  STATUS,ISNULL(CONVERT(VARCHAR,  TRGPRC),'') AS  TRGPRC,ISNULL(CONVERT(VARCHAR,  TAXVDC),'') AS  TAXVDC,ISNULL(CONVERT(VARCHAR,  TAXVGC),'') AS  TAXVGC,ISNULL(CONVERT(VARCHAR,  TAXVTP),'') AS  TAXVTP,ISNULL(CONVERT(VARCHAR,  TAXGRP),'') AS  TAXGRP,ISNULL(CONVERT(VARCHAR,  TECHNOLOGY),'') AS  TECHNOLOGY,ISNULL(CONVERT(VARCHAR,  TKM_RECORD_ID),'') AS   TKM_RECORD_ID,ISNULL(CONVERT(VARCHAR,   TAMTDC),'') AS  TAMTDC,ISNULL(CONVERT(VARCHAR,  TAMTGC),'') AS  TAMTGC,ISNULL(CONVERT(VARCHAR,  TOTLCI),'') AS  TOTLCI,ISNULL(CONVERT(VARCHAR,  TENVDC),'') AS  TENVDC,ISNULL(CONVERT(VARCHAR,  TENVGC),'') AS  TENVGC,ISNULL(CONVERT(VARCHAR,  TNTVDC),'') AS  TNTVDC,ISNULL(CONVERT(VARCHAR,  TNTVGC),'') AS  TNTVGC,ISNULL(CONVERT(VARCHAR,  TNTMGC),'') AS  TNTMGC,ISNULL(CONVERT(VARCHAR,  TNTMPC),'') AS  TNTMPC,ISNULL(CONVERT(VARCHAR,  TOTLPI),'') AS  TOTLPI,ISNULL(CONVERT(VARCHAR,  UIMVCI),'') AS  UIMVCI,ISNULL(CONVERT(VARCHAR,  UIMVPI),'') AS  UIMVPI,ISNULL(CONVERT(VARCHAR,  USRPRC),'') AS  USRPRC,ISNULL(CONVERT(VARCHAR,  UBSNSA),'') AS  UBSNSA,ISNULL(CONVERT(VARCHAR,  UBSBDA),'') AS  UBSBDA,ISNULL(CONVERT(VARCHAR,  UACBDA),'') AS  UACBDA,ISNULL(CONVERT(VARCHAR,  TGADJP),'') AS  TGADJP,ISNULL(CONVERT(VARCHAR,  WETCLN_ENT),'') AS  WETCLN_ENT,ISNULL(CONVERT(VARCHAR,  YOYPCT),'') AS  YOYPCT, ISNULL(CONVERT(VARCHAR,DEVICE_NODE),'') AS DEVICE_NODE,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,  ITPROF),'') AS  ITPROF,ISNULL(CONVERT(VARCHAR,  ITGRBK),'') AS  ITGRBK,ISNULL(CONVERT(VARCHAR,  ITPRMD),'') AS  ITPRMD,ISNULL(CONVERT(VARCHAR,  SWPKTA),'') AS  SWPKTA,ISNULL(CONVERT(VARCHAR,  PROPRT_CLEAN_ENT),'') AS  PROPRT_CLEAN_ENT,ISNULL(CONVERT(VARCHAR,  PRIPER_CRCPRM_ENT),'') AS  PRIPER_CRCPRM_ENT,ISNULL(CONVERT(VARCHAR,  LIMITED_PART_ENT),'') AS  LIMITED_PART_ENT,ISNULL(CONVERT(VARCHAR,  PART_BRNDWN_ENT),'') AS  PART_BRNDWN_ENT,ISNULL(CONVERT(VARCHAR,  PART_BUYBCK_ENT),'') AS  PART_BUYBCK_ENT,ISNULL(CONVERT(VARCHAR,  AICTYR),'') AS  AICTYR,ISNULL(CONVERT(VARCHAR,  AICCSD),'') AS  AICCSD,ISNULL(CONVERT(VARCHAR,  ITEQID),'') AS  ITEQID,ISNULL(CONVERT(VARCHAR,  ITASID),'') AS  ITASID,ISNULL(CONVERT(VARCHAR,  ITGTCD),'') AS  ITGTCD,ISNULL(CONVERT(VARCHAR,  ITDVDN),'') AS  ITDVDN,ISNULL(CONVERT(VARCHAR,  ITPRTY),'') AS  ITPRTY,ISNULL(CONVERT(VARCHAR,  ITTOCF),'') AS  ITTOCF,ISNULL(CONVERT(VARCHAR,  ITEVNT),'') AS  ITEVNT,ISNULL(CONVERT(VARCHAR,  ITEVML),'') AS  ITEVML,ISNULL(CONVERT(VARCHAR,  ITKTID),'') AS  ITKTID,ISNULL(CONVERT(VARCHAR,  ITKTNO),'') AS  ITKTNO,ISNULL(CONVERT(VARCHAR,  AISSPC),'') AS  AISSPC,ISNULL(CONVERT(VARCHAR,  ITTNBV),'') AS  ITTNBV,ISNULL(CONVERT(VARCHAR,  ITTNBC),'') AS  ITTNBC,ISNULL(CONVERT(VARCHAR,  AICPUP),'') AS  AICPUP,ISNULL(CONVERT(VARCHAR,  TGKPNS),'') AS  TGKPNS,ISNULL(CONVERT(VARCHAR,  ATKNCI),'') AS  ATKNCI,ISNULL(CONVERT(VARCHAR,  ATKNPI),'') AS  ATKNPI,ISNULL(CONVERT(VARCHAR,  CONSCP),'') AS  CONSCP,ISNULL(CONVERT(VARCHAR,  CONSPI),'') AS  CONSPI,ISNULL(CONVERT(VARCHAR,  NONCCI),'') AS  NONCCI,ISNULL(CONVERT(VARCHAR,  NONCPI),'') AS  NONCPI,ISNULL(CONVERT(VARCHAR,  SBTCST),'') AS  SBTCST,ISNULL(CONVERT(VARCHAR,  SPTLIN),'') AS  SPTLIN,ISNULL(CONVERT(VARCHAR,  SPTKPI),'') AS  SPTKPI,ISNULL(CONVERT(VARCHAR,  SPTPMD),'') AS  SPTPMD,ISNULL(CONVERT(VARCHAR,  SPTCNS),'') AS  SPTCNS,ISNULL(CONVERT(VARCHAR,  SPTEQC),'') AS  SPTEQC,ISNULL(CONVERT(VARCHAR,  SPTPMH),'') AS  SPTPMH,ISNULL(CONVERT(VARCHAR,  SPTCMH),'') AS  SPTCMH,ISNULL(CONVERT(VARCHAR,  SPTBTP),'') AS  SPTBTP,ISNULL(CONVERT(VARCHAR,  SPSPQT),'') AS  SPSPQT,ISNULL(CONVERT(VARCHAR,  SPSPSP),'') AS  SPSPSP,ISNULL(CONVERT(VARCHAR,  ITRSTM),'') AS  ITRSTM,ISNULL(CONVERT(VARCHAR,  ITSDUB),'') AS  ITSDUB,ISNULL(CONVERT(VARCHAR,  ITSDUT),'') AS  ITSDUT,ISNULL(CONVERT(VARCHAR,  ITSDUI),'') AS  ITSDUI,ISNULL(CONVERT(VARCHAR,  ITSVSD),'') AS  ITSVSD,ISNULL(CONVERT(VARCHAR,  ITSVED),'') AS  ITSVED,ISNULL(CONVERT(VARCHAR,  ITCCVD),'') AS  ITCCVD,ISNULL(CONVERT(VARCHAR,  ITCCVY),'') AS  ITCCVY,ISNULL(CONVERT(VARCHAR,  ITWASS),'') AS  ITWASS,ISNULL(CONVERT(VARCHAR,  ITWASE),'') AS  ITWASE,ISNULL(CONVERT(VARCHAR,  ITACVD),'') AS  ITACVD,ISNULL(CONVERT(VARCHAR,  ITACVY),'') AS  ITACVY,ISNULL(CONVERT(VARCHAR,  AICYWS),'') AS  AICYWS,ISNULL(CONVERT(VARCHAR,  AICYWE),'') AS  AICYWE,ISNULL(CONVERT(VARCHAR,  AICYSS),'') AS  AICYSS,ISNULL(CONVERT(VARCHAR,  AICYBS),'') AS  AICYBS,ISNULL(CONVERT(VARCHAR,  AICYBE),'') AS  AICYBE,ISNULL(CONVERT(VARCHAR,  AICYSE),'') AS  AICYSE,ISNULL(CONVERT(VARCHAR,  ITWSGP),'') AS  ITWSGP,ISNULL(CONVERT(VARCHAR,  ITPBPI),'') AS  ITPBPI,ISNULL(CONVERT(VARCHAR,  ITPELK),'') AS  ITPELK,ISNULL(CONVERT(VARCHAR,  ITHPLI),'') AS  ITHPLI,ISNULL(CONVERT(VARCHAR,  ITPRMO),'') AS  ITPRMO,ISNULL(CONVERT(VARCHAR,  ITPDTP),'') AS  ITPDTP,ISNULL(CONVERT(VARCHAR,  ITNWTL),'') AS  ITNWTL,ISNULL(CONVERT(VARCHAR,  ITSSCA),'') AS  ITSSCA,ISNULL(CONVERT(VARCHAR,  ITMPRA),'') AS  ITMPRA,ISNULL(CONVERT(VARCHAR,  ITGBBV),'') AS  ITGBBV,ISNULL(CONVERT(VARCHAR,  ITPBCA),'') AS  ITPBCA,ISNULL(CONVERT(VARCHAR,  ITPBPA),'') AS  ITPBPA,ISNULL(CONVERT(VARCHAR,  AIPBNC),'') AS  AIPBNC,ISNULL(CONVERT(VARCHAR,  AICPNP),'') AS  AICPNP,ISNULL(CONVERT(VARCHAR,  AITPNP),'') AS  AITPNP,ISNULL(CONVERT(VARCHAR,  AISPNP),'') AS  AISPNP,ISNULL(CONVERT(VARCHAR,  AIBPNP),'') AS  AIBPNP,ISNULL(CONVERT(VARCHAR,  ITAPEG),'') AS  ITAPEG,ISNULL(CONVERT(VARCHAR,  AIATCM),'') AS  AIATCM,ISNULL(CONVERT(VARCHAR,  AIANCM),'') AS  AIANCM,ISNULL(CONVERT(VARCHAR,  AINPCM),'') AS  AINPCM,ISNULL(CONVERT(VARCHAR,  AICNCM),'') AS  AICNCM,ISNULL(CONVERT(VARCHAR,  AINCCM),'') AS  AINCCM,ISNULL(CONVERT(VARCHAR,  AIPKCM),'') AS  AIPKCM,ISNULL(CONVERT(VARCHAR,  AIPKCI),'') AS  AIPKCI,ISNULL(CONVERT(VARCHAR,  AIPKPI),'') AS  AIPKPI,ISNULL(CONVERT(VARCHAR,  AISBCC),'') AS  AISBCC,ISNULL(CONVERT(VARCHAR,  AIFTTC),'') AS  AIFTTC,ISNULL(CONVERT(VARCHAR,  AISBPC),'') AS  AISBPC,ISNULL(CONVERT(VARCHAR,  QTCNST),'') AS  QTCNST,ISNULL(CONVERT(VARCHAR,  QTCNED),'') AS  QTCNED,ISNULL(CONVERT(VARCHAR,  ITTPMF),'') AS  ITTPMF,ISNULL(CONVERT(VARCHAR,  AISSCS),'') AS  AISSCS,ISNULL(CONVERT(VARCHAR,  AITCWS),'') AS  AITCWS,ISNULL(CONVERT(VARCHAR,  AITPDP),'') AS  AITPDP,ISNULL(CONVERT(VARCHAR,  AIBPDP),'') AS  AIBPDP,ISNULL(CONVERT(VARCHAR,  AISBCS),'') AS  AISBCS,ISNULL(CONVERT(VARCHAR,  AITTCI),'') AS  AITTCI,ISNULL(CONVERT(VARCHAR,  AIFCOS),'') AS  AIFCOS,ISNULL(CONVERT(VARCHAR,  SBTPRC),'') AS  SBTPRC,ISNULL(CONVERT(VARCHAR,  FINPRC),'') AS  FINPRC,ISNULL(CONVERT(VARCHAR,  AIUSPR),'') AS  AIUSPR,ISNULL(CONVERT(VARCHAR,  BCHDPT),'') AS  BCHDPT,ISNULL(CONVERT(VARCHAR,  BCHDAP),'') AS  BCHDAP,ISNULL(CONVERT(VARCHAR,  BMPPDA),'') AS  BMPPDA,ISNULL(CONVERT(VARCHAR,  AIYUPD),'') AS  AIYUPD,ISNULL(CONVERT(VARCHAR,  AICPFP),'') AS  AICPFP,ISNULL(CONVERT(VARCHAR,  AITMGC),'') AS  AITMGC,ISNULL(CONVERT(VARCHAR(100),SAQICO.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQICO.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQICO.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQICO.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR,PER_EVENT_COST_WISEEDSTOCK),'') AS PER_EVENT_COST_WISEEDSTOCK,ISNULL(CONVERT(VARCHAR,PER_EVENT_COST_WOSEEDSTOCK),'') AS PER_EVENT_COST_WOSEEDSTOCK,ISNULL(CONVERT(VARCHAR,SNDFBL_ID),'') AS SND_FBL_ID,ISNULL(CONVERT(VARCHAR(100),ITCTAS),'') AS ITCTAS,ISNULL(CONVERT(VARCHAR(100),AIFCPE),'') AS AIFCPE, ISNULL(CONVERT(VARCHAR(100),AIUPPE),'') AS AIUPPE, ISNULL(CONVERT(VARCHAR(100),AICPPE),'') AS AICPPE, ISNULL(CONVERT(VARCHAR(100),AICCPE),'') AS AICCPE FROM SAQICO_BKP_HADOOP SAQICO(NOLOCK) LEFT JOIN (SELECT QUOTE_ID,QTEREV_ID,SND_EQUIPMENT_ID,SNDFBL_ID FROM SAQASE (NOLOCK) WHERE SAQASE.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQASE.QTEREV_ID IN ("+str(Revision[:-1])+") )SAQASE ON SAQICO.QUOTE_ID = SAQASE.QUOTE_ID AND SAQICO.QTEREV_ID = SAQASE.QTEREV_ID AND SAQICO.EQUIPMENT_ID = SAQASE.SND_EQUIPMENT_ID WHERE SAQICO.QUOTE_ID = '"+str(Qt_ID)+"'  AND SAQICO.QTEREV_ID IN ("+str(Revision[:-1])+") AND SAQICO.LINE>= "+str(Tstart)+" AND SAQICO.LINE<="+str(Tend)+" ) t    ) A FOR XML PATH ('')  ), 1, 1, '')+',','amp;#','#'),'&lt;','<'),'&gt;','>') AS RESULT)A ")
                
                SAQICO_DATA = SAQICO_DATA+SAQICO_QRY.RESULT
                
                Tstart = Tstart + 100
                Tend = Tend + 100
            
            else:
                Tool_flag = 1
        if len(SAQICO_DATA) > 0:
            SAQICO_QUERY = '''"SAQICO": [{}]'''.format(SAQICO_DATA[:-1])
        else:
            SAQICO_QUERY = ''
        
        SAQICO_DRP = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''SAQICO_BKP_HADOOP'' ) BEGIN DROP TABLE SAQICO_BKP_HADOOP END  ' ")

        #SAQICA
        SAQICA_QUERY = SqlHelper.GetFirst(
                "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQICA\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ASSEMBLY_ID\" : \"'+ASSEMBLY_ID+'\",\"ASSEMBLY_STATUS\" : \"'+ASSEMBLY_STATUS+'\",\"EQUIPMENTCATEGORY_ID\" : \"'+EQUIPMENTCATEGORY_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENTTYPE_ID\" : \"'+EQUIPMENTTYPE_ID+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"GOT_CODE\" : \"'+GOT_CODE+'\",\"MNT_PLANT_ID\" : \"'+MNT_PLANT_ID+'\",\"PLATFORM\" : \"'+PLATFORM+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"SERIAL_NUMBER\" : \"'+SERIAL_NUMBER+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"COST_CALCULATION_STATUS\" : \"'+COST_CALCULATION_STATUS+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"CLEANING_COST\" : \"'+CLEANING_COST+'\",\"CM_PART_COST\" : \"'+CM_PART_COST+'\",\"KPI_COST\" : \"'+KPI_COST+'\",\"LABOR_COST\" : \"'+LABOR_COST+'\",\"PM_PART_COST\" : \"'+PM_PART_COST+'\",\"CM_LABOR_HRS\" : \"'+CM_LABOR_HRS+'\",\"GREATER_THAN_QTLY_HRS\" : \"'+GREATER_THAN_QTLY_HRS+'\",\"LABOR_RATE\" : \"'+LABOR_RATE+'\",\"LESS_THAN_QTLY_HRS\" : \"'+LESS_THAN_QTLY_HRS+'\",\"PM_TECH_LABOR_RATE\" : \"'+PM_TECH_LABOR_RATE+'\",\"REPAIR_COST\" : \"'+REPAIR_COST+'\",\"REPLACE_COST\" : \"'+REPLACE_COST+'\",\"TOTAL_COST_WOSEEDSTOCK\" : \"'+TOTAL_COST_WOSEEDSTOCK+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"LINE\" : \"'+LINE+'\",\"CM_HOURS_7_12\" : \"'+CM_HOURS_7_12+'\",\"CM_HOURS_5_8\" : \"'+CM_HOURS_5_8+'\",\"CM_HOURS_7_24\" : \"'+CM_HOURS_7_24+'\",\"MODULE_ID\" : \"'+MODULE_ID+'\",\"MODULE_NAME\" : \"'+MODULE_NAME+'\",\"REFURB_COST\" : \"'+REFURB_COST+'\",\"PM_REFURB_COST\" : \"'+PM_REFURB_COST+'\",\"PM_REPLACE_COST\" : \"'+PM_REPLACE_COST+'\",\"WETCLN_LBRCST\" : \"'+WETCLN_LBRCST+'\",\"WETCLN_LBRHRS\" : \"'+WETCLN_LBRHRS+'\",\"MODULE_VERSION_ID\" : \"'+MODULE_VERSION_ID+'\",\"CNTYEAR\" : \"'+CNTYEAR+'\",\"TOTAL_COST_WSEEDSTOCK\" : \"'+TOTAL_COST_WSEEDSTOCK+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ASSEMBLY_ID,'') AS   ASSEMBLY_ID,ISNULL(ASSEMBLY_STATUS,'') AS   ASSEMBLY_STATUS,ISNULL(EQUIPMENTCATEGORY_ID,'') AS  EQUIPMENTCATEGORY_ID,ISNULL(EQUIPMENT_ID,'') AS EQUIPMENT_ID,ISNULL(EQUIPMENTTYPE_ID,'')    AS  EQUIPMENTTYPE_ID,ISNULL(FABLOCATION_ID,'')  AS  FABLOCATION_ID,ISNULL(GOT_CODE,'')  AS  GOT_CODE,ISNULL(MNT_PLANT_ID,'')    AS  MNT_PLANT_ID,ISNULL(PLATFORM,'') AS PLATFORM,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(SALESORG_ID,'') AS  SALESORG_ID,ISNULL(SERIAL_NUMBER,'') AS SERIAL_NUMBER,ISNULL(SERVICE_ID,'') AS  SERVICE_ID,ISNULL(COST_MODULE_STATUS,'')    AS  COST_CALCULATION_STATUS,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS    QTEREV_ID,ISNULL(CONVERT(VARCHAR,CLEANING_COST),'') AS CLEANING_COST,ISNULL(CONVERT(VARCHAR,CM_PART_COST),'') AS CM_PART_COST,ISNULL(CONVERT(VARCHAR,KPI_COST),'') AS KPI_COST,ISNULL(CONVERT(VARCHAR,LABOR_COST),'') AS LABOR_COST,ISNULL(CONVERT(VARCHAR,PM_PART_COST),'') AS PM_PART_COST,ISNULL(CONVERT(VARCHAR,CM_LABOR_HRS),'') AS CM_LABOR_HRS,ISNULL(CONVERT(VARCHAR,GREATER_THAN_QTLY_HRS),'') AS GREATER_THAN_QTLY_HRS,ISNULL(CONVERT(VARCHAR,LABOR_RATE),'') AS LABOR_RATE,ISNULL(CONVERT(VARCHAR,LESS_THAN_QTLY_HRS),'') AS LESS_THAN_QTLY_HRS,ISNULL(CONVERT(VARCHAR,PM_TECH_LABOR_RATE),'') AS PM_TECH_LABOR_RATE,ISNULL(CONVERT(VARCHAR,REPAIR_COST),'') AS REPAIR_COST,ISNULL(CONVERT(VARCHAR,REPLACE_COST),'') AS REPLACE_COST,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,TOTAL_COST_WOSEEDSTOCK),'') AS TOTAL_COST_WOSEEDSTOCK,ISNULL(CONVERT(VARCHAR,TOTAL_COST_WSEEDSTOCK),'') AS TOTAL_COST_WSEEDSTOCK,ISNULL(CONVERT(VARCHAR(100),SAQICA.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQICA.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQICA.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQICA.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR,CM_HOURS_7_12),'') AS CM_HOURS_7_12,ISNULL(CONVERT(VARCHAR,CM_HOURS_5_8),'') AS CM_HOURS_5_8,ISNULL(CONVERT(VARCHAR,CM_HOURS_7_24),'') AS CM_HOURS_7_24,ISNULL(CONVERT(VARCHAR,LINE),'') AS LINE,ISNULL(CONVERT(VARCHAR,MODULE_ID),'') AS MODULE_ID,ISNULL(CONVERT(VARCHAR,MODULE_NAME),'') AS MODULE_NAME,ISNULL(CONVERT(VARCHAR,MODULE_VERSION_ID),'') AS MODULE_VERSION_ID,ISNULL(CONVERT(VARCHAR,REFURB_COST),'') AS REFURB_COST,ISNULL(CONVERT(VARCHAR,PM_REFURB_COST),'') AS PM_REFURB_COST,ISNULL(CONVERT(VARCHAR,PM_REPLACE_COST),'') AS PM_REPLACE_COST,ISNULL(CONVERT(VARCHAR,WETCLN_LBRCST),'') AS WETCLN_LBRCST,ISNULL(CONVERT(VARCHAR,WETCLN_LBRHRS),'') AS WETCLN_LBRHRS,ISNULL(CNTYEAR,'') AS CNTYEAR  FROM SAQICA(NOLOCK)  WHERE SAQICA.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQICA.QTEREV_ID IN ("+str(Revision[:-1])+") ) t    ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
            )

        #SAQIFP
        saqifp_patch = '''CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM ( SELECT replace ('\"SAQIFP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ANNUAL_QUANTITY\" : \"'+ANNUAL_QUANTITY+'\",\"BASEUOM_ID\" : \"'+BASEUOM_ID+'\",\"CUSTOMER_PART_NUMBER\" : \"'+CUSTOMER_PART_NUMBER+'\",\"DELIVERY_MODE\" : \"'+DELIVERY_MODE+'\",\"EXTENDED_PRICE\" : \"'+EXTENDED_PRICE+'\",\"LINE\" : \"'+LINE+'\",\"MATPRIGRP_ID\" : \"'+MATPRIGRP_ID+'\",\"PART_NUMBER\" : \"'+PART_NUMBER+'\",\"PRICINGPROCEDURE_ID\" : \"'+PRICINGPROCEDURE_ID+'\",\"PRICING_STATUS\" : \"'+PRICING_STATUS+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SALESUOM_CONVERSION_FACTOR\" : \"'+SALESUOM_CONVERSION_FACTOR+'\",\"SALESUOM_ID\" : \"'+SALESUOM_ID+'\" ,\"SCHEDULE_MODE\" : \"'+SCHEDULE_MODE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SRVTAXCAT_ID\" : \"'+SRVTAXCAT_ID+'\",\"SRVTAXCLA_ID\" : \"'+SRVTAXCLA_ID+'\",\"TAX\" : \"'+TAX+'\",\"TAX_PERCENTAGE\" : \"'+TAX_PERCENTAGE+'\",\"UNIT_PRICE\" : \"'+UNIT_PRICE+'\",\"VALID_FROM_DATE\" : \"'+VALID_FROM_DATE+'\",\"VALID_TO_DATE\" : \"'+VALID_TO_DATE+'\" ,\"CORE_CREDIT_PRICE\" : \"'+CORE_CREDIT_PRICE+'\",\"CUSTOMER_PARTICIPATE\" : \"'+CUSTOMER_PARTICIPATE+'\",\"CUSTOMER_ACCEPT_PART\" : \"'+CUSTOMER_ACCEPT_PART+'\",\"DOC_CURRENCY\" : \"'+DOC_CURRENCY+'\",\"EXCHANGE_ELIGIBLE\" : \"'+EXCHANGE_ELIGIBLE+'\",\"EXTPRI_INGL_CURR\" : \"'+EXTPRI_INGL_CURR+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"L1_RISK_CALC\" : \"'+L1_RISK_CALC+'\",\"L2_RISK_CALC\" : \"'+L2_RISK_CALC+'\",\"MATERIALSTATUS_ID\" : \"'+MATERIALSTATUS_ID+'\",\"NET_VALUE\" : \"'+NET_VALUE+'\",\"NET_VALUE_INGL_CURR\" : \"'+NET_VALUE_INGL_CURR+'\",\"ODCC_FLAG\" : \"'+ODCC_FLAG+'\",\"PART_DESCRIPTION\" : \"'+PART_DESCRIPTION+'\",\"RETURN_TYPE\" : \"'+RETURN_TYPE+'\",\"SHELF_LIFE\" : \"'+SHELF_LIFE+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"SHPACCOUNT_ID\" : \"'+SHPACCOUNT_ID+'\",\"STPACCOUNT_ID\" : \"'+STPACCOUNT_ID+'\",\"TAX_AMOUNT_INGL_CURR\" : \"'+TAX_AMOUNT_INGL_CURR+'\",\"UNIT_PRICE_INGL_CURR\" : \"'+UNIT_PRICE_INGL_CURR+'\",\"YEAR_1_DEMAND\" : \"'+YEAR_1_DEMAND+'\",\"YEAR_2_DEMAND\" : \"'+YEAR_2_DEMAND+'\",\"YEAR_3_DEMAND\" : \"'+YEAR_3_DEMAND+'\" ,\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON'''
        
        
        SAQIFP_QUERY = SqlHelper.GetFirst(
                "SELECT "+saqifp_patch+" from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,ANNUAL_QUANTITY),'') AS ANNUAL_QUANTITY,ISNULL(BASEUOM_ID,'') AS BASEUOM_ID,ISNULL(CUSTOMER_PART_NUMBER,'')  AS  CUSTOMER_PART_NUMBER,ISNULL(DELIVERY_MODE,'') AS    DELIVERY_MODE,ISNULL(CONVERT(VARCHAR,EXTENDED_PRICE),'') AS EXTENDED_PRICE,ISNULL(LINE,'')  AS  LINE,ISNULL(MATPRIGRP_ID,'') AS MATPRIGRP_ID,ISNULL(PART_NUMBER,'') AS PART_NUMBER,ISNULL(PRICINGPROCEDURE_ID,'')   AS  PRICINGPROCEDURE_ID,ISNULL(PRICING_STATUS,'') AS    PRICING_STATUS,ISNULL(QUOTE_ID,'') AS   QUOTE_ID,ISNULL(DOC_CURRENCY,'') AS SORG_CURRENCY,ISNULL(SALESORG_ID,'')    AS  SALESORG_ID,ISNULL(CONVERT(VARCHAR,SALESUOM_CONVERSION_FACTOR),'') AS SALESUOM_CONVERSION_FACTOR,ISNULL(SALESUOM_ID,'') AS SALESUOM_ID,ISNULL(SCHEDULE_MODE,'')  AS SCHEDULE_MODE,ISNULL(SERVICE_ID,'') AS SERVICE_ID,ISNULL(SRVTAXCAT_ID,'')   AS  SRVTAXCAT_ID,ISNULL(SRVTAXCLA_ID,'') AS SRVTAXCLA_ID,ISNULL(CONVERT(VARCHAR,TAX),'') AS TAX,ISNULL(CONVERT(VARCHAR,TAX_PERCENTAGE),'') AS TAX_PERCENTAGE,ISNULL(CONVERT(VARCHAR,UNIT_PRICE),'') AS  UNIT_PRICE,ISNULL(CONVERT(VARCHAR(11),VALID_FROM_DATE,101),'') AS VALID_FROM_DATE,ISNULL(CONVERT(VARCHAR(11),VALID_TO_DATE,101),'') AS  VALID_TO_DATE,ISNULL(CONVERT(VARCHAR,CORE_CREDIT_PRICE),'') AS  CORE_CREDIT_PRICE,ISNULL(CONVERT(VARCHAR,CUSTOMER_PARTICIPATE),'')  AS  CUSTOMER_PARTICIPATE,ISNULL(CONVERT(VARCHAR,CUSTOMER_ACCEPT_PART),'')   AS  CUSTOMER_ACCEPT_PART,ISNULL(CONVERT(VARCHAR,DOC_CURRENCY),'')   AS  DOC_CURRENCY,ISNULL(CONVERT(VARCHAR,EXCHANGE_ELIGIBLE),'')  AS  EXCHANGE_ELIGIBLE,ISNULL(CONVERT(VARCHAR,EXTPRI_INGL_CURR),'')  AS  EXTPRI_INGL_CURR,ISNULL(CONVERT(VARCHAR,GLOBAL_CURRENCY),'')    AS  GLOBAL_CURRENCY,ISNULL(CONVERT(VARCHAR,L1_RISK_CALC),'')    AS  L1_RISK_CALC,ISNULL(CONVERT(VARCHAR,L2_RISK_CALC),'')   AS  L2_RISK_CALC,ISNULL(CONVERT(VARCHAR,MATERIALSTATUS_ID),'')  AS  MATERIALSTATUS_ID,ISNULL(CONVERT(VARCHAR,NET_VALUE),'') AS  NET_VALUE,ISNULL(CONVERT(VARCHAR,NET_VALUE_INGL_CURR),'')   AS  NET_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,ODCC_FLAG),'')   AS  ODCC_FLAG,REPLACE(REPLACE(REPLACE(ISNULL(PART_DESCRIPTION,''),'\"',''),'''',''),'\\','')    AS  PART_DESCRIPTION,ISNULL(CONVERT(VARCHAR,RETURN_TYPE),'')    AS  RETURN_TYPE,ISNULL(CONVERT(VARCHAR,SHELF_LIFE),'')  AS  SHELF_LIFE,ISNULL(CONVERT(VARCHAR,SHPACCOUNT_ID),'')    AS  SHPACCOUNT_ID,ISNULL(CONVERT(VARCHAR,STPACCOUNT_ID),'') AS  STPACCOUNT_ID,ISNULL(CONVERT(VARCHAR,TAX_AMOUNT_INGL_CURR),'')  AS  TAX_AMOUNT_INGL_CURR,ISNULL(CONVERT(VARCHAR,UNIT_PRICE_INGL_CURR),'')   AS  UNIT_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_1_DEMAND),'')  AS  YEAR_1_DEMAND,ISNULL(CONVERT(VARCHAR,YEAR_2_DEMAND),'') AS  YEAR_2_DEMAND,ISNULL(CONVERT(VARCHAR,YEAR_3_DEMAND),'') AS  YEAR_3_DEMAND,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS   QTEREV_ID,ISNULL(CONVERT(VARCHAR(100),SAQIFP.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQIFP.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQIFP.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQIFP.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY  FROM SAQIFP(NOLOCK)  WHERE SAQIFP.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQIFP.QTEREV_ID IN ("+str(Revision[:-1])+") ) t   ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
            )
        
        #SAQIPD
        SAQIPD_QUERY = SqlHelper.GetFirst(
                "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQIPD\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"CUSTOMER_ANNUAL_QUANTITY\" : \"'+CUSTOMER_ANNUAL_QUANTITY+'\",\"DELIVERY_SCHED_CAT\" : \"'+DELIVERY_SCHED_CAT+'\",\"DELIVERY_SCHED_DATE\" : \"'+DELIVERY_SCHED_DATE+'\",\"LINE\" : \"'+LINE+'\",\"PART_DESCRIPTION\" : \"'+PART_DESCRIPTION+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"PART_NUMBER\" : \"'+PART_NUMBER+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"QUANTITY\" : \"'+QUANTITY+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (select A.QUOTE_ID,CONVERT(VARCHAR,'10') AS LINE ,REPLACE(REPLACE(CONVERT(VARCHAR(11),DELIVERY_DATE,121),'-',''),' ','') AS DELIVERY_SCHED_DATE,CONVERT(VARCHAR,Deliveryvalue) AS QUANTITY,PART_NUMBER,PART_DESCRIPTION,CONVERT(VARCHAR,delivery_1) AS DELIVERY_SCHED_CAT,CONVERT(VARCHAR,A.QTEREV_ID) AS QTEREV_ID,SERVICE_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR(100),A.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),A.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,A.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,A.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,'' AS CUSTOMER_ANNUAL_QUANTITY from SAQRDS(NOLOCK)A JOIN (select replace(Delivery1,'delivery_','') as delivery_1,Deliveryvalue,part_number,QUOTE_ID,CONVERT(VARCHAR,QTEREV_ID) AS QTEREV_ID,SERVICE_ID,REPLACE(REPLACE(REPLACE(ISNULL(PART_DESCRIPTION,''),'\"',''),'''',''),'\\','')  AS PART_DESCRIPTION from saqspt (nolock) cross apply (values('delivery_1',delivery_1 ),('delivery_2',delivery_2 ),('delivery_3',delivery_3 ),('delivery_4',delivery_4),('delivery_5',delivery_5 ),('delivery_6',delivery_6 ),('delivery_7',delivery_7 ),('delivery_8',delivery_8 ),('delivery_9',delivery_9 ),('delivery_10',delivery_10 ),('delivery_11',delivery_11 ),('delivery_12',delivery_12 ),('delivery_13',delivery_13 ),('delivery_14',delivery_14 ),('delivery_15',delivery_15 ),('delivery_16',delivery_16 ),('delivery_17',delivery_17 ),('delivery_18',delivery_18 ),('delivery_19',delivery_19 ),('delivery_20',delivery_20 ),('delivery_21',delivery_21 ),('delivery_22',delivery_22 ),('delivery_23',delivery_23 ),('delivery_24',delivery_24 ),('delivery_25',delivery_25 ),('delivery_26',delivery_26 ),('delivery_27',delivery_27 ),('delivery_28',delivery_28 ),('delivery_29',delivery_29 ),('delivery_30',delivery_30 ),('delivery_31',delivery_31 ),('delivery_32',delivery_32 ),('delivery_33',delivery_33 ),('delivery_34',delivery_34 ),('delivery_35',delivery_35 ),('delivery_36',delivery_36 ),('delivery_37',delivery_37 ),('delivery_38',delivery_38 ),('delivery_39',delivery_39 ),('delivery_40',delivery_40 ),('delivery_41',delivery_41 ),('delivery_42',delivery_42 ),('delivery_43',delivery_43 ),('delivery_44',delivery_44 ),('delivery_45',delivery_45 ),('delivery_46',delivery_46 ),('delivery_47',delivery_47 ),('delivery_48',delivery_48 ),('delivery_49',delivery_49 ),('delivery_50',delivery_50 ),('delivery_51',delivery_51 ),('delivery_52',delivery_52 )) as CA(Delivery1,Deliveryvalue) where  QUOTE_ID = '"+str(Qt_ID)+"' AND QTEREV_ID IN ("+str(Revision[:-1])+") )B ON A.QUOTE_ID = B.QUOTE_ID AND A.QTEREV_ID = B.QTEREV_ID AND A.DELIVERY_PERIOD = B.delivery_1  WHERE A.QUOTE_ID = '"+str(Qt_ID)+"' AND A.QTEREV_ID IN ("+str(Revision[:-1])+") ) t ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
            )
            
        
        #SAQSPT
        split_info = ''',\"DELIVERY_1\" : \"'+DELIVERY_1+'\",\"DELIVERY_2\" : \"'+DELIVERY_2+'\",\"DELIVERY_3\" : \"'+DELIVERY_3+'\",\"DELIVERY_4\" : \"'+DELIVERY_4+'\",\"DELIVERY_5\" : \"'+DELIVERY_5+'\",\"DELIVERY_6\" : \"'+DELIVERY_6+'\",\"DELIVERY_7\" : \"'+DELIVERY_7+'\",\"DELIVERY_8\" : \"'+DELIVERY_8+'\",\"DELIVERY_9\" : \"'+DELIVERY_9+'\",\"DELIVERY_10\" : \"'+DELIVERY_10+'\",\"DELIVERY_11\" : \"'+DELIVERY_11+'\",\"DELIVERY_12\" : \"'+DELIVERY_12+'\",\"DELIVERY_13\" : \"'+DELIVERY_13+'\",\"DELIVERY_14\" : \"'+DELIVERY_14+'\",\"DELIVERY_15\" : \"'+DELIVERY_15+'\",\"DELIVERY_16\" : \"'+DELIVERY_16+'\",\"DELIVERY_17\" : \"'+DELIVERY_17+'\",\"DELIVERY_18\" : \"'+DELIVERY_18+'\",\"DELIVERY_19\" : \"'+DELIVERY_19+'\",\"DELIVERY_20\" : \"'+DELIVERY_20+'\",\"DELIVERY_21\" : \"'+DELIVERY_21+'\",\"DELIVERY_22\" : \"'+DELIVERY_22+'\",\"DELIVERY_23\" : \"'+DELIVERY_23+'\",\"DELIVERY_24\" : \"'+DELIVERY_24+'\",\"DELIVERY_25\" : \"'+DELIVERY_25+'\",\"DELIVERY_26\" : \"'+DELIVERY_26+'\",\"DELIVERY_27\" : \"'+DELIVERY_27+'\",\"DELIVERY_28\" : \"'+DELIVERY_28+'\",\"DELIVERY_29\" : \"'+DELIVERY_29+'\",\"DELIVERY_30\" : \"'+DELIVERY_30+'\",\"DELIVERY_31\" : \"'+DELIVERY_31+'\",\"DELIVERY_32\" : \"'+DELIVERY_32+'\",\"DELIVERY_33\" : \"'+DELIVERY_33+'\",\"DELIVERY_34\" : \"'+DELIVERY_34+'\",\"DELIVERY_35\" : \"'+DELIVERY_35+'\",\"DELIVERY_36\" : \"'+DELIVERY_36+'\",\"DELIVERY_37\" : \"'+DELIVERY_37+'\",\"DELIVERY_38\" : \"'+DELIVERY_38+'\",\"DELIVERY_39\" : \"'+DELIVERY_39+'\",\"DELIVERY_40\" : \"'+DELIVERY_40+'\",\"DELIVERY_41\" : \"'+DELIVERY_41+'\",\"DELIVERY_42\" : \"'+DELIVERY_42+'\",\"DELIVERY_43\" : \"'+DELIVERY_43+'\",\"DELIVERY_44\" : \"'+DELIVERY_44+'\",\"DELIVERY_45\" : \"'+DELIVERY_45+'\",\"DELIVERY_46\" : \"'+DELIVERY_46+'\",\"DELIVERY_47\" : \"'+DELIVERY_47+'\",\"DELIVERY_48\" : \"'+DELIVERY_48+'\",\"DELIVERY_49\" : \"'+DELIVERY_49+'\",\"DELIVERY_50\" : \"'+DELIVERY_50+'\",\"DELIVERY_51\" : \"'+DELIVERY_51+'\",\"DELIVERY_52\" : \"'+DELIVERY_52+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\"'''


        SAQSPT_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQSPT\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"BASEUOM_ID\" : \"'+BASEUOM_ID+'\",\"CUSTOMER_PART_NUMBER\" : \"'+CUSTOMER_PART_NUMBER+'\",\"DELIVERY_MODE\" : \"'+DELIVERY_MODE+'\",\"EXTENDED_UNIT_PRICE\" : \"'+EXTENDED_UNIT_PRICE+'\",\"PART_NUMBER\" : \"'+PART_NUMBER+'\",\"PART_DESCRIPTION\" : \"'+PART_DESCRIPTION+'\",\"CUSTOMER_ANNUAL_QUANTITY\" : \"'+CUSTOMER_ANNUAL_QUANTITY+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SALESUOM_CONVERSION_FACTOR\" : \"'+SALESUOM_CONVERSION_FACTOR+'\",\"SALESUOM_ID\" : \"'+SALESUOM_ID+'\",\"SCHEDULE_MODE\" : \"'+SCHEDULE_MODE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"UNIT_PRICE\" : \"'+UNIT_PRICE+'\",\"VALID_FROM_DATE\" : \"'+VALID_FROM_DATE+'\",\"VALID_TO_DATE\" : \"'+VALID_TO_DATE+'\",\"DELIVERY_INTERVAL\" : \"'+DELIVERY_INTERVAL+'\",\"MATPRIGRP_ID\" : \"'+MATPRIGRP_ID+'\",\"MATPRIGRP_NAME\" : \"'+MATPRIGRP_NAME+'\",\"PAR_SERVICE_ID\" : \"'+PAR_SERVICE_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"PRICE_REQUEST_ID\" : \"'+PRICE_REQUEST_ID+'\",\"PRICE_REQUEST_STATUS\" : \"'+PRICE_REQUEST_STATUS+'\",\"PRICE_REQUEST_TYPE\" : \"'+PRICE_REQUEST_TYPE+'\",\"CORE_CREDIT_PRICE\" : \"'+CORE_CREDIT_PRICE+'\",\"CUSTOMER_PARTICIPATE\" : \"'+CUSTOMER_PARTICIPATE+'\",\"CUSTOMER_ACCEPT_PART\" : \"'+CUSTOMER_ACCEPT_PART+'\",\"EXCHANGE_ELIGIBLE\" : \"'+EXCHANGE_ELIGIBLE+'\",\"INCLUDED\" : \"'+INCLUDED+'\",\"MATERIALSTATUS_ID\" : \"'+MATERIALSTATUS_ID+'\",\"NEW_PART\" : \"'+NEW_PART+'\",\"ODCC_FLAG\" : \"'+ODCC_FLAG+'\",\"PROD_INSP_MEMO\" : \"'+PROD_INSP_MEMO+'\",\"RETURN_TYPE\" : \"'+RETURN_TYPE+'\",\"SHELF_LIFE\" : \"'+SHELF_LIFE+'\",\"SHPACCOUNT_ID\" : \"'+SHPACCOUNT_ID+'\",\"STPACCOUNT_ID\" : \"'+STPACCOUNT_ID+'\",\"PAR_PART_NUMBER\" : \"'+PAR_PART_NUMBER+'\",\"L1_RISK_CALC\" : \"'+L1_RISK_CALC+'\",\"L2_RISK_CALC\" : \"'+L2_RISK_CALC+'\",\"NET_VALUE_INGL_CURR\" : \"'+NET_VALUE_INGL_CURR+'\",\"TAX_PERCENTAGE\" : \"'+TAX_PERCENTAGE+'\",\"TAX_AMOUNT_INGL_CURR\" : \"'+TAX_AMOUNT_INGL_CURR+'\",\"CARP_REQUEST_ID\" : \"'+CARP_REQUEST_ID+'\",\"CUSTOMER_ELIGIBLE\" : \"'+CUSTOMER_ELIGIBLE+'\",\"ODCC_FLAG_DESCRIPTION\" : \"'+ODCC_FLAG_DESCRIPTION+'\",\"PRICING_STATUS\" : \"'+PRICING_STATUS+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"YEAR_1_DEMAND\" : \"'+YEAR_1_DEMAND+'\",\"YEAR_2_DEMAND\" : \"'+YEAR_2_DEMAND+'\",\"YEAR_3_DEMAND\" : \"'+YEAR_3_DEMAND+'\" "+str(split_info)+ "}' AS JSON from (SELECT DISTINCT ISNULL(BASEUOM_ID,'') AS BASEUOM_ID,ISNULL(CUSTOMER_PART_NUMBER,'') AS CUSTOMER_PART_NUMBER,ISNULL(DELIVERY_MODE,'') AS DELIVERY_MODE,ISNULL(CONVERT(VARCHAR,EXTENDED_UNIT_PRICE),'') AS EXTENDED_UNIT_PRICE,ISNULL(PART_NUMBER,'') AS PART_NUMBER,REPLACE(REPLACE(REPLACE(ISNULL(PART_DESCRIPTION,''),'\"',''),'''',''),'\\','')  AS PART_DESCRIPTION,ISNULL(CONVERT(VARCHAR,CUSTOMER_ANNUAL_QUANTITY),'') AS CUSTOMER_ANNUAL_QUANTITY,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(SALESORG_ID,'') AS SALESORG_ID,ISNULL(CONVERT(VARCHAR,SALESUOM_CONVERSION_FACTOR),'') AS SALESUOM_CONVERSION_FACTOR,ISNULL(SALESUOM_ID,'') AS SALESUOM_ID,ISNULL(SCHEDULE_MODE,'') AS SCHEDULE_MODE,ISNULL(SERVICE_ID,'') AS SERVICE_ID,ISNULL(CONVERT(VARCHAR,UNIT_PRICE),'') AS UNIT_PRICE,ISNULL(CONVERT(VARCHAR(100),VALID_FROM_DATE,25),'') AS VALID_FROM_DATE,ISNULL(CONVERT(VARCHAR(100),VALID_TO_DATE,25),'') AS VALID_TO_DATE,ISNULL(DELIVERY_INTERVAL,'') AS DELIVERY_INTERVAL,ISNULL(MATPRIGRP_ID,'') AS MATPRIGRP_ID,ISNULL(MATPRIGRP_NAME,'') AS MATPRIGRP_NAME,ISNULL(PAR_SERVICE_ID,'') AS PAR_SERVICE_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS QTEREV_ID,ISNULL(PRICE_REQUEST_ID,'') AS PRICE_REQUEST_ID,ISNULL(PRICE_REQUEST_STATUS,'') AS PRICE_REQUEST_STATUS,ISNULL(PRICE_REQUEST_TYPE,'') AS PRICE_REQUEST_TYPE,ISNULL(CONVERT(VARCHAR,CORE_CREDIT_PRICE),'') AS CORE_CREDIT_PRICE,ISNULL(CONVERT(VARCHAR,CUSTOMER_PARTICIPATE),'') AS CUSTOMER_PARTICIPATE,ISNULL(CONVERT(VARCHAR,CUSTOMER_ACCEPT_PART),'') AS CUSTOMER_ACCEPT_PART,ISNULL(CONVERT(VARCHAR,EXCHANGE_ELIGIBLE),'') AS EXCHANGE_ELIGIBLE,ISNULL(CONVERT(VARCHAR,INCLUDED),'') AS INCLUDED,ISNULL(MATERIALSTATUS_ID,'') AS MATERIALSTATUS_ID,ISNULL(CONVERT(VARCHAR,NEW_PART),'') AS NEW_PART,ISNULL(ODCC_FLAG,'') AS ODCC_FLAG,ISNULL(PROD_INSP_MEMO,'') AS PROD_INSP_MEMO,ISNULL(RETURN_TYPE,'') AS RETURN_TYPE,ISNULL(SHELF_LIFE,'') AS SHELF_LIFE,ISNULL(SHPACCOUNT_ID,'') AS SHPACCOUNT_ID,ISNULL(STPACCOUNT_ID,'') AS STPACCOUNT_ID,ISNULL(PAR_PART_NUMBER,'') AS PAR_PART_NUMBER,ISNULL(L1_RISK_CALC,'') AS L1_RISK_CALC,ISNULL(L2_RISK_CALC,'') AS L2_RISK_CALC,ISNULL(CONVERT(VARCHAR,NET_VALUE_INGL_CURR),'') AS NET_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,TAX_PERCENTAGE),'') AS TAX_PERCENTAGE,ISNULL(CONVERT(VARCHAR,TAX_AMOUNT_INGL_CURR),'') AS TAX_AMOUNT_INGL_CURR,ISNULL(CARP_REQUEST_ID,'') AS CARP_REQUEST_ID,ISNULL(CONVERT(VARCHAR,CUSTOMER_ELIGIBLE),'') AS CUSTOMER_ELIGIBLE,ISNULL(ODCC_FLAG_DESCRIPTION,'') AS ODCC_FLAG_DESCRIPTION,ISNULL(PRICING_STATUS,'') AS PRICING_STATUS,ISNULL(GLOBAL_CURRENCY,'') AS GLOBAL_CURRENCY,ISNULL(CONVERT(VARCHAR,YEAR_1_DEMAND),'') AS YEAR_1_DEMAND,ISNULL(CONVERT(VARCHAR,YEAR_2_DEMAND),'') AS YEAR_2_DEMAND,ISNULL(CONVERT(VARCHAR,YEAR_3_DEMAND),'') AS YEAR_3_DEMAND,ISNULL(CONVERT(VARCHAR,DELIVERY_1),'') AS DELIVERY_1,ISNULL(CONVERT(VARCHAR,DELIVERY_2),'') AS DELIVERY_2,ISNULL(CONVERT(VARCHAR,DELIVERY_3),'') AS DELIVERY_3,ISNULL(CONVERT(VARCHAR,DELIVERY_4),'') AS DELIVERY_4,ISNULL(CONVERT(VARCHAR,DELIVERY_5),'') AS DELIVERY_5,ISNULL(CONVERT(VARCHAR,DELIVERY_6),'') AS DELIVERY_6,ISNULL(CONVERT(VARCHAR,DELIVERY_7),'') AS DELIVERY_7,ISNULL(CONVERT(VARCHAR,DELIVERY_8),'') AS DELIVERY_8,ISNULL(CONVERT(VARCHAR,DELIVERY_9),'') AS DELIVERY_9,ISNULL(CONVERT(VARCHAR,DELIVERY_10),'') AS DELIVERY_10,ISNULL(CONVERT(VARCHAR,DELIVERY_11),'') AS DELIVERY_11,ISNULL(CONVERT(VARCHAR,DELIVERY_12),'') AS DELIVERY_12,ISNULL(CONVERT(VARCHAR,DELIVERY_13),'') AS DELIVERY_13,ISNULL(CONVERT(VARCHAR,DELIVERY_14),'') AS DELIVERY_14,ISNULL(CONVERT(VARCHAR,DELIVERY_15),'') AS DELIVERY_15,ISNULL(CONVERT(VARCHAR,DELIVERY_16),'') AS DELIVERY_16,ISNULL(CONVERT(VARCHAR,DELIVERY_17),'') AS DELIVERY_17,ISNULL(CONVERT(VARCHAR,DELIVERY_18),'') AS DELIVERY_18,ISNULL(CONVERT(VARCHAR,DELIVERY_19),'') AS DELIVERY_19,ISNULL(CONVERT(VARCHAR,DELIVERY_20),'') AS DELIVERY_20,ISNULL(CONVERT(VARCHAR,DELIVERY_21),'') AS DELIVERY_21,ISNULL(CONVERT(VARCHAR,DELIVERY_22),'') AS DELIVERY_22,ISNULL(CONVERT(VARCHAR,DELIVERY_23),'') AS DELIVERY_23,ISNULL(CONVERT(VARCHAR,DELIVERY_24),'') AS DELIVERY_24,ISNULL(CONVERT(VARCHAR,DELIVERY_25),'') AS DELIVERY_25,ISNULL(CONVERT(VARCHAR,DELIVERY_26),'') AS DELIVERY_26,ISNULL(CONVERT(VARCHAR,DELIVERY_27),'') AS DELIVERY_27,ISNULL(CONVERT(VARCHAR,DELIVERY_28),'') AS DELIVERY_28,ISNULL(CONVERT(VARCHAR,DELIVERY_29),'') AS DELIVERY_29,ISNULL(CONVERT(VARCHAR,DELIVERY_30),'') AS DELIVERY_30,ISNULL(CONVERT(VARCHAR,DELIVERY_31),'') AS DELIVERY_31,ISNULL(CONVERT(VARCHAR,DELIVERY_32),'') AS DELIVERY_32,ISNULL(CONVERT(VARCHAR,DELIVERY_33),'') AS DELIVERY_33,ISNULL(CONVERT(VARCHAR,DELIVERY_34),'') AS DELIVERY_34,ISNULL(CONVERT(VARCHAR,DELIVERY_35),'') AS DELIVERY_35,ISNULL(CONVERT(VARCHAR,DELIVERY_36),'') AS DELIVERY_36,ISNULL(CONVERT(VARCHAR,DELIVERY_37),'') AS DELIVERY_37,ISNULL(CONVERT(VARCHAR,DELIVERY_38),'') AS DELIVERY_38,ISNULL(CONVERT(VARCHAR,DELIVERY_39),'') AS DELIVERY_39,ISNULL(CONVERT(VARCHAR,DELIVERY_40),'') AS DELIVERY_40,ISNULL(CONVERT(VARCHAR,DELIVERY_41),'') AS DELIVERY_41,ISNULL(CONVERT(VARCHAR,DELIVERY_42),'') AS DELIVERY_42,ISNULL(CONVERT(VARCHAR,DELIVERY_43),'') AS DELIVERY_43,ISNULL(CONVERT(VARCHAR,DELIVERY_44),'') AS DELIVERY_44,ISNULL(CONVERT(VARCHAR,DELIVERY_45),'') AS DELIVERY_45,ISNULL(CONVERT(VARCHAR,DELIVERY_46),'') AS DELIVERY_46,ISNULL(CONVERT(VARCHAR,DELIVERY_47),'') AS DELIVERY_47,ISNULL(CONVERT(VARCHAR,DELIVERY_48),'') AS DELIVERY_48,ISNULL(CONVERT(VARCHAR,DELIVERY_49),'') AS DELIVERY_49,ISNULL(CONVERT(VARCHAR,DELIVERY_50),'') AS DELIVERY_50,ISNULL(CONVERT(VARCHAR,DELIVERY_51),'') AS DELIVERY_51,ISNULL(CONVERT(VARCHAR,DELIVERY_52),'') AS DELIVERY_52,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR(100),SAQSPT.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQSPT.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQSPT.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQSPT.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY FROM SAQSPT(NOLOCK) WHERE SAQSPT.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQSPT.QTEREV_ID IN ("+str(Revision[:-1])+") ) t    ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")

        #SAQSCO
        SAQSCO_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQSCO\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ACCOUNT_ID\" :\"'+ACCOUNT_ID+'\",\"ACCOUNT_NAME\" :\"'+ACCOUNT_NAME+'\",\"CONTRACT_VALID_FROM\" :\"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" :\"'+CONTRACT_VALID_TO+'\",\"DEVICE_NODE\" :\"'+DEVICE_NODE+'\",\"CUSTOMER_TOOL_ID\" :\"'+CUSTOMER_TOOL_ID+'\",\"ENTINT_STATUS\" :\"'+ENTINT_STATUS+'\",\"ENTINT_STATUS_DESC\" :\"'+ENTINT_STATUS_DESC+'\",\"EQUIPMENT_DESCRIPTION\" :\"'+EQUIPMENT_DESCRIPTION+'\",\"EQUIPMENT_ID\" :\"'+EQUIPMENT_ID+'\",\"EQUIPMENT_QUANTITY\":\"'+EQUIPMENT_QUANTITY+'\",\"EQUIPMENT_STATUS\":\"'+EQUIPMENT_STATUS+'\",\"EQUIPMENTCATEGORY_DESCRIPTION\":\"'+EQUIPMENTCATEGORY_DESCRIPTION+'\",\"EQUIPMENTCATEGORY_ID\" :\"'+EQUIPMENTCATEGORY_ID+'\",\"FABLOCATION_ID\" :\"'+FABLOCATION_ID+'\",\"FABLOCATION_NAME\" :\"'+FABLOCATION_NAME+'\",\"GREENBOOK\" :\"'+GREENBOOK+'\",\"IBASE_ATTSTS\" :\"'+IBASE_ATTSTS+'\",\"INCLUDED\" :\"'+INCLUDED+'\",\"KPU\" :\"'+KPU+'\",\"MNT_PLANT_ID\" :\"'+MNT_PLANT_ID+'\",\"MNT_PLANT_NAME\" :\"'+MNT_PLANT_NAME+'\",\"PAR_SERVICE_DESCRIPTION\" :\"'+PAR_SERVICE_DESCRIPTION+'\",\"PAR_SERVICE_ID\" :\"'+PAR_SERVICE_ID+'\",\"PARENTEQUIPMENT_ID\" :\"'+PARENTEQUIPMENT_ID+'\",\"PBG\" :\"'+PBG+'\",\"PLATFORM\" :\"'+PLATFORM+'\",\"QTEREV_ID\" :\"'+QTEREV_ID+'\",\"QUOTE_ID\" :\"'+QUOTE_ID+'\",\"QUOTE_NAME\" :\"'+QUOTE_NAME+'\",\"RELOCATION_EQUIPMENT_TYPE\" :\"'+RELOCATION_EQUIPMENT_TYPE+'\",\"SALESORG_ID\":\"'+SALESORG_ID+'\",\"SALESORG_NAME\" :\"'+SALESORG_NAME+'\",\"SAP_PART_NUMBER\" :\"'+SAP_PART_NUMBER+'\",\"SERIAL_NO\" :\"'+SERIAL_NO+'\",\"SERVICE_DESCRIPTION\" :\"'+SERVICE_DESCRIPTION+'\",\"SERVICE_ID\" :\"'+SERVICE_ID+'\",\"SERVICE_TYPE\" :\"'+SERVICE_TYPE+'\",\"SNDACC_ID\" :\"'+SNDACC_ID+'\",\"SNDACC_NAME\" :\"'+SNDACC_NAME+'\",\"SNDFBL_ID\" :\"'+SNDFBL_ID+'\",\"SNDFBL_NAME\" :\"'+SNDFBL_NAME+'\",\"SNDSOR_ID\" :\"'+SNDSOR_ID+'\",\"SNDSOR_NAME\" :\"'+SNDSOR_NAME+'\",\"TECHNOLOGY\" :\"'+TECHNOLOGY+'\",\"TEMP_TOOL\" :\"'+TEMP_TOOL+'\",\"TOOL_CONFIG\" :\"'+TOOL_CONFIG+'\",\"WAFER_SIZE\" :\"'+WAFER_SIZE+'\",\"WARRANTY_END_DATE\" :\"'+WARRANTY_END_DATE+'\",\"WARRANTY_END_DATE_ALERT\" :\"'+WARRANTY_END_DATE_ALERT+'\",\"WARRANTY_START_DATE\" :\"'+WARRANTY_START_DATE+'\",\"CPQTABLEENTRYADDEDBY\" :\"'+CPQTABLEENTRYADDEDBY+'\",\"CPQTABLEENTRYADDEDDATE\" :\"'+CPQTABLEENTRYADDEDDATE+'\",\"SESSION_ID\" :\"'+SESSION_ID+'\",\"CPQTABLEENTRYMODIFIEDBY\" :\"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYMODIFIEDDATE\" :\"'+CPQTABLEENTRYMODIFIEDDATE+'\"}' AS JSON from (SELECT DISTINCT ISNULL(SAQSCO.ACCOUNT_ID,'')  AS ACCOUNT_ID,ISNULL(SAQSCO.ACCOUNT_NAME,'')  AS ACCOUNT_NAME,ISNULL(CONVERT(VARCHAR(11),SAQSCO.CONTRACT_VALID_FROM,101),'') AS CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),SAQSCO.CONTRACT_VALID_TO,101),'')  AS CONTRACT_VALID_TO,ISNULL(SAQSCO.DEVICE_NODE,'') AS DEVICE_NODE,ISNULL(REPLACE(SAQSCO.CUSTOMER_TOOL_ID,'\"',''),'')  AS CUSTOMER_TOOL_ID,ISNULL(SAQSCO.ENTINT_STATUS,'')  AS ENTINT_STATUS,ISNULL(SAQSCO.ENTINT_STATUS_DESC,'')  AS ENTINT_STATUS_DESC,ISNULL(CONVERT(VARCHAR, REPLACE(SAQSCO.EQUIPMENT_DESCRIPTION,'\"','')),'') AS  EQUIPMENT_DESCRIPTION,ISNULL(SAQSCO.EQUIPMENT_ID,'')  AS EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,SAQSCO.EQUIPMENT_QUANTITY),'')  AS EQUIPMENT_QUANTITY,ISNULL(SAQSCO.EQUIPMENT_STATUS,'')  AS EQUIPMENT_STATUS,ISNULL(SAQSCO.EQUIPMENTCATEGORY_DESCRIPTION,'')  AS EQUIPMENTCATEGORY_DESCRIPTION,ISNULL(SAQSCO.EQUIPMENTCATEGORY_ID,'')  AS EQUIPMENTCATEGORY_ID,ISNULL(SAQSCO.FABLOCATION_ID,'')  AS FABLOCATION_ID,ISNULL(SAQSCO.FABLOCATION_NAME,'')  AS FABLOCATION_NAME,ISNULL(SAQSCO.GREENBOOK,'')  AS GREENBOOK,ISNULL(SAQSCO.IBASE_ATTSTS,'')  AS IBASE_ATTSTS,ISNULL(SAQSCO.INCLUDED,'')  AS INCLUDED,ISNULL(SAQSCO.KPU,'')  AS KPU,ISNULL(SAQSCO.MNT_PLANT_ID,'')  AS MNT_PLANT_ID,ISNULL(SAQSCO.MNT_PLANT_NAME,'')  AS MNT_PLANT_NAME,ISNULL(SAQSCO.PAR_SERVICE_DESCRIPTION,'')  AS PAR_SERVICE_DESCRIPTION,ISNULL(SAQSCO.PAR_SERVICE_ID,'')  AS PAR_SERVICE_ID,ISNULL(SAQSCO.PARENTEQUIPMENT_ID,'')  AS PARENTEQUIPMENT_ID,ISNULL(SAQSCO.PBG,'')  AS PBG,ISNULL(SAQSCO.PLATFORM,'') AS PLATFORM,ISNULL(CONVERT(VARCHAR,SAQSCO.QTEREV_ID),'')  AS QTEREV_ID,ISNULL(SAQSCO.QUOTE_ID,'')  AS QUOTE_ID,ISNULL(SAQSCO.QUOTE_NAME,'')  AS QUOTE_NAME,ISNULL(SAQSCO.RELOCATION_EQUIPMENT_TYPE,'')  AS RELOCATION_EQUIPMENT_TYPE,ISNULL(SALESORG_ID,'')  AS SALESORG_ID,ISNULL(SAQSCO.SALESORG_NAME,'')  AS SALESORG_NAME,ISNULL(SAQSCO.SAP_PART_NUMBER,'')  AS SAP_PART_NUMBER,ISNULL(SAQSCO.SERIAL_NO,'')  AS SERIAL_NO,ISNULL(SAQSCO.SERVICE_DESCRIPTION,'')  AS SERVICE_DESCRIPTION,ISNULL(SAQSCO.SERVICE_ID,'')  AS SERVICE_ID,ISNULL(SAQSCO.SERVICE_TYPE,'')  AS SERVICE_TYPE,ISNULL(SAQSCO.SNDACC_ID,'')  AS SNDACC_ID,ISNULL(SAQSCO.SNDACC_NAME,'')  AS SNDACC_NAME,ISNULL(SAQSCO.SNDFBL_ID,'')  AS SNDFBL_ID, ISNULL(SAQSCO.SNDFBL_NAME,'')  AS SNDFBL_NAME,ISNULL(SAQSCO.SNDSOR_ID,'')  AS SNDSOR_ID,ISNULL(SAQSCO.SNDSOR_NAME,'')  AS SNDSOR_NAME,ISNULL(SAQSCO.TECHNOLOGY,'')  AS TECHNOLOGY,ISNULL(CONVERT(VARCHAR,SAQSCO.TEMP_TOOL),'')  AS TEMP_TOOL,ISNULL(SAQSCO.TOOL_CONFIG,'')  AS TOOL_CONFIG,ISNULL(SAQSCO.WAFER_SIZE,'')  AS WAFER_SIZE,ISNULL(CONVERT(VARCHAR(11),SAQSCO.WARRANTY_END_DATE,101),'')  AS WARRANTY_END_DATE,ISNULL(CONVERT(VARCHAR,SAQSCO.WARRANTY_END_DATE_ALERT),'')  AS WARRANTY_END_DATE_ALERT,ISNULL(CONVERT(VARCHAR(11),SAQSCO.WARRANTY_START_DATE,101),'')  AS WARRANTY_START_DATE,ISNULL(CONVERT(VARCHAR,SAQSCO.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY ,ISNULL(CONVERT(VARCHAR(100),SAQSCO.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR,SAQSCO.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR(100),SAQSCO.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQSCO(NOLOCK)  WHERE SAQSCO.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQSCO.QTEREV_ID IN ("+str(Revision[:-1])+") ) t ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")

        #SAQRSH
        SAQRSH_QUERY = SqlHelper.GetFirst(
                "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQRSH\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"REVISION_STATUS\" : \"'+REVISION_STATUS+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"REVSTS_CHANGE_DATE\" : \"'+REVSTS_CHANGE_DATE+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,QUOTE_ID),'')  AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'')  AS QTEREV_ID,ISNULL(CONVERT(VARCHAR,REVISION_STATUS),'')  AS REVISION_STATUS,ISNULL(CONVERT(VARCHAR,REVSTS_CHANGE_DATE,25),'') AS REVSTS_CHANGE_DATE,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQRSH(NOLOCK) WHERE SAQRSH.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQRSH.QTEREV_ID IN ("+str(Revision[:-1])+") ) t ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
            )

        #SAQIBP
        SAQIBP_QUERY = SqlHelper.GetFirst(
                "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM ( SELECT replace ('\"SAQIBP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ANNUAL_BILLING_AMOUNT\" : \"'+ANNUAL_BILLING_AMOUNT+'\",\"BILLING_VALUE\" : \"'+BILLING_VALUE+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"BILLING_DATE\" : \"'+BILLING_DATE+'\",\"BILLING_DAY\" : \"'+BILLING_DAY+'\",\"BILLING_END_DATE\" : \"'+BILLING_END_DATE+'\",\"BILLING_START_DATE\" : \"'+BILLING_START_DATE+'\",\"BILLING_TYPE\" : \"'+BILLING_TYPE+'\",\"BILLING_YEAR\" : \"'+BILLING_YEAR+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_QUANTITY\" : \"'+EQUIPMENT_QUANTITY+'\",\"GREENBOOK\" : \"'+GREENBOOK+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SPLIT_BILLING\" : \"'+SPLIT_BILLING+'\",\"BILLING_VALUE_INGL_CURR\" : \"'+BILLING_VALUE_INGL_CURR+'\",\"COMMITTED_VALUE_INDT_CURR\" : \"'+COMMITTED_VALUE_INDT_CURR+'\",\"COMMITTED_VALUE_INGL_CURR\" : \"'+COMMITTED_VALUE_INGL_CURR+'\",\"ESTVAL_INDT_CURR\" : \"'+ESTVAL_INDT_CURR+'\",\"ESTVAL_INGL_CURR\" : \"'+ESTVAL_INGL_CURR+'\",\"DOC_CURRENCY\" : \"'+DOC_CURRENCY+'\",\"LINE\" : \"'+LINE+'\",\"WARRANTY_END_DATE\" : \"'+WARRANTY_END_DATE+'\",\"WARRANTY_START_DATE\" : \"'+WARRANTY_START_DATE+'\",\"PO_ITEM\" : \"'+PO_ITEM+'\",\"PO_NUMBER\" : \"'+PO_NUMBER+'\",\"QUOTE_NAME\" : \"'+QUOTE_NAME+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,ANNUAL_BILLING_AMOUNT),'') AS ANNUAL_BILLING_AMOUNT,ISNULL(CONVERT(VARCHAR,BILLING_VALUE),'') AS    BILLING_VALUE,ISNULL(GLOBAL_CURRENCY,'')    AS  GLOBAL_CURRENCY,ISNULL(CONVERT(VARCHAR(11),BILLING_DATE,101),'') AS BILLING_DATE,ISNULL(CONVERT(VARCHAR,BILLING_DAY),'') AS BILLING_DAY,ISNULL(CONVERT(VARCHAR(11),BILLING_END_DATE,101),'')    AS  BILLING_END_DATE,ISNULL(CONVERT(VARCHAR(11),BILLING_START_DATE,101),'') AS  BILLING_START_DATE,ISNULL(BILLING_TYPE,'')  AS BILLING_TYPE,ISNULL(CONVERT(VARCHAR,BILLING_YEAR),'') AS BILLING_YEAR,ISNULL(EQUIPMENT_ID,'')    AS  EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,EQUIPMENT_QUANTITY),'') AS  EQUIPMENT_QUANTITY,ISNULL(GREENBOOK,'') AS GREENBOOK,ISNULL(QUOTE_ID,'')  AS QUOTE_ID,ISNULL(SERVICE_ID,'') AS SERVICE_ID,ISNULL(CONVERT(VARCHAR,SPLIT_BILLING),'') AS SPLIT_BILLING,ISNULL(CONVERT(VARCHAR(11),WARRANTY_END_DATE,101),'') AS WARRANTY_END_DATE,ISNULL(CONVERT(VARCHAR(11),WARRANTY_START_DATE,101),'') AS  WARRANTY_START_DATE,"+str(timestamp_sessionid)+" as SESSION_ID,'' as PO_ITEM,'' as PO_NUMBER,'' as QUOTE_NAME,'' as SALESORG_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS    QTEREV_ID,ISNULL(CONVERT(VARCHAR,BILLING_VALUE_INGL_CURR),'') AS    BILLING_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,COMMITTED_VALUE_INDT_CURR),'') AS    COMMITTED_VALUE_INDT_CURR,ISNULL(CONVERT(VARCHAR,COMMITTED_VALUE_INGL_CURR),'') AS  COMMITTED_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,ESTVAL_INDT_CURR),'') AS   ESTVAL_INDT_CURR,ISNULL(CONVERT(VARCHAR,ESTVAL_INGL_CURR),'') AS    ESTVAL_INGL_CURR,ISNULL(DOC_CURRENCY,'') AS DOC_CURRENCY,ISNULL(CONVERT(VARCHAR,LINE),'') AS    LINE,ISNULL(CONVERT(VARCHAR(100),SAQIBP.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQIBP.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQIBP.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQIBP.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY  FROM SAQIBP(NOLOCK)  WHERE SAQIBP.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQIBP.QTEREV_ID IN ("+str(Revision[:-1])+") ) t    ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
            )
    
        #SAQSAP
        SAQSAP_QUERY = SqlHelper.GetFirst(
        "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM ( SELECT replace ('\"SAQSAP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"ASSEMBLY_ID\" : \"'+ASSEMBLY_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"GOT_CODE\" : \"'+GOT_CODE+'\",\"KIT_NAME\" : \"'+KIT_NAME+'\",\"KIT_NUMBER\" : \"'+KIT_NUMBER+'\",\"MODULE_ID\" : \"'+MODULE_ID+'\",\"PM_FREQUENCY\" : \"'+PM_FREQUENCY+'\",\"PM_ID\" : \"'+PM_ID+'\",\"PM_NAME\" : \"'+PM_NAME+'\",\"KIT_ID\" : \"'+KIT_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"TKM_FLAG\" : \"'+TKM_FLAG+'\",\"PM_FREQUENCY_EDITABLE\" : \"'+PM_FREQUENCY_EDITABLE+'\",\"SSCM_PM_FREQUENCY\" : \"'+SSCM_PM_FREQUENCY+'\",\"MODULE_NAME\" : \"'+MODULE_NAME+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"MNTEVT_LEVEL\" : \"'+MNTEVT_LEVEL+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"LINE\" : \"'+LINE+'\",\"CLEAN_COAT_DIFF\" : \"'+CLEAN_COAT_DIFF+'\",\"DEVICE_NODE\" : \"'+DEVICE_NODE+'\",\"ENTINT_STATUS\" : \"'+ENTINT_STATUS+'\",\"ENTINT_STATUS_DESC\" : \"'+ENTINT_STATUS_DESC+'\",\"INCLUDED\" : \"'+INCLUDED+'\",\"PROCESS_TYPE\" : \"'+PROCESS_TYPE+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT ISNULL(CONVERT(VARCHAR(100),SAQSAP.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQSAP.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQSAP.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQSAP.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR,SAQSAP.QUOTE_ID),'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.ASSEMBLY_ID),'') AS ASSEMBLY_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.EQUIPMENT_ID),'') AS EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.GOT_CODE),'') AS GOT_CODE,ISNULL(CONVERT(VARCHAR,SAQSAP.KIT_NAME),'') AS KIT_NAME,ISNULL(CONVERT(VARCHAR,SAQSAP.KIT_NUMBER),'') AS KIT_NUMBER,ISNULL(CONVERT(VARCHAR,SAQSAP.MODULE_ID),'') AS MODULE_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.PM_FREQUENCY),'') AS PM_FREQUENCY,ISNULL(CONVERT(VARCHAR,SAQSAP.PM_ID),'') AS PM_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.PM_NAME),'') AS PM_NAME,ISNULL(CONVERT(VARCHAR,SAQSAP.KIT_ID),'') AS KIT_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.SERVICE_ID),'') AS SERVICE_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.TKM_FLAG),'') AS TKM_FLAG,ISNULL(CONVERT(VARCHAR,SAQSAP.QTEREV_ID),'') AS QTEREV_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.PM_FREQUENCY_EDITABLE),'') AS PM_FREQUENCY_EDITABLE,ISNULL(CONVERT(VARCHAR,SAQSAP.SSCM_PM_FREQUENCY),'') AS SSCM_PM_FREQUENCY,ISNULL(CONVERT(VARCHAR,SAQSAP.MODULE_NAME),'') AS MODULE_NAME,ISNULL(CONVERT(VARCHAR,SAQSAP.MNTEVT_LEVEL),'') AS MNTEVT_LEVEL,"+str(timestamp_sessionid)+" as SESSION_ID,SAQICA.LINE,'' AS CLEAN_COAT_DIFF,'' AS DEVICE_NODE,'' AS ENTINT_STATUS,'' AS ENTINT_STATUS_DESC,'TRUE' AS INCLUDED,'' AS PROCESS_TYPE FROM SAQSAP(NOLOCK) JOIN SAQICA (NOLOCK) ON SAQSAP.QUOTE_ID = SAQICA.QUOTE_ID AND SAQSAP.QTEREV_ID = SAQICA.QTEREV_ID AND SAQSAP.SERVICE_ID = SAQICA.SERVICE_ID AND SAQSAP.EQUIPMENT_ID = SAQICA.EQUIPMENT_ID AND SAQSAP.ASSEMBLY_ID = SAQICA.ASSEMBLY_ID WHERE SAQSAP.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQSAP.QTEREV_ID IN ("+str(Revision[:-1])+") UNION SELECT DISTINCT ISNULL(CONVERT(VARCHAR(100),SAQGPA.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQGPA.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQGPA.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQGPA.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR,SAQGPA.QUOTE_ID),'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.ASSEMBLY_ID),'') AS ASSEMBLY_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.EQUIPMENT_ID),'') AS EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.GOT_CODE),'') AS GOT_CODE,ISNULL(CONVERT(VARCHAR,SAQGPA.KIT_NAME),'') AS KIT_NAME,ISNULL(CONVERT(VARCHAR,SAQGPA.KIT_NUMBER),'') AS KIT_NUMBER,ISNULL('','') AS MODULE_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.PM_FREQUENCY),'') AS PM_FREQUENCY,ISNULL(CONVERT(VARCHAR,SAQGPA.PM_ID),'') AS PM_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.PM_NAME),'') AS PM_NAME,ISNULL(CONVERT(VARCHAR,SAQGPA.KIT_ID),'') AS KIT_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.SERVICE_ID),'') AS SERVICE_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.TKM_FLAG),'') AS TKM_FLAG,ISNULL(CONVERT(VARCHAR,SAQGPA.QTEREV_ID),'') AS QTEREV_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.PM_FREQUENCY_EDITABLE),'') AS PM_FREQUENCY_EDITABLE,ISNULL(CONVERT(VARCHAR,SAQGPA.SSCM_PM_FREQUENCY),'') AS SSCM_PM_FREQUENCY,ISNULL('','') AS MODULE_NAME,ISNULL(CONVERT(VARCHAR,SAQGPA.MNTEVT_LEVEL),'') AS MNTEVT_LEVEL,"+str(timestamp_sessionid)+" as SESSION_ID,SAQICA.LINE,ISNULL(CLEAN_COAT_DIFF,'') AS CLEAN_COAT_DIFF,ISNULL(DEVICE_NODE,'') AS DEVICE_NODE, ISNULL(SAQGPA.ENTINT_STATUS,'') AS ENTINT_STATUS,ISNULL(SAQGPA.ENTINT_STATUS_DESC,'') AS ENTINT_STATUS_DESC,ISNULL(CONVERT(VARCHAR(20),SAQGPA.INCLUDED),'') AS INCLUDED, ISNULL(PROCESS_TYPE,'') AS PROCESS_TYPE FROM SAQGPA(NOLOCK) JOIN SAQICA (NOLOCK) ON SAQGPA.QUOTE_ID = SAQICA.QUOTE_ID AND SAQGPA.QTEREV_ID = SAQICA.QTEREV_ID AND SAQGPA.SERVICE_ID = SAQICA.SERVICE_ID AND SAQGPA.EQUIPMENT_ID = SAQICA.EQUIPMENT_ID AND SAQGPA.ASSEMBLY_ID = SAQICA.ASSEMBLY_ID   WHERE SAQGPA.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQGPA.QTEREV_ID IN ("+str(Revision[:-1])+") ) t     ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
    )
    
        #SAQGPA
        SAQGPA_QUERY = SqlHelper.GetFirst(
        "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM ( SELECT replace ('\"SAQGPA\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"ASSEMBLY_ID\" : \"'+ASSEMBLY_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"GOT_CODE\" : \"'+GOT_CODE+'\",\"KIT_NAME\" : \"'+KIT_NAME+'\",\"KIT_NUMBER\" : \"'+KIT_NUMBER+'\",\"MODULE_ID\" : \"'+MODULE_ID+'\",\"PM_FREQUENCY\" : \"'+PM_FREQUENCY+'\",\"PM_ID\" : \"'+PM_ID+'\",\"PM_NAME\" : \"'+PM_NAME+'\",\"KIT_ID\" : \"'+KIT_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"TKM_FLAG\" : \"'+TKM_FLAG+'\",\"PM_FREQUENCY_EDITABLE\" : \"'+PM_FREQUENCY_EDITABLE+'\",\"SSCM_PM_FREQUENCY\" : \"'+SSCM_PM_FREQUENCY+'\",\"MODULE_NAME\" : \"'+MODULE_NAME+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"MNTEVT_LEVEL\" : \"'+MNTEVT_LEVEL+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"CLEAN_COAT_DIFF\" : \"'+CLEAN_COAT_DIFF+'\",\"DEVICE_NODE\" : \"'+DEVICE_NODE+'\",\"ENTINT_STATUS\" : \"'+ENTINT_STATUS+'\",\"ENTINT_STATUS_DESC\" : \"'+ENTINT_STATUS_DESC+'\",\"INCLUDED\" : \"'+INCLUDED+'\",\"PROCESS_TYPE\" : \"'+PROCESS_TYPE+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT ISNULL(CONVERT(VARCHAR(100),SAQSAP.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQSAP.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQSAP.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQSAP.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR,SAQSAP.QUOTE_ID),'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.ASSEMBLY_ID),'') AS ASSEMBLY_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.EQUIPMENT_ID),'') AS EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.GOT_CODE),'') AS GOT_CODE,ISNULL(CONVERT(VARCHAR,SAQSAP.KIT_NAME),'') AS KIT_NAME,ISNULL(CONVERT(VARCHAR,SAQSAP.KIT_NUMBER),'') AS KIT_NUMBER,ISNULL(CONVERT(VARCHAR,SAQSAP.MODULE_ID),'') AS MODULE_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.PM_FREQUENCY),'') AS PM_FREQUENCY,ISNULL(CONVERT(VARCHAR,SAQSAP.PM_ID),'') AS PM_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.PM_NAME),'') AS PM_NAME,ISNULL(CONVERT(VARCHAR,SAQSAP.KIT_ID),'') AS KIT_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.SERVICE_ID),'') AS SERVICE_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.TKM_FLAG),'') AS TKM_FLAG,ISNULL(CONVERT(VARCHAR,SAQSAP.QTEREV_ID),'') AS QTEREV_ID,ISNULL(CONVERT(VARCHAR,SAQSAP.PM_FREQUENCY_EDITABLE),'') AS PM_FREQUENCY_EDITABLE,ISNULL(CONVERT(VARCHAR,SAQSAP.SSCM_PM_FREQUENCY),'') AS SSCM_PM_FREQUENCY,ISNULL(CONVERT(VARCHAR,SAQSAP.MODULE_NAME),'') AS MODULE_NAME,ISNULL(CONVERT(VARCHAR,SAQSAP.MNTEVT_LEVEL),'') AS MNTEVT_LEVEL,"+str(timestamp_sessionid)+" as SESSION_ID,'' AS CLEAN_COAT_DIFF,'' AS DEVICE_NODE,ENTINT_STATUS AS ENTINT_STATUS,ENTINT_STATUS_DESC AS ENTINT_STATUS_DESC,'TRUE' AS INCLUDED,'' AS PROCESS_TYPE  FROM SAQSAP(NOLOCK) JOIN SAQSCA (NOLOCK) ON SAQSAP.QUOTE_ID = SAQSCA.QUOTE_ID AND SAQSAP.QTEREV_ID = SAQSCA.QTEREV_ID AND SAQSAP.SERVICE_ID = SAQSCA.SERVICE_ID AND SAQSAP.EQUIPMENT_ID = SAQSCA.EQUIPMENT_ID AND SAQSAP.ASSEMBLY_ID = SAQSCA.ASSEMBLY_ID WHERE SAQSAP.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQSAP.QTEREV_ID IN ("+str(Revision[:-1])+") UNION SELECT DISTINCT ISNULL(CONVERT(VARCHAR(100),SAQGPA.CPQTABLEENTRYDATEADDED,25),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(VARCHAR(100),SAQGPA.CpqTableEntryDateModified,25),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,SAQGPA.CpqTableEntryModifiedBy),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,SAQGPA.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR,SAQGPA.QUOTE_ID),'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.ASSEMBLY_ID),'') AS ASSEMBLY_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.EQUIPMENT_ID),'') AS EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.GOT_CODE),'') AS GOT_CODE,ISNULL(CONVERT(VARCHAR,SAQGPA.KIT_NAME),'') AS KIT_NAME,ISNULL(CONVERT(VARCHAR,SAQGPA.KIT_NUMBER),'') AS KIT_NUMBER,ISNULL('','') AS MODULE_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.PM_FREQUENCY),'') AS PM_FREQUENCY,ISNULL(CONVERT(VARCHAR,SAQGPA.PM_ID),'') AS PM_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.PM_NAME),'') AS PM_NAME,ISNULL(CONVERT(VARCHAR,SAQGPA.KIT_ID),'') AS KIT_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.SERVICE_ID),'') AS SERVICE_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.TKM_FLAG),'') AS TKM_FLAG,ISNULL(CONVERT(VARCHAR,SAQGPA.QTEREV_ID),'') AS QTEREV_ID,ISNULL(CONVERT(VARCHAR,SAQGPA.PM_FREQUENCY_EDITABLE),'') AS PM_FREQUENCY_EDITABLE,ISNULL(CONVERT(VARCHAR,SAQGPA.SSCM_PM_FREQUENCY),'') AS SSCM_PM_FREQUENCY,ISNULL('','') AS MODULE_NAME,ISNULL(CONVERT(VARCHAR,SAQGPA.MNTEVT_LEVEL),'') AS MNTEVT_LEVEL,"+str(timestamp_sessionid)+" as SESSION_ID, ISNULL(CLEAN_COAT_DIFF,'') AS CLEAN_COAT_DIFF,ISNULL(DEVICE_NODE,'') AS DEVICE_NODE, ISNULL(SAQGPA.ENTINT_STATUS,'') AS ENTINT_STATUS,ISNULL(SAQGPA.ENTINT_STATUS_DESC,'') AS ENTINT_STATUS_DESC,ISNULL(CONVERT(VARCHAR(20),SAQGPA.INCLUDED),'') AS INCLUDED, ISNULL(PROCESS_TYPE,'') AS PROCESS_TYPE  FROM SAQGPA(NOLOCK) JOIN SAQSCA (NOLOCK) ON SAQGPA.QUOTE_ID = SAQSCA.QUOTE_ID AND SAQGPA.QTEREV_ID = SAQSCA.QTEREV_ID AND SAQGPA.SERVICE_ID = SAQSCA.SERVICE_ID AND SAQGPA.EQUIPMENT_ID = SAQSCA.EQUIPMENT_ID AND SAQGPA.ASSEMBLY_ID = SAQSCA.ASSEMBLY_ID   WHERE SAQGPA.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQGPA.QTEREV_ID IN ("+str(Revision[:-1])+") ) t     ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
    )
        
        #Approval Comments
        CURRENT_CART_RESPONSIBILITY_QUERY = SqlHelper.GetFirst(
            "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM ( SELECT replace ('\"CURRENT_CART_RESPONSIBILITY\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"COMMENTS\" : \"'+COMMENTS+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT "+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR(100),SAQTRV.QUOTE_ID),'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR(MAX),replace(REPLACE(replace(CURRENT_CART_RESPONSIBILITY.comment,'\n',''),'\"',''),'\\','' )),'') AS COMMENTS,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS QTEREV_ID FROM CURRENT_CART_RESPONSIBILITY(NOLOCK) JOIN CREATEDQUOTE (NOLOCK) ON CURRENT_CART_RESPONSIBILITY.CART_ID = CREATEDQUOTE.CARTID JOIN SAQTRV (NOLOCK) ON CREATEDQUOTE.CARTID = SAQTRV.CART_ID AND CREATEDQUOTE.QUOTENUMBER = SAQTRV.QUOTE_ID WHERE SAQTRV.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQTRV.QTEREV_ID IN ("+str(Revision[:-1])+") ) t    ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
        )
        
        #Quote Approval Rules
        SAQAPP_QUERY = SqlHelper.GetFirst(
            "SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM ( SELECT replace ('\"SAQAPP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"APPROVAL_RULE\" : \"'+APPROVAL_RULE+'\",\"DESCRIPTION\" : \"'+DESCRIPTION+'\",\"LEVEL\" : \"'+LEVEL+'\",\"SUBMIITED_APPROVER\" : \"'+SUBMIITED_APPROVER+'\",\"CURRENT_APPROVER\" : \"'+CURRENT_APPROVER+'\",\"STATUS\" : \"'+STATUS+'\",\"CURRENT_APPROVER_EMAIL\" : \"'+CURRENT_APPROVER_EMAIL+'\",\"CURRENT_USER_NAME\" : \"'+CURRENT_USER_NAME+'\",\"BUSINESS_GROUP\" : \"'+BUSINESS_GROUP+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"REQUESTOR_COMMENTS\" : \"'+REQUESTOR_COMMENTS+'\",\"APPROVER_COMMENTS\" : \"'+APPROVER_COMMENTS+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT "+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR(100),SAQTRV.QUOTE_ID),'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS QTEREV_ID,ISNULL(CONVERT(VARCHAR(MAX),QT__SAQAPP.APPROVAL_RULE),'') AS APPROVAL_RULE       ,ISNULL(CONVERT(VARCHAR(MAX),QT__SAQAPP.DESCRIPTION),'') AS DESCRIPTION     ,ISNULL(CONVERT(VARCHAR(MAX),QT__SAQAPP.LEVEL),'') AS LEVEL     ,ISNULL(CONVERT(VARCHAR(MAX),QT__SAQAPP.SUBMIITED_APPROVER),'') AS SUBMIITED_APPROVER       ,ISNULL(CONVERT(VARCHAR(MAX),QT__SAQAPP.CURRENT_APPROVER),'') AS CURRENT_APPROVER       ,ISNULL(CONVERT(VARCHAR(MAX),QT__SAQAPP.STATUS),'') AS STATUS       ,ISNULL(CONVERT(VARCHAR(MAX),QT__SAQAPP.CURRENT_APPROVER_EMAIL),'') AS CURRENT_APPROVER_EMAIL       ,ISNULL(CONVERT(VARCHAR(MAX),QT__SAQAPP.CURRENT_USER_NAME),'') AS CURRENT_USER_NAME     ,ISNULL(CONVERT(VARCHAR(MAX),QT__SAQAPP.BUSINESS_GROUP),'') AS BUSINESS_GROUP       ,ISNULL(CONVERT(NVARCHAR(30),QT__SAQAPP.CPQTABLEENTRYDATEADDED,20),'') AS CPQTABLEENTRYADDEDDATE,ISNULL(CONVERT(NVARCHAR(30),QT__SAQAPP.CPQTABLEENTRYDATEMODIFIED,20),'') AS CPQTABLEENTRYMODIFIEDDATE,ISNULL(CONVERT(VARCHAR,QT__SAQAPP.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(CONVERT(VARCHAR,QT__SAQAPP.CPQTABLEENTRYADDEDBY),'') AS CPQTABLEENTRYADDEDBY,ISNULL(replace(replace(replace(COMPETITOR,'\n',''),'\"',''),'\\',''),'') AS REQUESTOR_COMMENTS,ISNULL(replace(replace(replace(JUSTIFICATION_COMMENTS,'\n',''),'\"',''),'\\',''),'') AS APPROVER_COMMENTS FROM QT__SAQAPP(NOLOCK) JOIN CREATEDQUOTE (NOLOCK) ON QT__SAQAPP.CARTID = CREATEDQUOTE.CARTID AND QT__SAQAPP.OWNERID = CREATEDQUOTE.USERID JOIN SAQTRV (NOLOCK) ON CREATEDQUOTE.CARTID = SAQTRV.CART_ID AND CREATEDQUOTE.QUOTENUMBER = SAQTRV.QUOTE_ID WHERE SAQTRV.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQTRV.QTEREV_ID IN ("+str(Revision[:-1])+")  ) t     ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
        )
        
                #Entitlement Query 
        start11 = 1
        end11 = 1

        tbl_flag11 = 0
        Check_flag11 = 1
        while Check_flag11 == 1:

            ent_query11 = SqlHelper.GetFirst("SELECT DISTINCT QUOTE_ID,cpqtableentryid FROM (SELECT DISTINCT QUOTE_ID,cpqtableentryid, ROW_NUMBER()OVER(ORDER BY cpqtableentryid) AS SNO FROM  SAQSCE(NOLOCK) where SAQSCE.QUOTE_ID='"+str(Qt_ID)+"' AND SAQSCE.QTEREV_ID IN ("+str(Revision[:-1])+") ) A WHERE SNO>= "+str(start11)+" AND SNO<="+str(end11)+" ")
            
            SAQSCE = 'SAQSCE_INBOUND'

            if str(ent_query11) != "None":
                tbl_flag11 = 1        
                start11 = start11 + 1
                end11 = end11 + 1

                #Log.Info("-> XML"+str(ent_query.cpqtableentryid))


                if start11 == 2:

                    SAQIEN_SEL11 = SqlHelper.GetFirst("sp_executesql @T=N'declare @H int; Declare @val Varchar(MAX);DECLARE @XML XML; SELECT @val = FINAL from(select  REPLACE(entitlement_xml,''<QUOTE_ITEM_ENTITLEMENT>'',sml) AS FINAL FROM (select ''<QUOTE_ITEM_ENTITLEMENT><QUOTE_ID>''+isnull(quote_id,'''')+''</QUOTE_ID><QTEREV_ID>''+ISNULL(CONVERT(VARCHAR,QTEREV_ID),'''')+''</QTEREV_ID><SERVICE_ID>''+isnull(service_id,'''')+''</SERVICE_ID><FABLOCATION_ID>''+isnull(fablocation_id,'''')+''</FABLOCATION_ID><IS_CHANGED>''+isnull(convert(varchar,IS_CHANGED),'''')+''</IS_CHANGED><ENTITLEMENT_GROUP_ID>''+isnull(convert(varchar,entitlement_group_id),'''')+''</ENTITLEMENT_GROUP_ID><EQUIPMENT_ID>''+isnull(convert(varchar,EQUIPMENT_ID),'''')+''</EQUIPMENT_ID><CPQTABLEENTRYADDEDDATE>''+ISNULL(CONVERT(VARCHAR(100),SAQSCE.CPQTABLEENTRYDATEADDED,25),'''')+''</CPQTABLEENTRYADDEDDATE><CPQTABLEENTRYMODIFIEDDATE>''+ISNULL(CONVERT(VARCHAR(100),SAQSCE.CpqTableEntryDateModified,25),'''')+''</CPQTABLEENTRYMODIFIEDDATE><CPQTABLEENTRYMODIFIEDBY>''+ISNULL(CONVERT(VARCHAR,SAQSCE.CpqTableEntryModifiedBy),'''') +''</CPQTABLEENTRYMODIFIEDBY><CPQTABLEENTRYADDEDBY>''+ISNULL(CONVERT(VARCHAR,SAQSCE.CPQTABLEENTRYADDEDBY),'''')+''</CPQTABLEENTRYADDEDBY>'' AS sml,replace(replace(replace(replace(replace(replace(replace(replace(replace(ENTITLEMENT_XML,''&'','';#38''),'''','';#39''),'' < '','' &lt; '' ),'' > '','' &gt; '' ),''_>'',''_&gt;''),''_<'',''_&lt;''),''&'','';#38''),''  '',''''),''\n'','''')   as entitlement_xml from SAQSCE(nolock) where quote_id=''"+str(Qt_ID)+"'' AND cpqtableentryid = "+str(ent_query11.cpqtableentryid)+" )A )a SELECT @XML = CONVERT(XML,''<ROOT>''+@VAL+''</ROOT>'') exec sys.sp_xml_preparedocument @H output,@XML; select QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,name as ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID,EQUIPMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY INTO "+str(SAQSCE)+"  FROM (select QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID,EQUIPMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY from openxml(@H, ''ROOT/QUOTE_ITEM_ENTITLEMENT'', 0) with (QUOTE_ID VARCHAR(100) ''QUOTE_ID'',SERVICE_ID VARCHAR(100) ''SERVICE_ID'',FABLOCATION_ID VARCHAR(100) ''FABLOCATION_ID'',IS_CHANGED VARCHAR(100) ''IS_CHANGED'',ENTITLEMENT_GROUP_ID VARCHAR(100) ''ENTITLEMENT_GROUP_ID'',ENTITLEMENT_NAME VARCHAR(100) ''ENTITLEMENT_NAME'',ENTITLEMENT_DESCRIPTION VARCHAR(100) ''ENTITLEMENT_DESCRIPTION'',ENTITLEMENT_VALUE_CODE VARCHAR(100) ''ENTITLEMENT_VALUE_CODE'',ENTITLEMENT_DISPLAY_VALUE VARCHAR(100) ''ENTITLEMENT_DISPLAY_VALUE'',ENTITLEMENT_COST_IMPACT VARCHAR(100) ''ENTITLEMENT_COST_IMPACT'',ENTITLEMENT_PRICE_IMPACT VARCHAR(100) ''ENTITLEMENT_PRICE_IMPACT'',QTEREV_ID VARCHAR(100) ''QTEREV_ID'',ENTITLEMENT_ID VARCHAR(100) ''ENTITLEMENT_ID'',EQUIPMENT_ID VARCHAR(100) ''EQUIPMENT_ID'',CPQTABLEENTRYADDEDDATE VARCHAR(100) ''CPQTABLEENTRYADDEDDATE'',CPQTABLEENTRYMODIFIEDDATE VARCHAR(100) ''CPQTABLEENTRYMODIFIEDDATE'',CPQTABLEENTRYMODIFIEDBY VARCHAR(100) ''CPQTABLEENTRYMODIFIEDBY'',CPQTABLEENTRYADDEDBY VARCHAR(100) ''CPQTABLEENTRYADDEDBY'' ) )a CROSS apply SplitString (ENTITLEMENT_VALUE_CODE)  ; exec sys.sp_xml_removedocument @H; '")                 
                
                else:
                    
                    SAQIEN_SEL11 = SqlHelper.GetFirst("sp_executesql @T=N'declare @H int; Declare @val Varchar(MAX);DECLARE @XML XML; SELECT @val = FINAL from(select  REPLACE(entitlement_xml,''<QUOTE_ITEM_ENTITLEMENT>'',sml) AS FINAL FROM (select ''<QUOTE_ITEM_ENTITLEMENT><QUOTE_ID>''+isnull(quote_id,'''')+''</QUOTE_ID><QTEREV_ID>''+ISNULL(CONVERT(VARCHAR,QTEREV_ID),'''')+''</QTEREV_ID><SERVICE_ID>''+isnull(service_id,'''')+''</SERVICE_ID><FABLOCATION_ID>''+isnull(fablocation_id,'''')+''</FABLOCATION_ID><IS_CHANGED>''+isnull(convert(varchar,IS_CHANGED),'''')+''</IS_CHANGED><ENTITLEMENT_GROUP_ID>''+isnull(convert(varchar,entitlement_group_id),'''')+''</ENTITLEMENT_GROUP_ID><EQUIPMENT_ID>''+isnull(convert(varchar,EQUIPMENT_ID),'''')+''</EQUIPMENT_ID><CPQTABLEENTRYADDEDDATE>''+ISNULL(CONVERT(VARCHAR(100),SAQSCE.CPQTABLEENTRYDATEADDED,25),'''')+''</CPQTABLEENTRYADDEDDATE><CPQTABLEENTRYMODIFIEDDATE>''+ISNULL(CONVERT(VARCHAR(100),SAQSCE.CpqTableEntryDateModified,25),'''')+''</CPQTABLEENTRYMODIFIEDDATE><CPQTABLEENTRYMODIFIEDBY>''+ISNULL(CONVERT(VARCHAR,SAQSCE.CpqTableEntryModifiedBy),'''') +''</CPQTABLEENTRYMODIFIEDBY><CPQTABLEENTRYADDEDBY>''+ISNULL(CONVERT(VARCHAR,SAQSCE.CPQTABLEENTRYADDEDBY),'''')+''</CPQTABLEENTRYADDEDBY> '' AS sml,replace(replace(replace(replace(replace(replace(replace(replace(replace(ENTITLEMENT_XML,''&'','';#38''),'''','';#39''),'' < '','' &lt; '' ),'' > '','' &gt; '' ),''_>'',''_&gt;''),''_<'',''_&lt;''),''&'','';#38''),''  '',''''),''\n'','''')   as entitlement_xml from SAQSCE(nolock) where quote_id=''"+str(Qt_ID)+"'' AND cpqtableentryid = "+str(ent_query11.cpqtableentryid)+" )A )a SELECT @XML = CONVERT(XML,''<ROOT>''+@VAL+''</ROOT>'') exec sys.sp_xml_preparedocument @H output,@XML; insert "+str(SAQSCE)+" (QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID,EQUIPMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY) select QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,name as ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID,EQUIPMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY from (select QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID ,EQUIPMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY from openxml(@H, ''ROOT/QUOTE_ITEM_ENTITLEMENT'', 0) with (QUOTE_ID VARCHAR(100) ''QUOTE_ID'',SERVICE_ID VARCHAR(100) ''SERVICE_ID'',FABLOCATION_ID VARCHAR(100) ''FABLOCATION_ID'',IS_CHANGED VARCHAR(100) ''IS_CHANGED'',ENTITLEMENT_GROUP_ID VARCHAR(100) ''ENTITLEMENT_GROUP_ID'',ENTITLEMENT_NAME VARCHAR(100) ''ENTITLEMENT_NAME'',ENTITLEMENT_DESCRIPTION VARCHAR(100) ''ENTITLEMENT_DESCRIPTION'',ENTITLEMENT_VALUE_CODE VARCHAR(100) ''ENTITLEMENT_VALUE_CODE'',ENTITLEMENT_DISPLAY_VALUE VARCHAR(100) ''ENTITLEMENT_DISPLAY_VALUE'',ENTITLEMENT_COST_IMPACT VARCHAR(100) ''ENTITLEMENT_COST_IMPACT'',ENTITLEMENT_PRICE_IMPACT VARCHAR(100) ''ENTITLEMENT_PRICE_IMPACT'',QTEREV_ID VARCHAR(100) ''QTEREV_ID'',ENTITLEMENT_ID VARCHAR(100) ''ENTITLEMENT_ID'',EQUIPMENT_ID VARCHAR(100) ''EQUIPMENT_ID'',CPQTABLEENTRYADDEDDATE VARCHAR(100) ''CPQTABLEENTRYADDEDDATE'',CPQTABLEENTRYMODIFIEDDATE VARCHAR(100) ''CPQTABLEENTRYMODIFIEDDATE'',CPQTABLEENTRYMODIFIEDBY VARCHAR(100) ''CPQTABLEENTRYMODIFIEDBY'',CPQTABLEENTRYADDEDBY VARCHAR(100) ''CPQTABLEENTRYADDEDBY''))a CROSS apply SplitString (ENTITLEMENT_VALUE_CODE)  ; exec sys.sp_xml_removedocument @H; '")
                    
            
            else:
                Check_flag11=0
                
        SAQIEN_RESULT11 = ''
        
        if tbl_flag11 == 1:
            #SAQITE LINE

            s = SqlHelper.GetFirst("sp_executesql @T=N'DELETE FROM SAQSCE_INBOUND  WHERE ENTITLEMENT_VALUE_CODE LIKE ''%,%'' '")
            
            s = SqlHelper.GetFirst("sp_executesql @T=N'ALTER TABLE SAQSCE_INBOUND ADD LINE_ITEM_ID INT IDENTITY(1,1) '")
            
            s = SqlHelper.GetFirst("sp_executesql @T=N'Update SAQSCE_INBOUND  set ENTITLEMENT_DESCRIPTION = replace(PRENTL.ENTITLEMENT_DESCRIPTION,''\"'',''''),ENTITLEMENT_NAME = replace(PRENTL.ENTITLEMENT_NAME,''\"'','''') FROM SAQSCE_INBOUND JOIN PRENTL (NOLOCK) ON SAQSCE_INBOUND.ENTITLEMENT_ID = PRENTL.ENTITLEMENT_ID  '")
            
            s = SqlHelper.GetFirst("sp_executesql @T=N'Update SAQSCE_INBOUND  set ENTITLEMENT_DISPLAY_VALUE = replace(PRENVL.ENTITLEMENT_DISPLAY_VALUE,''\"'','''') FROM SAQSCE_INBOUND JOIN PRENVL (NOLOCK) ON SAQSCE_INBOUND.ENTITLEMENT_ID = PRENVL.ENTITLEMENT_ID AND SAQSCE_INBOUND.ENTITLEMENT_VALUE_CODE = PRENVL.ENTITLEMENT_VALUE_CODE  '")
            
            s = SqlHelper.GetFirst("sp_executesql @T=N'Update "+str(SAQSCE)+"  set ENTITLEMENT_VALUE_CODE = replace(ENTITLEMENT_VALUE_CODE,''\"'',''''), ENTITLEMENT_DISPLAY_VALUE = replace(ENTITLEMENT_DISPLAY_VALUE,''\"'',''''),ENTITLEMENT_NAME = replace(ENTITLEMENT_NAME,''\"'',''''),ENTITLEMENT_DESCRIPTION = replace(ENTITLEMENT_DESCRIPTION,''\"'','''')  '")
            
            start11 = 1
            end11 = 100
            Status_flag11 = 1
            
            while Status_flag11 == 1:
                
                entitle_query11 = SqlHelper.GetFirst("SELECT DISTINCT LINE_ITEM_ID FROM  SAQSCE_INBOUND WHERE LINE_ITEM_ID>= "+str(start11)+" AND LINE_ITEM_ID<="+str(end11)+" ")

                if str(entitle_query11) != "None":
                
                    SAQIEN_QUERY11 = SqlHelper.GetFirst(
                    "SELECT REPLACE(CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END ,'''','')  AS RESULT FROM (SELECT replace (replace (replace (STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ENTITLEMENT_NAME\" : \"'+ENTITLEMENT_NAME+'\",\"ENTITLEMENT_TYPE\" : \"'+ENTITLEMENT_TYPE+'\",\"ENTITLEMENT_DESCRIPTION\" : \"'+ENTITLEMENT_DESCRIPTION+'\",\"ENTITLEMENT_VALUE_CODE\" : \"'+ENTITLEMENT_VALUE_CODE+'\",\"ENTITLEMENT_DISPLAY_VALUE\" : \"'+ENTITLEMENT_DISPLAY_VALUE+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"ENTITLEMENT_ID\" : \"'+ENTITLEMENT_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(SAQSCE_INBOUND.ENTITLEMENT_NAME,'') AS ENTITLEMENT_NAME,ISNULL(SAQSCE_INBOUND.ENTITLEMENT_VALUE_CODE,'') AS ENTITLEMENT_VALUE_CODE,ISNULL(SAQSCE_INBOUND.ENTITLEMENT_DISPLAY_VALUE,'')  AS  ENTITLEMENT_DISPLAY_VALUE,ISNULL(SAQSCE_INBOUND.ENTITLEMENT_COST_IMPACT,'') AS ENTITLEMENT_COST_IMPACT,ISNULL(SAQSCE_INBOUND.ENTITLEMENT_PRICE_IMPACT,'') AS    ENTITLEMENT_PRICE_IMPACT,ISNULL(SAQSCE_INBOUND.ENTITLEMENT_DESCRIPTION,'')  AS ENTITLEMENT_DESCRIPTION,ISNULL(SAQSCE_INBOUND.QUOTE_ID,'') AS QUOTE_ID,ISNULL(SAQSCE_INBOUND.SERVICE_ID,'') AS SERVICE_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS    QTEREV_ID,ISNULL(ENTITLEMENT_TYPE,'') AS ENTITLEMENT_TYPE,PRENTL.ENTITLEMENT_ID,ISNULL(SAQSCE_INBOUND.CPQTABLEENTRYADDEDDATE,'') as CPQTABLEENTRYADDEDDATE,ISNULL(SAQSCE_INBOUND.CPQTABLEENTRYMODIFIEDDATE,'') as CPQTABLEENTRYMODIFIEDDATE,ISNULL(SAQSCE_INBOUND.CPQTABLEENTRYMODIFIEDBY,'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(SAQSCE_INBOUND.CPQTABLEENTRYADDEDBY,'') AS CPQTABLEENTRYADDEDBY,ISNULL(CONVERT(VARCHAR(100),EQUIPMENT_ID),'') AS  EQUIPMENT_ID  FROM SAQSCE_INBOUND(NOLOCK) LEFT JOIN PRENTL (NOLOCK) ON SAQSCE_INBOUND.ENTITLEMENT_ID = PRENTL.ENTITLEMENT_ID WHERE SAQSCE_INBOUND.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQSCE_INBOUND.QTEREV_ID IN ("+str(Revision[:-1])+")  AND SAQSCE_INBOUND.LINE_ITEM_ID>= "+str(start11)+" AND SAQSCE_INBOUND.LINE_ITEM_ID<="+str(end11)+" ) t     ) A FOR XML PATH ('')  ), 1, 1, ''),'amp;#','#'),'&lt;','<'),'&gt;','>') AS RESULT)A ")
                    
                    start11 = start11+100
                    end11  = end11+100
                    
                    SAQIEN_RESULT11 = SAQIEN_RESULT11+SAQIEN_QUERY11.RESULT+','
                    
                else:
                    Status_flag11 = 0

        Table_Name = 'SAQSCE_INBOUND'
        
        TempTable = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Table_Name)+"'' ) BEGIN DROP TABLE "+str(Table_Name)+" END'")
        
        #Entitlement Query 
        start = 1
        end = 1

        tbl_flag = 0
        Check_flag = 1
        while Check_flag == 1:

            ent_query = SqlHelper.GetFirst("SELECT DISTINCT QUOTE_ID,cpqtableentryid FROM (SELECT DISTINCT QUOTE_ID,cpqtableentryid, ROW_NUMBER()OVER(ORDER BY cpqtableentryid) AS SNO FROM  SAQITE(NOLOCK) where SAQITE.QUOTE_ID='"+str(Qt_ID)+"' AND SAQITE.QTEREV_ID IN ("+str(Revision[:-1])+") ) A WHERE SNO>= "+str(start)+" AND SNO<="+str(end)+" ")
            SAQITE = 'SAQIEN_INBOUND'

            if str(ent_query) != "None":
                tbl_flag = 1        
                start = start + 1
                end = end + 1

                #Log.Info("-> XML"+str(ent_query.cpqtableentryid))


                if start == 2:

                    SAQIEN_SEL = SqlHelper.GetFirst("sp_executesql @T=N'declare @H int; Declare @val Varchar(MAX);DECLARE @XML XML; SELECT @val = FINAL from(select  REPLACE(entitlement_xml,''<QUOTE_ITEM_ENTITLEMENT>'',sml) AS FINAL FROM (select ''<QUOTE_ITEM_ENTITLEMENT><QUOTE_ID>''+isnull(quote_id,'''')+''</QUOTE_ID><QTEREV_ID>''+ISNULL(CONVERT(VARCHAR,QTEREV_ID),'''')+''</QTEREV_ID><SERVICE_ID>''+isnull(service_id,'''')+''</SERVICE_ID><FABLOCATION_ID>''+isnull(fablocation_id,'''')+''</FABLOCATION_ID><IS_CHANGED>''+isnull(convert(varchar,IS_CHANGED),'''')+''</IS_CHANGED><ENTITLEMENT_GROUP_ID>''+isnull(convert(varchar,entitlement_group_id),'''')+''</ENTITLEMENT_GROUP_ID>         <LINE_ITEM_ID>''+isnull(convert(varchar,LINE),'''')+''</LINE_ITEM_ID><CPQTABLEENTRYADDEDDATE>''+ISNULL(CONVERT(VARCHAR(100),SAQITE.CPQTABLEENTRYDATEADDED,25),'''')+''</CPQTABLEENTRYADDEDDATE><CPQTABLEENTRYMODIFIEDDATE>''+ISNULL(CONVERT(VARCHAR(100),SAQITE.CpqTableEntryDateModified,25),'''')+''</CPQTABLEENTRYMODIFIEDDATE><CPQTABLEENTRYMODIFIEDBY>''+ISNULL(CONVERT(VARCHAR,SAQITE.CpqTableEntryModifiedBy),'''') +''</CPQTABLEENTRYMODIFIEDBY><CPQTABLEENTRYADDEDBY>''+ISNULL(CONVERT(VARCHAR,SAQITE.CPQTABLEENTRYADDEDBY),'''')+''</CPQTABLEENTRYADDEDBY>'' AS sml,replace(replace(replace(replace(replace(replace(replace(replace(replace(ENTITLEMENT_XML,''&'','';#38''),'''','';#39''),'' < '','' &lt; '' ),'' > '','' &gt; '' ),''_>'',''_&gt;''),''_<'',''_&lt;''),''&'','';#38''),''  '',''''),''\n'','''')   as entitlement_xml from SAQITE(nolock) where quote_id=''"+str(Qt_ID)+"'' AND cpqtableentryid = "+str(ent_query.cpqtableentryid)+" )A )a SELECT @XML = CONVERT(XML,''<ROOT>''+@VAL+''</ROOT>'') exec sys.sp_xml_preparedocument @H output,@XML; select QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,name as ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY INTO "+str(SAQITE)+"  FROM (select QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY from openxml(@H, ''ROOT/QUOTE_ITEM_ENTITLEMENT'', 0) with (QUOTE_ID VARCHAR(100) ''QUOTE_ID'',SERVICE_ID VARCHAR(100) ''SERVICE_ID'',FABLOCATION_ID VARCHAR(100) ''FABLOCATION_ID'',IS_CHANGED VARCHAR(100) ''IS_CHANGED'',ENTITLEMENT_GROUP_ID VARCHAR(100) ''ENTITLEMENT_GROUP_ID'' ,LINE_ITEM_ID VARCHAR(100) ''LINE_ITEM_ID'',ENTITLEMENT_NAME VARCHAR(100) ''ENTITLEMENT_NAME'',ENTITLEMENT_DESCRIPTION VARCHAR(100) ''ENTITLEMENT_DESCRIPTION'',ENTITLEMENT_VALUE_CODE VARCHAR(100) ''ENTITLEMENT_VALUE_CODE'',ENTITLEMENT_DISPLAY_VALUE VARCHAR(100) ''ENTITLEMENT_DISPLAY_VALUE'',ENTITLEMENT_COST_IMPACT VARCHAR(100) ''ENTITLEMENT_COST_IMPACT'',ENTITLEMENT_PRICE_IMPACT VARCHAR(100) ''ENTITLEMENT_PRICE_IMPACT'',QTEREV_ID VARCHAR(100) ''QTEREV_ID'',ENTITLEMENT_ID VARCHAR(100) ''ENTITLEMENT_ID'',CPQTABLEENTRYADDEDDATE VARCHAR(100) ''CPQTABLEENTRYADDEDDATE'',CPQTABLEENTRYMODIFIEDDATE VARCHAR(100) ''CPQTABLEENTRYMODIFIEDDATE'',CPQTABLEENTRYMODIFIEDBY VARCHAR(100) ''CPQTABLEENTRYMODIFIEDBY'',CPQTABLEENTRYADDEDBY VARCHAR(100) ''CPQTABLEENTRYADDEDBY'') )a CROSS apply SplitString (ENTITLEMENT_VALUE_CODE)  ; exec sys.sp_xml_removedocument @H; '")               
                
                else:
                    
                    SAQIEN_SEL = SqlHelper.GetFirst("sp_executesql @T=N'declare @H int; Declare @val Varchar(MAX);DECLARE @XML XML; SELECT @val = FINAL from(select  REPLACE(entitlement_xml,''<QUOTE_ITEM_ENTITLEMENT>'',sml) AS FINAL FROM (select ''<QUOTE_ITEM_ENTITLEMENT><QUOTE_ID>''+isnull(quote_id,'''')+''</QUOTE_ID><QTEREV_ID>''+ISNULL(CONVERT(VARCHAR,QTEREV_ID),'''')+''</QTEREV_ID><SERVICE_ID>''+isnull(service_id,'''')+''</SERVICE_ID><FABLOCATION_ID>''+isnull(fablocation_id,'''')+''</FABLOCATION_ID><IS_CHANGED>''+isnull(convert(varchar,IS_CHANGED),'''')+''</IS_CHANGED><ENTITLEMENT_GROUP_ID>''+isnull(convert(varchar,entitlement_group_id),'''')+''</ENTITLEMENT_GROUP_ID> <LINE_ITEM_ID>''+isnull(convert(varchar,LINE),'''')+''</LINE_ITEM_ID><CPQTABLEENTRYADDEDDATE>''+ISNULL(CONVERT(VARCHAR(100),SAQITE.CPQTABLEENTRYDATEADDED,25),'''')+''</CPQTABLEENTRYADDEDDATE><CPQTABLEENTRYMODIFIEDDATE>''+ISNULL(CONVERT(VARCHAR(100),SAQITE.CpqTableEntryDateModified,25),'''')+''</CPQTABLEENTRYMODIFIEDDATE><CPQTABLEENTRYMODIFIEDBY>''+ISNULL(CONVERT(VARCHAR,SAQITE.CpqTableEntryModifiedBy),'''') +''</CPQTABLEENTRYMODIFIEDBY><CPQTABLEENTRYADDEDBY>''+ISNULL(CONVERT(VARCHAR,SAQITE.CPQTABLEENTRYADDEDBY),'''')+''</CPQTABLEENTRYADDEDBY>'' AS sml,replace(replace(replace(replace(replace(replace(replace(replace(replace(ENTITLEMENT_XML,''&'','';#38''),'''','';#39''),'' < '','' &lt; '' ),'' > '','' &gt; '' ),''_>'',''_&gt;''),''_<'',''_&lt;''),''&'','';#38''),''  '',''''),''\n'','''')   as entitlement_xml from SAQITE(nolock) where quote_id=''"+str(Qt_ID)+"'' AND cpqtableentryid = "+str(ent_query.cpqtableentryid)+" )A )a SELECT @XML = CONVERT(XML,''<ROOT>''+@VAL+''</ROOT>'') exec sys.sp_xml_preparedocument @H output,@XML; insert "+str(SAQITE)+" (QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY) select QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,name as ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY from (select QUOTE_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,ENTITLEMENT_GROUP_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID,CPQTABLEENTRYADDEDDATE,CPQTABLEENTRYMODIFIEDDATE,CPQTABLEENTRYMODIFIEDBY,CPQTABLEENTRYADDEDBY  from openxml(@H, ''ROOT/QUOTE_ITEM_ENTITLEMENT'', 0) with (QUOTE_ID VARCHAR(100) ''QUOTE_ID'',SERVICE_ID VARCHAR(100) ''SERVICE_ID'',FABLOCATION_ID VARCHAR(100) ''FABLOCATION_ID'',IS_CHANGED VARCHAR(100) ''IS_CHANGED'',ENTITLEMENT_GROUP_ID VARCHAR(100) ''ENTITLEMENT_GROUP_ID'',LINE_ITEM_ID VARCHAR(100) ''LINE_ITEM_ID'',ENTITLEMENT_NAME VARCHAR(100) ''ENTITLEMENT_NAME'',ENTITLEMENT_DESCRIPTION VARCHAR(100) ''ENTITLEMENT_DESCRIPTION'',ENTITLEMENT_VALUE_CODE VARCHAR(100) ''ENTITLEMENT_VALUE_CODE'',ENTITLEMENT_DISPLAY_VALUE VARCHAR(100) ''ENTITLEMENT_DISPLAY_VALUE'',ENTITLEMENT_COST_IMPACT VARCHAR(100) ''ENTITLEMENT_COST_IMPACT'',ENTITLEMENT_PRICE_IMPACT VARCHAR(100) ''ENTITLEMENT_PRICE_IMPACT'',QTEREV_ID VARCHAR(100) ''QTEREV_ID'',ENTITLEMENT_ID VARCHAR(100) ''ENTITLEMENT_ID'',CPQTABLEENTRYADDEDDATE VARCHAR(100) ''CPQTABLEENTRYADDEDDATE'',CPQTABLEENTRYMODIFIEDDATE VARCHAR(100) ''CPQTABLEENTRYMODIFIEDDATE'',CPQTABLEENTRYMODIFIEDBY VARCHAR(100) ''CPQTABLEENTRYMODIFIEDBY'',CPQTABLEENTRYADDEDBY VARCHAR(100) ''CPQTABLEENTRYADDEDBY''))a CROSS apply SplitString (ENTITLEMENT_VALUE_CODE)  ; exec sys.sp_xml_removedocument @H; '")
                    
            
            else:
                Check_flag=0
        SAQIEN_RESULT = ''
        if tbl_flag == 1:
            #SAQITE LINE

            s = SqlHelper.GetFirst("sp_executesql @T=N'DELETE FROM SAQIEN_INBOUND  WHERE ENTITLEMENT_VALUE_CODE LIKE ''%,%'' '")
            
            s = SqlHelper.GetFirst("sp_executesql @T=N'Update SAQIEN_INBOUND  set ENTITLEMENT_DESCRIPTION = replace(PRENTL.ENTITLEMENT_DESCRIPTION,''\"'',''''),ENTITLEMENT_NAME = replace(PRENTL.ENTITLEMENT_NAME,''\"'','''') FROM SAQIEN_INBOUND JOIN PRENTL (NOLOCK) ON SAQIEN_INBOUND.ENTITLEMENT_ID = PRENTL.ENTITLEMENT_ID  '")
            
            s = SqlHelper.GetFirst("sp_executesql @T=N'Update SAQIEN_INBOUND  set ENTITLEMENT_DISPLAY_VALUE = replace(PRENVL.ENTITLEMENT_DISPLAY_VALUE,''\"'','''') FROM SAQIEN_INBOUND JOIN PRENVL (NOLOCK) ON SAQIEN_INBOUND.ENTITLEMENT_ID = PRENVL.ENTITLEMENT_ID AND SAQIEN_INBOUND.ENTITLEMENT_VALUE_CODE = PRENVL.ENTITLEMENT_VALUE_CODE  '")
            
            s = SqlHelper.GetFirst("sp_executesql @T=N'Update "+str(SAQITE)+"  set ENTITLEMENT_VALUE_CODE = replace(ENTITLEMENT_VALUE_CODE,''\"'',''''), ENTITLEMENT_DISPLAY_VALUE = replace(ENTITLEMENT_DISPLAY_VALUE,''\"'',''''),ENTITLEMENT_NAME = replace(ENTITLEMENT_NAME,''\"'',''''),ENTITLEMENT_DESCRIPTION = replace(ENTITLEMENT_DESCRIPTION,''\"'','''')  '")
            
            start = 1
            end = 100
            Status_flag = 1
            
            while Status_flag == 1:
                
                entitle_query = SqlHelper.GetFirst("SELECT DISTINCT LINE_ITEM_ID FROM  SAQIEN_INBOUND WHERE LINE_ITEM_ID>= "+str(start)+" AND LINE_ITEM_ID<="+str(end)+" ")

                if str(entitle_query) != "None":
                
                    SAQIEN_QUERY = SqlHelper.GetFirst(
                        "SELECT REPLACE(CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END ,'''','')  AS RESULT FROM (SELECT replace (replace (replace (STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ENTITLEMENT_NAME\" : \"'+ENTITLEMENT_NAME+'\",\"ENTITLEMENT_TYPE\" : \"'+ENTITLEMENT_TYPE+'\",\"LINE\" : \"'+LINE+'\",\"ENTITLEMENT_DESCRIPTION\" : \"'+ENTITLEMENT_DESCRIPTION+'\",\"ENTITLEMENT_VALUE_CODE\" : \"'+ENTITLEMENT_VALUE_CODE+'\",\"ENTITLEMENT_DISPLAY_VALUE\" : \"'+ENTITLEMENT_DISPLAY_VALUE+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"ENTITLEMENT_ID\" : \"'+ENTITLEMENT_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"CPQTABLEENTRYADDEDDATE\" : \"'+CPQTABLEENTRYADDEDDATE+'\",\"CPQTABLEENTRYMODIFIEDDATE\" : \"'+CPQTABLEENTRYMODIFIEDDATE+'\",\"CPQTABLEENTRYMODIFIEDBY\" : \"'+CPQTABLEENTRYMODIFIEDBY+'\",\"CPQTABLEENTRYADDEDBY\" : \"'+CPQTABLEENTRYADDEDBY+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(SAQIEN_INBOUND.ENTITLEMENT_NAME,'') AS ENTITLEMENT_NAME,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_VALUE_CODE,'') AS ENTITLEMENT_VALUE_CODE,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_DISPLAY_VALUE,'')  AS  ENTITLEMENT_DISPLAY_VALUE,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_COST_IMPACT,'') AS ENTITLEMENT_COST_IMPACT,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_PRICE_IMPACT,'') AS    ENTITLEMENT_PRICE_IMPACT,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_DESCRIPTION,'')  AS ENTITLEMENT_DESCRIPTION,ISNULL(SAQIEN_INBOUND.QUOTE_ID,'') AS QUOTE_ID,ISNULL(SAQIEN_INBOUND.SERVICE_ID,'') AS SERVICE_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS    QTEREV_ID,ISNULL(ENTITLEMENT_TYPE,'') AS ENTITLEMENT_TYPE,ISNULL(LINE_ITEM_ID,'') AS LINE,PRENTL.ENTITLEMENT_ID,ISNULL(SAQIEN_INBOUND.CPQTABLEENTRYADDEDDATE,'') as CPQTABLEENTRYADDEDDATE,ISNULL(SAQIEN_INBOUND.CPQTABLEENTRYMODIFIEDDATE,'') as CPQTABLEENTRYMODIFIEDDATE,ISNULL(SAQIEN_INBOUND.CPQTABLEENTRYMODIFIEDBY,'') AS CPQTABLEENTRYMODIFIEDBY,ISNULL(SAQIEN_INBOUND.CPQTABLEENTRYADDEDBY,'') AS CPQTABLEENTRYADDEDBY  FROM SAQIEN_INBOUND(NOLOCK) LEFT JOIN PRENTL (NOLOCK) ON SAQIEN_INBOUND.ENTITLEMENT_ID = PRENTL.ENTITLEMENT_ID WHERE SAQIEN_INBOUND.QUOTE_ID = '"+str(Qt_ID)+"' AND SAQIEN_INBOUND.QTEREV_ID IN ("+str(Revision[:-1])+")  AND SAQIEN_INBOUND.LINE_ITEM_ID>= "+str(start)+" AND SAQIEN_INBOUND.LINE_ITEM_ID<="+str(end)+" ) t     ) A FOR XML PATH ('')  ), 1, 1, ''),'amp;#','#'),'&lt;','<'),'&gt;','>') AS RESULT)A ")
                    start = start+100
                    end  = end+100
                    
                    SAQIEN_RESULT = SAQIEN_RESULT+SAQIEN_QUERY.RESULT+','
                    
                else:
                    Status_flag = 0

        Table_Name = 'SAQIEN_INBOUND'
        
        TempTable = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Table_Name)+"'' ) BEGIN DROP TABLE "+str(Table_Name)+" END'")

        final_json = ''
        if SAQTMT_QUERY.RESULT != '':
            final_json = SAQTMT_QUERY.RESULT+','
        else:
            final_json = '''"SAQTMT" : [{"QUOTE_ID": "", "SALE_TYPE": "", "CONTRACT_VALID_FROM": "", "CRM_CONTRACT_ID": "", "LOW": "", "QUOTE_NAME": "", "QTEREV_ID": "", "NET_VALUE": "", "CRM_QUOTE_ID": "", "OWNER_ID": "", "OPPORTUNITY_ID": "", "QUOTE_APPROVE_DATE": "", "ECC_CONTRACT_ID": "", "QUOTE_EXPIRE_DATE": "", "QUOTE_STATUS": "", "REASONFOR_REJECTION": "", "QUOTE_CREATED_DATE": "", "OPPORTUNITY_NAME": "", "OWNER_NAME": "", "ACCOUNT_ID": "", "SOURCE_CONTRACT_ID": "", "CRM_OPPORTUNITY_ID": "", "CONTRACT_VALID_TO": "", "C4C_QUOTE_ID": "", "CUSTOMER_NOTES": "", "GLOBAL_CURRENCY": "", "POES": "","TIMESTAMP":"","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''
            
        if SAQTRV_QUERY.RESULT != '':
            final_json = final_json+SAQTRV_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQTRV" : [{"DIVISION_ID": "", "INCOTERM_NAME": "", "REVISION_NAME": "", "QUOTE_ID": "", "PAYMENTTERM_DAYS": "", "CONTRACT_VALID_FROM": "", "CANCELLATION_PERIOD_EXCEPTION": "", "COUNTRY": "", "COMPANY_ID": "", "CEILING_PRICE_INGL_CURR": "", "NET_PRICE_INGL_CURR": "", "CONTRACT_TYPE": "", "DOCUMENT_PRICING_PROCEDURE": "", "CLM_AGREEMENT_OWNER": "", "DISCOUNT_PERCENT": "", "TAX_AMOUNT_INGL_CURR": "", "HLV_ORG_BUN": "", "EXTERNAL_NAME": "", "QTEREV_ID": "", "ACCTAXCAT_ID": "", "APPLIED_EMAIL": "", "REVISION_DESCRIPTION": "", "SALES_PRICE_INGL_CURR": "", "DISTRIBUTIONCHANNEL_ID": "", "CREDIT_INGL_CURR": "", "BANK_ID": "", "EXTERNAL_EMAIL": "", "REVISION_STATUS": "", "BD_PRICE_INGL_CURR": "", "ACCTAXCLA_ID": "", "ADVANCED_SHIPPING_EMAIL": "", "CLM_AGREEMENT_NUM": "", "SORG_CURRENCY": "", "APPDTE_EXCH_RATE": "", "REV_APPROVE_DATE": "", "APPLIED_TITLE": "", "INCOTERM_ID": "", "BLUEBOOK": "", "PAYMENTTERM_NAME": "", "ACCOUNT_PRICING_PROCEDURE": "", "PAYMENTTERM_ID": "", "NET_VALUE_INGL_CURR": "", "CANCELLATION_PERIOD": "", "EXCHANGE_RATE_DATE": "", "REV_CREATE_DATE": "", "DISCOUNT_AMOUNT_INGL_CURR": "", "EXCHANGE_RATE": "", "APPLIED_NAME": "", "ACTIVE": "", "CLM_CONTRACT_TYPE": "", "ACCOUNT_ID": "", "DOCTYP_ID": "", "EXCHANGE_RATE_TYPE": "", "SALESORG_ID": "", "REGION": "", "INTERNAL_NOTES": "", "REV_EXPIRE_DATE": "", "CONTRACT_VALID_TO": "", "CUSTOMER_NOTES": "", "CLM_TEMPLATE_NAME": "", "PRICINGPROCEDURE_ID": "", "SALESOFFICE_ID": "", "TARGET_PRICE_INGL_CURR": "", "EXTERNAL_TITLE": "", "GLOBAL_CURRENCY": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''
        
        if SAQTIP_QUERY.RESULT != '':
            final_json = final_json+SAQTIP_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQTIP" : [{"ADDRESS" : "","EMAIL" : "","IS_MAIN" : "","PARTY_ID" : "","PARTY_NAME" : "","PARTY_ROLE" : "","PHONE" : "","QUOTE_ID" : "","SALESORG_ID" : "","QTEREV_ID" : "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''
        
        if SAQRSH_QUERY.RESULT != '':
            final_json = final_json+SAQRSH_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQRSH" : [{"QUOTE_ID" : "","QTEREV_ID" : "","REVISION_STATUS" : "","REVSTS_CHANGE_DATE" : "","SESSION_ID":""}],'''
        
        if SAQCBC_QUERY.RESULT != '':
            final_json = final_json+SAQCBC_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQCBC" : [{"CHECKLIST_DESCRIPTION" : "","CHECKLIST_ID" : "","COMMENT" : "","QUOTE_ID" : "","QTEREV_ID" : "","SERVICE_CONTRACT" : "","SPECIALIST_REVIEW" : "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''

        if SAQRIB_QUERY.RESULT != '':
            final_json = final_json+SAQRIB_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQRIB" : [{"BILLING_DAY" : "","BILLING_END_DATE" : "","BILLING_NOTES" : "","BILLING_START_DATE" : "","BOOKING_METHOD" : "","PO_DATE" : "","PO_NUMBER" : "","QUOTE_ID" : "","SERVICE_AGREEMENT_NUMBER" : "","LINE" : "","SERVICE_ID" : "","IS_CHANGED" : "","QTEREV_ID" : "" ,"SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''

        if SAQDOC_QUERY.RESULT != '':
            final_json = final_json+SAQDOC_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQDOC" : [{"DOCUMENT_ID" : "","DOCUMENT_NAME" : "","DOCUMENT_PATH" : "","LANGUAGE_ID" : "","QUOTE_ID" : "","STATUS" : "","QTEREV_ID" : "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''
        
        if SAQSAP_QUERY.RESULT != '':
            final_json = final_json+SAQSAP_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQSAP" : [{"QUOTE_ID" : "","QTEREV_ID" : "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : "", "ASSEMBLY_ID" : "", "EQUIPMENT_ID" : "", "GOT_CODE" : "", "KIT_NAME" : "", "KIT_NUMBER" : "", "MODULE_ID" : "", "PM_FREQUENCY" : "", "PM_ID" : "", "PM_NAME" : "", "KIT_ID" : "", "SERVICE_ID" : "", "TKM_FLAG" : "", "PM_FREQUENCY_EDITABLE" : "", "SSCM_PM_FREQUENCY" : "", "MODULE_NAME" : "", "MNTEVT_LEVEL" : "","LINE":"","CLEAN_COAT_DIFF":"","DEVICE_NODE":"","ENTINT_STATUS":"","ENTINT_STATUS_DESC":"","INCLUDED":"","PROCESS_TYPE":"" }],'''
            
        if SAQGPA_QUERY.RESULT != '':
            final_json = final_json+SAQGPA_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQGPA" : [{"QUOTE_ID" : "","QTEREV_ID" : "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : "", "ASSEMBLY_ID" : "", "EQUIPMENT_ID" : "", "GOT_CODE" : "", "KIT_NAME" : "", "KIT_NUMBER" : "", "MODULE_ID" : "", "PM_FREQUENCY" : "", "PM_ID" : "", "PM_NAME" : "", "KIT_ID" : "", "SERVICE_ID" : "", "TKM_FLAG" : "", "PM_FREQUENCY_EDITABLE" : "", "SSCM_PM_FREQUENCY" : "", "MODULE_NAME" : "", "MNTEVT_LEVEL" : "","CLEAN_COAT_DIFF":"","DEVICE_NODE":"","ENTINT_STATUS":"","ENTINT_STATUS_DESC":"","INCLUDED":"","PROCESS_TYPE":"" }],'''

        if SAQRIT_QUERY.RESULT != '':
            final_json = final_json+SAQRIT_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQRIT" : [{"GOT_CODE": "", "CONTRACT_VALID_FROM": "", "PRICING_PROCEDURE_ID": "", "OBJECT_TYPE": "", "PARQTEITM_LINE_RECORD_ID": "", "EXCHANGE_RATE_DATE": "", "PROCESS_TYPE": "", "EXCHANGE_RATE_RECORD_ID": "", "PRICE_BENCHMARK": "", "EXCHANGE_RATE": "", "PM_ID": "", "GREENBOOK": "", "CRDVCH_EXP_DATE": "", "DEVICE_NODE": "", "FABLOCATION_RECORD_ID": "", "BILLING_TYPE": "", "MODULE_ID": "", "LINE": "", "GOTCODE_RECORD_ID": "", "MODULE_NAME": "", "GREENBOOK_RECORD_ID": "", "OBJECT_ID": "", "PM_RECORD_ID": "", "PARQTEITM_LINE": "", "GLOBAL_CURRENCY_RECORD_ID": "", "PRICING_PROCEDURE_RECORD_ID": "", "GL_ACCOUNT_NO": "", "CONTRACT_VALID_TO": "", "PM_LEVEL": "", "PLANT_RECORD_ID": "", "PLANT_NAME": "", "PRICE_BENCHMARK_MARGIN": "", "PLANT_ID": "", "FABLOCATION_ID": "", "FABLOCATION_NAME": "", "DOC_CURRENCY": "", "GLOBAL_CURRENCY": "", "DOCURR_RECORD_ID": "","STATUS": "", "TAXCLASSIFICATION_ID": "", "UNIT_PRICE_INGL_CURR": "", "COMMITTED_VALUE": "", "PRINT_FLAG": "", "TOTAL_AMOUNT": "", "QTEITMSUM_RECORD_ID": "", "ESTIMATED_VALUE": "", "TAXCLASSIFICATION_RECORD_ID": "", "YEAR_3": "", "SERVICE_RECORD_ID": "", "PRICING_PROCEDURE_STEPSTRUCT": "", "REF_SALESORDER": "", "TAX_AMOUNT_INGL_CURR": "", "SPLIT": "", "SERVICE_ID": "", "ESTVAL_INGL_CURR": "", "SERVICE_DESCRIPTION": "", "SPLIT_PERCENT": "", "YEAR_5": "", "NET_VALUE": "", "YEAR_1": "", "QTEREV_ID": "", "YEAR_5_INGL_CURR": "", "COMVAL_INGL_CURR": "", "QTEREV_RECORD_ID": "", "UNIT_PRICE": "", "YEAR_2": "", "YEAR_3_INGL_CURR": "", "QUOTE_RECORD_ID": "", "YEAR_4_INGL_CURR": "", "TAX_AMOUNT": "", "YEAR_1_INGL_CURR": "", "QUOTE_ID": "", "TAXCLASSIFICATION_DESCRIPTION": "", "NET_VALUE_INGL_CURR": "", "YEAR_2_INGL_CURR": "", "TOTAL_AMOUNT_INGL_CURR": "", "PROFIT_CENTER": "", "TAX_PERCENTAGE": "", "YEAR_4": "", "QUANTITY": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : "", "PEREVTCST_INDT_CURR" : "", "PEREVTCST_INGL_CURR" : "", "PEREVTPRC_INDT_CURR" : "", "PEREVTPRC_INGL_CURR" : "", "CHAMBER_QUANTITY" : ""}],'''

        if SAQRIO_QUERY.RESULT != '':
            final_json = final_json+SAQRIO_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQRIO" : [{"QUOTE_ID": "", "KPU": "", "TOOL_CONFIGURATION": "", "GREENBOOK": "", "CUSTOMER_TOOL_ID": "", "SERVICE_ID": "", "LINE": "", "TECHNOLOGY": "", "QTEREV_ID": "", "EQUIPMENT_ID": "", "WAFER_SIZE": "", "FABLOCATION_ID": "", "SERIAL_NUMBER": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''

        if SAQRIP_QUERY.RESULT != '':
            final_json = final_json+SAQRIP_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQRIP" : [{"PROD_INSP_MEMO" : "","PART_NUMBER" : "","PART_DESCRIPTION" : "","NEW_PART" : "","QUANTITY" : "","LINE" : "","SERVICE_ID" : "","QTEREV_ID" : "","QUOTE_ID" : "","CATEGORY_ID":"","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : "", "PAR_PRDOFR_ID" : ""}],'''

        if SAQICO_QUERY != '':
            final_json = final_json+SAQICO_QUERY+','
        else:
            final_json = final_json+'''"SAQICO" : [{"MODULE_NAME": "", "CAVVDC": "", "UACBDA": "", "SCMVDC": "", "TAPMMP": "", "SVCTMG": "", "AISBCC": "", "SPTBTP": "", "REGION": "", "SPCCOT": "", "SESSION_ID": "", "SPSPCT": "", "EQUIPMENTCATEGORY_ID": "", "ITACVY": "", "MODULE_RECORD_ID": "", "UBSBDA": "", "ADJ_PM_FREQUENCY": "", "SVSPCT": "", "SPSPQT": "", "BCHCXD": "", "TAXVDC": "", "TAXVGC": "", "LIMITED_PART_ENT": "", "TGADJP": "", "TNTMGC": "", "ITKTID": "", "GLOBAL_CURRENCY": "", "SPTCNS": "", "GBKVDC": "", "ITWASS": "", "ITHPLI": "", "SERNUM": "", "ITKTNO": "", "POFVDC": "", "SPCCLP": "", "HEDBIN": "", "TNTMPC": "", "AICCPE": "", "AIUPPE": "", "SVCVDC": "", "NPIVDV": "", "ITDVDN": "", "MTGPRC": "", "PART_BRNDWN_ENT": "", "NWPTON": "", "ATGKEC": "", "FABLOCATION_RECORD_ID": "", "ITPDTP": "", "PM_RECORD_ID": "", "SPSPSP": "", "FCWOSS": "", "LINE": "", "BDPMMP": "", "ITPROF": "", "EQUPID": "", "OSSVDV": "", "PER_EVENT_COST_WISEEDSTOCK": "", "AIFCOS": "", "QTEREV_RECORD_ID": "", "BDVPRC": "", "QUOTE_RECORD_ID": "", "SSCM_PM_FREQUENCY": "", "BHCPVT": "", "PM_ID": "", "UBSNSA": "", "SPQTEV": "", "SPCTPR": "", "FCWISS": "", "AITPDP": "", "AICYBE": "", "EQUIPMENT_DESCRIPTION": "", "ISPOES": "", "AITCWS": "", "QRQVDV": "", "MNT_PLANT_ID": "", "AITPNP": "", "ITSDUT": "", "KPU": "", "SLSPRC": "", "ASSEMBLY_RECORD_ID": "", "AICYWE": "", "AICYSE": "", "ITEVML": "", "SUBSIZ": "", "INWRTY": "", "MNT_PLANT_NAME": "", "MBDPRC": "", "OUTSRC": "", "POFVDV": "", "CMLAB_ENT": "", "ITASID": "", "ADDCOF": "", "SAPMMP": "", "TAMTDC": "", "TAMTGC": "", "SERVICE_ID": "", "SPTKPI": "", "ITGTCD": "", "AISBCS": "", "AINCCM": "", "QTCNST": "", "BCHDAP": "", "DOCCUR": "", "CAVVDV": "", "FABLOCATION_NAME": "", "PRCSRC": "", "RKFVDC": "", "STADTE": "", "MCLPRC": "", "CONSCP": "", "AIANCM": "", "CUSTOMER_TOOL_ID": "", "TAXGRP": "", "ITGRBK": "", "ITRSTM": "", "SUMCOF": "", "EQUIPMENT_STATUS": "", "PMLAB_ENT": "", "CCDFFC": "", "MSLPRC": "", "CCRTMC": "", "PROCES": "", "AIBPDP": "", "TOTLCI": "", "TENVGC": "", "ITCTAS": "", "SPCTCS": "", "TENVDC": "", "AIBPNP": "", "AMNCCI": "", "ITACVD": "", "CSGVDC": "", "PBPVDV": "", "WNDVDV": "", "ITCCVY": "", "QTEITMGBK_RECORD_ID": "", "FABLOC": "", "BILTYP": "", "UIMVDV": "", "SALESORG_NAME": "", "TKM_RECORD_ID": "", "EQUIPMENT_ID": "", "TOTLPI": "", "AMNCPI": "", "ITEVNT": "", "SPTCMH": "", "ITTPMF": "", "BCHDPT": "", "SWPKTA": "", "QRQVDC": "", "CSTVDC": "", "ITPRMO": "", "CPQTABLEENTRYADDEDDATE": "", "QTETYP": "", "EQUIPMENT_RECORD_ID": "", "ITTNBV": "", "DCCRFX": "", "ATGKEY": "", "CNSMBL_ENT": "", "ITSSCA": "", "BMPPDA": "", "YOYPCT": "", "CPQTABLEENTRYMODIFIEDBY": "", "EQUCAT": "", "QTEREV_ID": "", "CPQTABLEENTRYADDEDBY": "", "LTCOSS": "", "ITPRMD": "", "CNTPRC": "", "AIYUPD": "", "CONTRACT_ID": "", "UIMVDC": "", "HEDBIP": "", "NUMLCI": "", "AIFTTC": "", "INTCPC": "", "SERVICE_RECORD_ID": "", "SPCCLC": "", "CNTDAY": "", "SPTLIN": "", "NUMLPI": "", "INMP02": "", "CELPRC": "", "SERIAL_NO": "", "ITMPRA": "", "TCWOSS": "", "PMPCLC": "", "QTEITM_RECORD_ID": "", "NONCCI": "", "BCHCFX": "", "DCCRXD": "", "OBJECT_ID": "", "TECHNOLOGY": "", "LGSTCC": "", "AINPCM": "", "AISSCS": "", "AIFCPE": "", "INTCPV": "", "ITPBPA": "", "SPTPMD": "", "NONCPI": "", "PRIPER_CRCPRM_ENT": "", "SPCTMG": "", "TNHRPT": "", "ITPBCA": "", "FINPRC": "", "GOT_CODE": "", "SALESORG_RECORD_ID": "", "CONSPI": "", "TCWISS": "", "PRICEBENCHMARK_RECORD_ID": "", "SBTCST": "", "ITWSGP": "", "WTYEND": "", "PROPRT_CLEAN_ENT": "", "ITAPEG": "", "CONTRACT_RECORD_ID": "", "NUMLAY": "", "ATNKEY": "", "KPINDC": "", "CONTRACT_NAME": "", "USRPRC": "", "MODULE_ID": "", "QTCNED": "", "UIMVPI": "", "AISPNP": "", "WTYSTE": "", "FNMDPR": "", "RKFVDV": "", "TNTVDC": "", "TNTVGC": "", "ITSVSD": "", "AITTCI": "", "AICPFP": "", "AMNPPI": "", "EQUIPMENTCATEGORY_DESCRIPTION": "", "WETCLN_ENT": "", "NWPTOP": "", "TAXVTP": "", "AICPNP": "", "UIMVCI": "", "ITSVED": "", "AICNCM": "", "PRMKPI_ENT": "", "AICPUP": "", "PM_LEVEL": "", "CCRTMV": "", "OBJECT_TYPE": "", "ITTOCF": "", "ITWASE": "", "TRGPRC": "", "CEPRUP": "", "QUOTE_ID": "", "FAILRC": "", "ATGKEP": "", "MNT_PLANT_RECORD_ID": "", "SPCCLN": "", "SPTEQC": "", "ITPBPI": "", "CMPRFC": "", "WTYDAY": "", "EQUIPMENTCATEGORY_RECORD_ID": "", "GBKVDV": "", "CMPREC": "", "LQPLBC": "", "PBPVDC": "", "ITCCVD": "", "AIPKCM": "", "EQNODE": "", "TGKPNS": "", "KIT_NAME": "", "BCHPGC": "", "HEDBIC": "", "CNTYER": "", "SVCTPR": "", "BCHCUR": "", "PART_BUYBCK_ENT": "", "AICYBS": "", "ITPELK": "", "AIPKPI": "", "CSTSRC": "", "CONTRACT_VALID_TO": "", "PMEVNT_ENT": "", "CNTCVG_ENT": "", "SVCVDV": "", "PMPREC": "", "AICYWS": "", "NCNSMB_ENT": "", "PMPRFC": "", "DTPVDC": "", "AICYSS": "", "PMPRCC": "", "SPTPMH": "", "CNTMGN": "", "AIPKCI": "", "AICPPE": "", "AIUSPR": "", "KIT_NUMBER": "", "SDSTKC": "", "GRNBOK": "", "AIATCM": "", "ITNWTL": "", "QUANTITY": "", "AISSPC": "", "CPQTABLEENTRYMODIFIEDDATE": "", "AIPBNC": "", "PER_EVENT_COST_WOSEEDSTOCK": "", "GQPLBC": "", "CAVVPI": "", "CCDFFV": "", "SBTPRC": "", "PMPMEC": "", "CONTRACT_VALID_FROM": "", "NPIVDC": "", "TOLCFG": "", "AICTYR": "", "BPTKPI": "", "CSGVDV": "", "WNDVDC": "", "CAVVCI": "", "DTPVDV": "", "CTPDFP": "", "PRINT_FLAG": "", "SCMVDV": "", "ITEQID": "", "ITSDUI": "", "ITGBBV": "", "ATKNCI": "", "PDCBPR": "", "DEVICE_NODE": "", "SND_FBL_ID": "", "ENDDTE": "", "SVCTCS": "", "CSTVDV": "", "NWPTOC": "", "ASSEMBLY_ID": "", "ITTNBC": "", "FABLOCATION_ID": "", "ATKNPI": "", "ITSDUB": "", "OFRING": "", "SPCCPI": "", "BLUBOK": "", "ITPRTY": "", "BDDSPC": "", "PLTFRM": "", "PRODID": "", "GLOBAL_CURRENCY_RECORD_ID": "", "SERVICE_DESCRIPTION": "", "CNTCST": "", "STATUS": "", "SALESORG_ID": "", "CMLBRC": "", "SADSPC": "", "AICCSD": "", "AISBPC": "", "AITMGC": "", "SPCCCI": "", "INMP01": ""}],'''

        if SAQICA_QUERY.RESULT != '':
            final_json = final_json+SAQICA_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQICA" : [{"QUOTE_ID": "", "GOT_CODE": "", "EQUIPMENTCATEGORY_ID": "", "PM_TECH_LABOR_RATE": "", "GREATER_THAN_QTLY_HRS": "", "QTEREV_ID": "", "TOTAL_COST_WSEEDSTOCK": "", "MNT_PLANT_ID": "", "EQUIPMENT_ID": "", "ASSEMBLY_STATUS": "", "CM_LABOR_HRS": "", "PLATFORM": "", "KPI_COST": "", "FABLOCATION_ID": "", "COST_CALCULATION_STATUS": "", "PM_PART_COST": "", "CLEANING_COST": "", "EQUIPMENTTYPE_ID": "", "LABOR_RATE": "", "REPAIR_COST": "", "SERVICE_ID": "", "LABOR_COST": "", "ASSEMBLY_ID": "", "SALESORG_ID": "", "TOTAL_COST_WOSEEDSTOCK": "", "LESS_THAN_QTLY_HRS": "", "REPLACE_COST": "", "SERIAL_NUMBER": "", "CM_PART_COST": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : "" , "CM_HOURS_5_8" : "", "CM_HOURS_7_12" : "", "CM_HOURS_7_24" : "", "LINE" : "", "MODULE_ID" : "", "MODULE_NAME" : "", "MODULE_VERSION_ID" : "", "REFURB_COST" : "", "PM_REFURB_COST" : "", "PM_REPLACE_COST" : "", "WETCLN_LBRCST" : "", "WETCLN_LBRHRS" : "" ,"CNTYEAR":""  }],'''

        if SAQIFP_QUERY.RESULT != '':
            final_json = final_json+SAQIFP_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQIFP" : [{"QUOTE_ID": "", "YEAR_1_DEMAND": "", "UNIT_PRICE_INGL_CURR": "", "LINE": "", "BASEUOM_ID": "", "TAX": "", "PART_NUMBER": "", "NET_VALUE_INGL_CURR": "", "CORE_CREDIT_PRICE": "", "DOC_CURRENCY": "", "PART_DESCRIPTION": "", "CUSTOMER_PART_NUMBER": "", "UNIT_PRICE": "", "SCHEDULE_MODE": "", "ODCC_FLAG": "", "VALID_FROM_DATE": "", "SHELF_LIFE": "", "EXCHANGE_ELIGIBLE": "", "CUSTOMER_PARTICIPATE": "", "EXTENDED_PRICE": "", "SALESORG_ID": "", "PRICINGPROCEDURE_ID": "", "STPACCOUNT_ID": "", "EXTPRI_INGL_CURR": "", "L2_RISK_CALC": "", "TAX_AMOUNT_INGL_CURR": "", "YEAR_3_DEMAND": "", "DELIVERY_MODE": "", "VALID_TO_DATE": "", "CUSTOMER_ACCEPT_PART": "", "RETURN_TYPE": "", "QTEREV_ID": "", "L1_RISK_CALC": "", "SRVTAXCLA_ID": "", "SALESUOM_ID": "", "MATPRIGRP_ID": "", "TAX_PERCENTAGE": "", "SRVTAXCAT_ID": "", "SALESUOM_CONVERSION_FACTOR": "", "SERVICE_ID": "", "SHPACCOUNT_ID": "", "NET_VALUE": "", "ANNUAL_QUANTITY": "", "PRICING_STATUS": "", "MATERIALSTATUS_ID": "", "GLOBAL_CURRENCY": "", "YEAR_2_DEMAND": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''

        if  CURRENT_CART_RESPONSIBILITY_QUERY.RESULT != '':
            final_json = final_json+CURRENT_CART_RESPONSIBILITY_QUERY.RESULT+','

        else:
            final_json = final_json+'''"CURRENT_CART_RESPONSIBILITY": [{"QUOTE_ID" : "","SESSION_ID" : "","QTEREV_ID" : "","COMMENTS" : ""}],'''

        if  SAQAPP_QUERY.RESULT != '':
            final_json = final_json+SAQAPP_QUERY.RESULT+',' 

        else:
            final_json = final_json+'''"SAQAPP": [{"QUOTE_ID" : "","SESSION_ID" : "","QTEREV_ID" : "","APPROVAL_RULE" : "","DESCRIPTION" : "","LEVEL" : "","SUBMIITED_APPROVER" : "","CURRENT_APPROVER" : "","STATUS" : "","CURRENT_APPROVER_EMAIL" : "","CURRENT_USER_NAME" : "","BUSINESS_GROUP" : "","CPQTABLEENTRYADDEDBY" : "","CPQTABLEENTRYADDEDDATE" : "","CPQTABLEENTRYMODIFIEDBY" : "","CPQTABLEENTRYMODIFIEDDATE" : "","REQUESTOR_COMMENTS" : "","APPROVER_COMMENTS" : ""}],'''
        
        if SAQSAF_QUERY.RESULT != '':
            final_json = final_json+SAQSAF_QUERY.RESULT+','

        else:
            final_json = final_json+'''"SAQSAF" : [{"SNDACC_ID" : "","SNDFBL_ID" : "","SNDFBL_NAME" : "","QUOTE_ID" : "","QTEREV_ID" : "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''

        if SAQIPD_QUERY.RESULT != '':
            final_json = final_json+SAQIPD_QUERY.RESULT+','

        else:
            final_json = final_json+'''"SAQIPD" : [{"CUSTOMER_ANNUAL_QUANTITY" : "","DELIVERY_SCHED_CAT" : "","DELIVERY_SCHED_DATE" : "","LINE" : "","PART_DESCRIPTION" : "","PART_NUMBER" : "","SERVICE_ID" : "","QUANTITY" : "","QUOTE_ID" : "","QTEREV_ID" : "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''
            
        if SAQSPT_QUERY.RESULT != '':
            final_json = final_json+SAQSPT_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQSPT" : [{ "BASEUOM_ID": "", "CUSTOMER_PART_NUMBER": "", "DELIVERY_MODE": "", "EXTENDED_UNIT_PRICE": "", "PART_NUMBER": "", "PART_DESCRIPTION": "", "CUSTOMER_ANNUAL_QUANTITY": "", "QUOTE_ID": "", "SALESORG_ID": "", "SALESUOM_CONVERSION_FACTOR": "", "SALESUOM_ID": "", "SCHEDULE_MODE": "", "SERVICE_ID": "", "UNIT_PRICE": "", "VALID_FROM_DATE": "", "VALID_TO_DATE": "", "DELIVERY_INTERVAL": "", "MATPRIGRP_ID": "", "MATPRIGRP_NAME": "", "PAR_SERVICE_ID": "", "QTEREV_ID": "", "PRICE_REQUEST_ID": "", "PRICE_REQUEST_STATUS": "", "PRICE_REQUEST_TYPE": "", "CORE_CREDIT_PRICE": "", "CUSTOMER_PARTICIPATE": "", "CUSTOMER_ACCEPT_PART": "", "EXCHANGE_ELIGIBLE": "", "INCLUDED": "", "MATERIALSTATUS_ID": "", "NEW_PART": "", "ODCC_FLAG": "", "PROD_INSP_MEMO": "", "RETURN_TYPE": "", "SHELF_LIFE": "", "SHPACCOUNT_ID": "", "STPACCOUNT_ID": "", "PAR_PART_NUMBER": "", "L1_RISK_CALC": "", "L2_RISK_CALC": "", "NET_VALUE_INGL_CURR": "", "TAX_PERCENTAGE": "", "TAX_AMOUNT_INGL_CURR": "", "CARP_REQUEST_ID": "", "CUSTOMER_ELIGIBLE": "", "ODCC_FLAG_DESCRIPTION": "", "PRICING_STATUS": "", "GLOBAL_CURRENCY": "", "YEAR_1_DEMAND": "", "YEAR_2_DEMAND": "", "YEAR_3_DEMAND": "", "DELIVERY_1": "", "DELIVERY_2": "", "DELIVERY_3": "", "DELIVERY_4": "", "DELIVERY_5": "", "DELIVERY_6": "", "DELIVERY_7": "", "DELIVERY_8": "", "DELIVERY_9": "", "DELIVERY_10": "", "DELIVERY_11": "", "DELIVERY_12": "", "DELIVERY_13": "", "DELIVERY_14": "", "DELIVERY_15": "", "DELIVERY_16": "", "DELIVERY_17": "", "DELIVERY_18": "", "DELIVERY_19": "", "DELIVERY_20": "", "DELIVERY_21": "", "DELIVERY_22": "", "DELIVERY_23": "", "DELIVERY_24": "", "DELIVERY_25": "", "DELIVERY_26": "", "DELIVERY_27": "", "DELIVERY_28": "", "DELIVERY_29": "", "DELIVERY_30": "", "DELIVERY_31": "", "DELIVERY_32": "", "DELIVERY_33": "", "DELIVERY_34": "", "DELIVERY_35": "", "DELIVERY_36": "", "DELIVERY_37": "", "DELIVERY_38": "", "DELIVERY_39": "", "DELIVERY_40": "", "DELIVERY_41": "", "DELIVERY_42": "", "DELIVERY_43": "", "DELIVERY_44": "", "DELIVERY_45": "", "DELIVERY_46": "", "DELIVERY_47": "", "DELIVERY_48": "", "DELIVERY_49": "", "DELIVERY_50": "", "DELIVERY_51": "", "DELIVERY_52": "", "SESSION_ID": "", "CPQTABLEENTRYADDEDDATE": "", "CPQTABLEENTRYMODIFIEDDATE": "", "CPQTABLEENTRYMODIFIEDBY": "", "CPQTABLEENTRYADDEDBY": "" }],'''

        if SAQSCO_QUERY.RESULT != '':
            final_json = final_json+SAQSCO_QUERY.RESULT+','

        else:
            final_json = final_json+'''"SAQSCO" : [{ "ACCOUNT_ID": "","ACCOUNT_NAME": "",     "CONTRACT_VALID_FROM": "","CONTRACT_VALID_TO": "","DEVICE_NODE": "",     "CUSTOMER_TOOL_ID": "","ENTINT_STATUS": "","ENTINT_STATUS_DESC": "",     "EQUIPMENT_DESCRIPTION": "","EQUIPMENT_ID": "","EQUIPMENT_QUANTITY": "",     "EQUIPMENT_STATUS": "","EQUIPMENTCATEGORY_DESCRIPTION": "","EQUIPMENTCATEGORY_ID": "",     "FABLOCATION_ID": "","FABLOCATION_NAME": "","GREENBOOK": "","IBASE_ATTSTS": "",     "INCLUDED": "","KPU": "","MNT_PLANT_ID": "","MNT_PLANT_NAME": "",     "PAR_SERVICE_DESCRIPTION": "","PAR_SERVICE_ID": "","PARENTEQUIPMENT_ID": "","PBG": "",     "PLATFORM": "","QTEREV_ID": "","QUOTE_ID": "","QUOTE_NAME":  "",     "RELOCATION_EQUIPMENT_TYPE": "","SALESORG_ID": "","SALESORG_NAME": "",     "SAP_PART_NUMBER": "","SERIAL_NO": "","SERVICE_DESCRIPTION": "","SERVICE_ID": "",     "SERVICE_TYPE": "","SNDACC_ID": "","SNDACC_NAME": "","SNDFBL_ID": "","SNDFBL_NAME": "","SNDSOR_ID": "","SNDSOR_NAME": "","TECHNOLOGY": "","TEMP_TOOL": "","TOOL_CONFIG": "","WAFER_SIZE": "","WARRANTY_END_DATE": "","WARRANTY_END_DATE_ALERT": "",     "WARRANTY_START_DATE": "","CPQTABLEENTRYADDEDBY": "","CPQTABLEENTRYADDEDDATE": "",     "CPQTABLEENTRYMODIFIEDBY": "","CPQTABLEENTRYMODIFIEDDATE": "","SESSION_ID": ""   } ],'''


        if SAQIBP_QUERY.RESULT != '':
            final_json = final_json+SAQIBP_QUERY.RESULT+','
        else:
            final_json = final_json+'''"SAQIBP" : [{"BILLING_DAY": "", "QUOTE_ID": "", "COMMITTED_VALUE_INDT_CURR": "", "BILLING_TYPE": "", "QUOTE_NAME": "", "LINE": "", "ESTVAL_INGL_CURR": "", "BILLING_DATE": "", "PO_ITEM": "", "ANNUAL_BILLING_AMOUNT": "", "BILLING_YEAR": "", "EQUIPMENT_ID": "", "BILLING_VALUE_INGL_CURR": "", "ESTVAL_INDT_CURR": "", "SPLIT_BILLING": "", "DOC_CURRENCY": "", "QTEREV_ID": "", "BILLING_END_DATE": "", "EQUIPMENT_QUANTITY": "", "COMMITTED_VALUE_INGL_CURR": "", "BILLING_VALUE": "", "GREENBOOK": "", "SERVICE_ID": "", "PO_NUMBER": "", "WARRANTY_END_DATE": "", "SALESORG_ID": "", "WARRANTY_START_DATE": "", "BILLING_START_DATE": "", "GLOBAL_CURRENCY": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''       
        

        if tbl_flag == 1:
            if SAQIEN_RESULT != '':
                final_json = final_json+'"SAQITE": ['+SAQIEN_RESULT[:-1]+'],'
            else:
                final_json = final_json+'''"SAQITE" : [{"QUOTE_ID": "", "ENTITLEMENT_TYPE": "", "ENTITLEMENT_DISPLAY_VALUE": "", "ENTITLEMENT_VALUE_CODE": "", "SERVICE_ID": "", "LINE": "", "QTEREV_ID": "", "ENTITLEMENT_DESCRIPTION": "", "ENTITLEMENT_NAME": "", "ENTITLEMENT_ID": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''
        else:
            final_json = final_json+'''"SAQITE" : [{"QUOTE_ID": "", "ENTITLEMENT_TYPE": "", "ENTITLEMENT_DISPLAY_VALUE": "", "ENTITLEMENT_VALUE_CODE": "", "SERVICE_ID": "", "LINE": "", "QTEREV_ID": "", "ENTITLEMENT_DESCRIPTION": "", "ENTITLEMENT_NAME": "", "ENTITLEMENT_ID": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : ""}],'''
        
        if tbl_flag11 == 1:
            if SAQIEN_RESULT11 != '':
                final_json = final_json+'"SAQSCE": ['+SAQIEN_RESULT11[:-1]+'],'
            else:
                final_json = final_json+'''"SAQSCE" : [{"QUOTE_ID": "", "ENTITLEMENT_TYPE": "", "ENTITLEMENT_DISPLAY_VALUE": "", "ENTITLEMENT_VALUE_CODE": "", "SERVICE_ID": "",  "QTEREV_ID": "", "ENTITLEMENT_DESCRIPTION": "", "ENTITLEMENT_NAME": "", "ENTITLEMENT_ID": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : "","EQUIPMENT_ID":""}],'''
        else:
            final_json = final_json+'''"SAQSCE" : [{"QUOTE_ID": "", "ENTITLEMENT_TYPE": "", "ENTITLEMENT_DISPLAY_VALUE": "", "ENTITLEMENT_VALUE_CODE": "", "SERVICE_ID": "",  "QTEREV_ID": "", "ENTITLEMENT_DESCRIPTION": "", "ENTITLEMENT_NAME": "", "ENTITLEMENT_ID": "","SESSION_ID":"","CPQTABLEENTRYADDEDDATE" : "" , "CPQTABLEENTRYMODIFIEDDATE" : "", "CPQTABLEENTRYMODIFIEDBY" : "", "CPQTABLEENTRYADDEDBY" : "","EQUIPMENT_ID":""}],'''
            
        Final_json = '{"CPQ_Columns": {'+final_json[:-1]+'}}'
        #INC09353586-start
        Final_json = Final_json.replace("'",'').replace('"]"','"]').replace('"["','["').replace("\\",'').replace("Â Â  ","").replace("Â Â Â  ","").replace("  ","").replace("	","").replace("	","")
        #INC09353586-end
        Hadoop_response = ''
        if len(Final_json)>0:           

            #OAUTH AUTHENTICATION
            try:
                Oauth_info = SqlHelper.GetFirst("SELECT  DOMAIN,URL FROM SYCONF where EXTERNAL_TABLE_NAME ='OAUTH'")
                requestdata =Oauth_info.DOMAIN
                webclient = System.Net.WebClient()
                webclient.Headers[System.Net.HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded"
                response = webclient.UploadString(Oauth_info.URL,str(requestdata))

            except:
                Log.Info("except in Hadoop--->")
                time.sleep(5)
                Oauth_info = SqlHelper.GetFirst("SELECT  DOMAIN,URL FROM SYCONF where EXTERNAL_TABLE_NAME ='OAUTH'")
                requestdata =Oauth_info.DOMAIN
                webclient = System.Net.WebClient()
                webclient.Headers[System.Net.HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded"
                response = webclient.UploadString(Oauth_info.URL,str(requestdata))

            response = eval(response)
            access_token = response['access_token']

            LOGIN_CREDENTIALS = SqlHelper.GetFirst("SELECT USER_NAME as Username,Password,Domain FROM SYCONF where Domain='AMAT_TST'")
            
            if LOGIN_CREDENTIALS is not None:
                Login_Username = str(LOGIN_CREDENTIALS.Username)
                Login_Password = str(LOGIN_CREDENTIALS.Password)
                authorization = Login_Username+":"+Login_Password
                binaryAuthorization = UTF8.GetBytes(authorization)
                authorization = Convert.ToBase64String(binaryAuthorization)
                authorization = "Basic " + authorization

                LOGIN_CRE = SqlHelper.GetFirst("SELECT  URL FROM SYCONF where EXTERNAL_TABLE_NAME ='CPQ_TO_HADOOP'")
                
                #INC08719610 starts
                
                header={'authorization':""+str(authorization),'bearertoken':""+str(access_token)}
                Contenttype="application/json"
                #INC09353586-start
                try:
                    Hadoop_response = RestClient.Post(str(LOGIN_CRE.URL), Final_json, header,Contenttype, compressBody)
                except:
                    pass
                #INC09353586-end
                StatusUpdateQuery = SqlHelper.GetFirst(""+ str(Parameter1.QUERY_CRITERIA_1)+ "  A SET HADOOP_FLAG = ''True'' FROM SAQTMT(NOLOCK) A WHERE QUOTE_ID=''"+str(Qt_ID)+"''  '")
                
                StatusUpdateQuery = SqlHelper.GetFirst(""+ str(Parameter1.QUERY_CRITERIA_1)+ "  A SET HADOOP = ''True'' FROM SAQTRV(NOLOCK) A WHERE QUOTE_ID=''"+str(Qt_ID)+"'' AND QTEREV_ID IN ("+str(Revision[:-1])+") '")
                
                #INC08719610 ends
            
            if "successfully" in Hadoop_response: 
            
                ApiResponse = ApiResponseFactory.JsonResponse({"Response": [{"Status": "200", "Message": "Data successfully uploaded"}]})
            
            else:
                ApiResponse = ApiResponseFactory.JsonResponse({"Response": [{"Status": "200", "Message": "Error in Hadoop response"}]})
        else:
            ApiResponse = ApiResponseFactory.JsonResponse({"Response": [{"Status": "200", "Message": "Data not available"}]})

    if data_check_flag == 0:
        ApiResponse = ApiResponseFactory.JsonResponse({"Response": [{"Status": "200", "Message": "Data not available"}]})
except:
    Table_Name = 'SAQIEN_INBOUND'
            
    TempTable = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Table_Name)+"'' ) BEGIN DROP TABLE "+str(Table_Name)+" END'")
    Log.Info("QTPOSTCQHD ERROR(11/05/2202)---->:" + str(sys.exc_info()[1]))
    Log.Info("QTPOSTCQHD ERROR LINE NO---->:" + str(sys.exc_info()[-1].tb_lineno))
    ApiResponse = ApiResponseFactory.JsonResponse({"Response": [{"Status": "400", "Message": str(sys.exc_info()[1])}]})
    #ApiResponse =ApiResponseFactory.JsonResponse({"Response": [{"Status": "400", "Message": str(sys.exc_info()[1])}]})